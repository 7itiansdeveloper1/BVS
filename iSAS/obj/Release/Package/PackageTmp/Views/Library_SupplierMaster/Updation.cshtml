@model ISas.Entities.LibraryEntities.Library_SupplierMasterModels

<script src="~/bower_components/datatables.net/js/dataTables.buttons.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.flash.min.js"></script>
<script src="~/bower_components/datatables.net/js/jszip.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.print.min.js"></script>
<script src="~/bower_components/datatables.net/js/pdfmake.min.js"></script>
<script src="~/bower_components/datatables.net/js/vfs_fonts.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.html5.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.colVis.min.js"></script>
<script src="~/bower_components/datatables.net/js/dataTables.select.min.js"></script>
<link rel="stylesheet" href="~/bower_components/datatables.net/css/buttons.dataTables.min.css">

<section class="content-header">
    <h1>
        Supplier Master <small>(UPDATE)</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li><a href="@Url.Action("New", "Library_Setup/New")">Library</a></li>
        <li><a href="@Url.Action("New", "Library_SupplierMaster")">Supplier Master</a> </li>
        <li>Update</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Library_SupplierMaster_CRUD", "Library_SupplierMaster", FormMethod.Post, htmlAttributes: new { }))
    {
        @Html.HiddenFor(r => Model.SupplierId)

        <div class="box box-warning">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierName)<i class="mandateLbl">*</i></label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.SupplierName, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(r => Model.SupplierName, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierContact)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.SupplierContact, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(r => Model.SupplierContact, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierAdd)</label>
                            <div class="select">
                                @Html.TextAreaFor(m => m.SupplierAdd, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(r => Model.SupplierAdd, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">

                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierCountry)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.SupplierCountry, new SelectList(Model.CountryList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "getStateListByCountry('SupplierCountry', 'SupplierState', 'SupplierCity')" })
                                @Html.ValidationMessageFor(r => Model.SupplierCountry, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierState)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.SupplierState, new SelectList(Model.StateList, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "getCityListByState('SupplierState', 'SupplierCity')" })
                                @Html.ValidationMessageFor(r => Model.SupplierState, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SupplierCity)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.SupplierCity, new SelectList(Model.CityList, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.SupplierCity, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="checkbox">
                            <br /> <label>
                                @Html.CheckBoxFor(r => Model.IsActive) Active
                            </label>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer">
                <button class="btn btn-warning" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">UPDATE</button>
                <button class="btn btn-default" type="button" onclick="window.location.reload()">RESET</button>
            </div>
        </div>

        <div class="" id="liblistMainDiv">
            @{ Html.RenderAction("LandingPage", "Library_SupplierMaster", new { }); }
        </div>
    }
</section>

<script>
    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    setTimeout(function () { window.location = "../Library_SupplierMaster/New"; }, $('#hddnReloadTime').val());
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>
