@model ISas.Entities.LibraryEntities.Library_TransactionModels

<section class="content-header">
    <h1>
        Library Transaction
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Library</li>
        <li class="active">Library Transaction </li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Library_Transaction_CRUD", "Library_Transaction", FormMethod.Post, htmlAttributes: new { @class = "" }))
    {
        @Html.Hidden("hddnIssueBookCount", 0)
        @Html.HiddenFor(r => Model.TransactionType)

        <div class="row">
            <div class="col-md-6">
                @{ Html.RenderAction("_StudentSearchPartial", "Common"); }
            </div>
            <div class="col-md-6">
                <div class="box box-primary">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.LibraryId)</span>
                                    @Html.DropDownListFor(m => m.LibraryId, Model.LibraryList, htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                    @Html.ValidationMessageFor(r => Model.LibraryId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.TransID)</span>
                                    @Html.TextBoxFor(m => m.TransID, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(r => Model.TransID, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.TransDate)</span>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(m => m.TransDate, htmlAttributes: new { @class = "form-control pull-right date" })
                                        @Html.ValidationMessageFor(r => Model.TransDate, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-md-12">
                <div class="nav-tabs-custom">
                    <ul class="nav nav-tabs">
                        <li class="active"><a href="#tab1" data-toggle="tab" aria-expanded="true">Book Issue</a></li>
                        <li class=""><a href="#tab2" data-toggle="tab" aria-expanded="false">Book Return</a></li>
                    </ul>
                    <div class="tab-content">
                        <div class="tab-pane active" id="tab1">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="box box-success">
                                        <div class="box-body">
                                            @Html.Partial("_Library_Transaction_BookIssue", Model)
                                        </div>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="box box-success">
                                        <div style="max-height:180px;min-height:180px;overflow-y:scroll;">
                                            <div id="issueBookDetailsMainDiv">
                                                @Html.Partial("_BookIssueDetials", Model)
                                            </div>
                                        </div>
                                        <div class="box-footer">
                                            <input type="button" value="ISSUE BOOK" onclick="$('#TransactionType').val('I'); DoAjaxPostAndMore(this);" class="btn btn-success pull-right" />
                                            <span class="pull-right" style="position: absolute;bottom: 5%;right:21%;"> No of Book : <strong id="issueBookCount" class="text-primary">0</strong> </span>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                        <div class="tab-pane" id="tab2">
                            <div class="box box-success">
                                <div class="box-body">
                                    <div class="row">
                                        <div class="col-md-6">
                                            @Html.Partial("_Library_Transaction_BookReturn", Model)
                                        </div>
                                        <div class="col-md-6">
                                            <input type="button" value="RETURN BOOK" onclick="$('#TransactionType').val('R'); DoAjaxPostAndMore_BookReturn(this);" class="btn btn-success btn-sm pull-right" id="btnIssueReturn" disabled="disabled" />
                                        </div>
                                    </div>
                                    <br />
                                    <div class="row">
                                        <div class="col-md-12">
                                            <div id="bookReturnDetailsMainDiv" style="min-height:200px;max-height:200px;overflow:scroll;">
                                                @Html.Partial("_BookReturnDetials", Model)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <!-- /.tab-pane -->
                    </div>
                    <!-- /.tab-content -->
                </div>
                <!-- /.nav-tabs-custom -->
            </div>
        </div>
    }
</section>


<script>
    function CheckToSelectAllReturnBook() {
        if ($('#chkBoxAllReturnBook').is(':checked')) {
            $('.chkBoxReturnBook').prop('checked', true);
        } else {
            $('.chkBoxReturnBook').prop('checked', false);
        }
        checkToEnableIssueReturnBtn();
    }

    $(document).ready(function () {
        $('#rw_space').css('display', 'none');
        $('#rwFee_Mobile').css('display', 'none');
        $('#rw_space1').css('display', 'none');
        $('#rw_FatherName').css('display', 'none');

        // $('.disabledFeilds').attr('disabled', true);
    });

    function onStudentChangeFunction() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Library_Transaction/_BookReturnDetials",
            data: { LibId: $('#LibraryId').val(), ERPNo: $('#StudentId').val(), ReturnDate: $('#TransDate').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                $('#bookReturnDetailsMainDiv').html(result);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function EmptyValForNewStudent() {
       
    }

    function EmptyValForNewStudent_NEW() {
        $('#ERPNo').val("");
        $('#AdmNo').val("");

        $('#ClassId').val(null);
        $('#SectionId').val(null);
        $('#StudentId').val(null);


        $('#select2-ClassId-container').html('--Select--');
        document.getElementById('select2-ClassId-container').title = '--Select--';

        $('#SectionId').empty();
        $('#StudentId').empty();
        $('#issueBookCount').html('0');
        $('#tblBookIssueDetails > tbody').html('');
        $('#bookReturnDetailsMainDiv').html('');
    }

    function emptyBookIssueDetails() {
        $('#BookIssueDetails_AccNo').val("");
        $('#BookIssueDetails_BookName').val("");
        $('#BookIssueDetails_AuthorName').val("");
    }

    function AddBookToIssueList()
    {
        if ($('#BookIssueDetails_AccNo').val() != "" && $('#BookIssueDetails_BookName').val() != "") {
            $.ajax({
                type: "POST",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../Library_Transaction/_BookIssueDetials",
                data: {
                    AccNo: $('#BookIssueDetails_AccNo').val(), BookName: $('#BookIssueDetails_BookName').val(),
                    AuthorName: $('#BookIssueDetails_AuthorName').val(), IssuedDays: $('#BookIssueDetails_IssueDays').val()
                },
                success: function (result) {
                    emptyBookIssueDetails();
                    $('#issueBookDetailsMainDiv').html(result);
                },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                complete: function () {
                    spinnerHide();
                }
            });
        } else {
            OpenMessegeAutoHideDiv('No book selected..!', "Info");
        }
    }


    $('#ReturnAccNo').keypress(function (e) {
        if (e.which == 13) {
            $('#tblBooReturnDetails > tbody > tr').each(function (i) {
                if ($('#BookReturnDetails_' + i + '__AccNo').val() == $('#ReturnAccNo').val()) {
                    $('#BookReturnDetails_' + i + '__Selected').prop('checked', true);
                }
            });
            $('#ReturnAccNo').val('');
            checkToEnableIssueReturnBtn();
        }
    });


    function checkToEnableIssueReturnBtn() {
        var selectedRowCount = 0; var fineAmount = parseInt(0);
        $('#tblBooReturnDetails > tbody > tr').each(function (i) {
            if ($('#BookReturnDetails_' + i + '__Selected').is(':checked')) {
                fineAmount += parseInt($('#BookReturnDetails_' + i + '__Fine').val());
                selectedRowCount++;
            }
        });
        if (parseInt(selectedRowCount) > 0 && parseInt(fineAmount) == 0) {
            $('#btnIssueReturn').prop('disabled', false);
        } else {
            $('#btnIssueReturn').prop('disabled', true);
        }
    }


    $('#BookIssueDetails_AccNo').keypress(function (e) {
        if (e.which == 13) {
            if ($('#BookIssueDetails_AccNo').val() == null || $('#BookIssueDetails_AccNo').val() == "") {
                OpenMessegeAutoHideDiv('Please enter Acc No ..!', "Info");
                return false;
            }
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../Library_Transaction/GetBookDetails",
                data: { AccNo: $('#BookIssueDetails_AccNo').val(), LibID: $('#LibraryId').val() },
                success: function (result) {
                    if (result.IssueStatus) {
                        OpenMessegeAutoHideDiv('This book is already issued, ..!', 'Info');
                        $('#BookIssueDetails_AccNo').val('');
                        $('#BookIssueDetails_BookName').val('');
                        $('#BookIssueDetails_AuthorName').val('');
                    } else {
                        $('#BookIssueDetails_BookName').val(result.BookName);
                        $('#BookIssueDetails_AuthorName').val(result.AuthorName);
                    }
                },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                complete: function () {
                    spinnerHide();
                }
            });
        }
    });

    function DoAjaxPostAndMore_BookReturn(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                OpenMessegeAutoHideDiv(response.Msg, response.Color);
                EmptyValForNewStudent_NEW();
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function DoAjaxPostAndMore(btnClicked) {
        if ($('#StudentId').val() == null || $('#StudentId').val() == "") {
            OpenMessegeAutoHideDiv('No student selected..!', "Info");
            return false;
        }
        if ($('#hddnIssueBookCount').val() > 0) {
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                beforeSend: function () {
                    spinnerShow();
                },
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    EmptyValForNewStudent_NEW();
                },
                complete: function () {
                    spinnerHide();
                }
            });
            return false;
        } else {
            OpenMessegeAutoHideDiv('No book added to issue..!', "Info");
            return false;
        }
    }
</script>
