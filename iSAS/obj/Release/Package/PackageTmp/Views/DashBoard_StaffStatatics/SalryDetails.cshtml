@model  List<ISas.Entities.DashboardEntities.SalaryDetailsModel>
<style>
    #chartdiv {
        width: 100%;
        height: 300px;
        font-size: 11px;
    }
</style>

<section class="content-header">
    <h1>Book Details</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li class="active">Book Details</li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body">
                    <table id="example1" class="table table-responsive table-bordered table-condensed display nowrap" style="width:100%;">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Salary Month</th>
                                <th>In-Hand</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ int count = 1;
                                for (int i = 0; i < Model.Count; i++)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(r => count)</td>
                                        <td>@Html.DisplayFor(r => Model[i].SalMonthName)</td>
                                        <td>@Html.DisplayFor(r => Model[i].InHand)</td>
                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-header">
                    <h5 class="box-title">Session (2018-2019)</h5>
                </div>
                <div class="box-body">
                    <div id="chartdiv"></div>
                </div>
            </div>
        </div>
    </div>
</section>


<script src="~/bower_components/newchart.js/amcharts.js"></script>
<script src="~/bower_components/newchart.js/export.min.js"></script>
<script src="~/bower_components/newchart.js/light.js"></script>
<script src="~/bower_components/newchart.js/pie.js"></script>
<script src="~/bower_components/newchart.js/serial.js"></script>
<link href="~/bower_components/newchart.css/export.css" rel="stylesheet" />

<script>
    $('#example1').DataTable({});

    $(function () {
        GetGraphData();
    });
    function GetGraphData() {
        $.ajax({
            url: "../DashBoard_StaffStatatics/GetSalaryDetails",
            beforeSend: function () {
                spinnerShow();
            },
            type: 'GET',
            contentType: 'application/json',
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val());
            },
            success: function (result) {
                var chart = AmCharts.makeChart("chartdiv", {
                    "type": "serial",
                    "theme": "light",
                    "dataProvider": result,
                    "valueAxes": [{
                        "gridColor": "#FFFFFF",
                        "gridAlpha": 0.2,
                        "dashLength": 0
                    }],
                    "gridAboveGraphs": true,
                    "startDuration": 1,
                    "graphs": [{
                        "balloonText": "[[category]]: <b>[[value]]</b>",
                        "fillAlphas": 0.8,
                        "lineAlpha": 0.2,
                        "type": "column",
                        "valueField": "visits"
                    }],
                    "chartCursor": {
                        "categoryBalloonEnabled": false,
                        "cursorAlpha": 0,
                        "zoomable": false
                    },
                    "categoryField": "country",
                    "categoryAxis": {
                        "gridPosition": "start",
                        "gridAlpha": 0,
                        "tickPosition": "start",
                        "tickLength": 20
                    },
                    "export": {
                        "enabled": true
                    }

                });
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>