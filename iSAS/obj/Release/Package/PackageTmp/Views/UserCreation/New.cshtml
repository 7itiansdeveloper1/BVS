@model ISas.Entities.UserEntities.UserCreationModels

<section class="content-header">
    <h1>
        User Setup
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>School</li>
        <li class="active">User Setup</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("UserCreation_CRUD", "UserCreation", FormMethod.Post, htmlAttributes: new { }))
    {
        @Html.HiddenFor(r => Model.SelectedUserOrStaffID)
        @Html.HiddenFor(r=> Model.Mode)

        <div class="box box-primary">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <label for="">@Html.LabelFor(r => Model.UserType)</label>
                        <div class="radio">
                            <label>@Html.RadioButtonFor(r => Model.UserType, "Staff", htmlAttributes: new { onchange = "getUserTypes()" }) Staff</label>
                            <label>@Html.RadioButtonFor(r => Model.UserType, "Student", htmlAttributes: new { onchange = "getUserTypes()" }) Student</label>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.RoleID)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.RoleID, new SelectList(Model.UserRoleList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.RoleID, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="studOrStaffDetailsMainDiv">
            @Html.Partial("LandingPage", Model)
        </div>
    }
</section>
<script>
    function getUserTypes() {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../UserCreation/LandingPage',
            data: { UserType: $('input[name=UserType]:checked').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#studOrStaffDetailsMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }


    function DoAjaxPostAndMore(btnClicked) {

        if ($('#Mode').val() == 'SAVE') {
            if ($('#RoleID').val() == null || $('#RoleID').val() == "") {
                OpenMessegeAutoHideDiv('Please Select User Role First..!', 'Info');
                return false;
            }
        }

        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    getUserTypes();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function ResetPasswordConfirm(Evt) {
        AsyncConfirmYesNo("Confirmation", "Are you sure to Reset Password?", MyYesFunction, MyNoFunction, Evt);
    }

    function MyYesFunction(Evt) {
        DoAjaxPostAndMore(Evt);
    }
    function MyNoFunction() {
        //alert('No Calling');
    }
</script>

