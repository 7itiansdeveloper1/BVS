@model ISas.Entities.FeesEntities.FeeReceiptModel
@using ISas.Web.Models;
@{
    ViewBag.Title = "Fee Receipt";
    var paymentModes = new List<SelectListItem>();
    paymentModes.Add(new SelectListItem { Text = "CASH", Value = "CH", Selected = true });
    paymentModes.Add(new SelectListItem { Text = "CHEQUE", Value = "CE" });
    paymentModes.Add(new SelectListItem { Text = "ONLINE", Value = "OE" });
}

<script src="~/bower_components/datatables.net/js/dataTables.buttons.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.flash.min.js"></script>
<script src="~/bower_components/datatables.net/js/jszip.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.print.min.js"></script>
<script src="~/bower_components/datatables.net/js/pdfmake.min.js"></script>
<script src="~/bower_components/datatables.net/js/vfs_fonts.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.html5.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.colVis.min.js"></script>
<script src="~/bower_components/datatables.net/js/dataTables.select.min.js"></script>
<link rel="stylesheet" href="~/bower_components/datatables.net/css/buttons.dataTables.min.css">

<section class="content-header">
    <h1>New Fee Receipt</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li><a href="#">Fee</a></li>
        <li class="active">New Fee Receipt</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("FeeReceipt_CRUD", "Fee_Transaction", FormMethod.Post, htmlAttributes: new { }))
    {
        <div class="row">
            <div class="col-md-6">
                @{Html.RenderAction("_StudentSearchPartial", "Common"); }
            </div>
            <div class="col-md-6">
                <div class="box box-success">
                    <div class="box-header with-border">
                        <div class="row">
                            <div class="col-md-6">
                                <h5 class="box-title">Payment Details</h5>
                            </div>
                            <div class="col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.ReceiptDate)</span>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(m => m.ReceiptDate, htmlAttributes: new { @class = "form-control pull-right date", onchange = "getUnpaidInstallmentDetails()" })
                                        @Html.ValidationMessageFor(r => Model.ReceiptDate, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                    <div class="box-body">
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.FeeModeId)</span>
                                    @Html.DropDownListFor(m => m.FeeModeId, new SelectList(paymentModes, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "CheckToDisableFeild()" })
                                    @Html.ValidationMessageFor(r => Model.FeeModeId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group" style="">
                                    <span class="input-group-addon"><i class="fa fa-rupee"></i> </span>
                                    @Html.TextBoxFor(m => m.TrnAmount, htmlAttributes: new { @class = "form-control", @readonly = true, style = "font-size:x-large;font-weight:500;color:red;" })
                                    @Html.ValidationMessageFor(r => Model.TrnAmount, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.SelectedBankId)</span>
                                    @Html.DropDownListFor(m => m.SelectedBankId, new SelectList(Model.BankList, "Value", "Text"), "--SELECT--", htmlAttributes: new { @class = "form-control select2 otherThanCash", style = "width:100%;" })
                                    @Html.ValidationMessageFor(r => Model.SelectedBankId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.BranchName)</span>
                                    @Html.TextBoxFor(m => m.BranchName, htmlAttributes: new { @class = "form-control otherThanCash" })
                                    @Html.ValidationMessageFor(r => Model.BranchName, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                &nbsp;
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.TransactionNo)</span>
                                    @Html.TextBoxFor(m => m.TransactionNo, htmlAttributes: new { @class = "form-control otherThanCash" })
                                    @Html.ValidationMessageFor(r => Model.TransactionNo, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.TransactionDate)</span>
                                    <div class="input-group date">
                                        <div class="input-group-addon">
                                            <i class="fa fa-calendar"></i>
                                        </div>
                                        @Html.TextBoxFor(m => m.TransactionDate, htmlAttributes: new { @class = "form-control pull-right date otherThanCash" })
                                        @Html.ValidationMessageFor(r => Model.TransactionDate, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">
                                <strong> Sibling Details : </strong>
                                <p class="text-sm" id="siblingNameHtml"></p>
                            </div>
                            <div class="col-md-3">
                                <strong>Last Receipt No : </strong>
                                <p class="text-sm" id="lastReceiptNoHtml"></p>
                            </div>
                            @*<div class="col-xs-12 col-sm-6 col-md-4">
                                    <div class="form-group">
                                        <div class="radio pull-right">
                                            <label>@Html.CheckBoxFor(m => m.IsPrintOnSave, htmlAttributes: new { }) Print On Save</label>
                                            @Html.ValidationMessageFor(r => Model.IsPrintOnSave, null, htmlAttributes: new { style = "color:red;" })
                                        </div>
                                    </div>
                                </div>*@
                            <div class="col-xs-12 col-sm-6 col-md-3">
                                <div class="form-group pull-right">
                                    <h5><input type="button" onclick="DoAjaxPostAndMore(this)" class="btn btn-success btn-sm" value="COLLECT FEE" /></h5>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title">Fee Details</h5>
                <h5 class="box-title pull-right" id="transLink"><input type="button" value="Transport" class="btn btn-default btn-sm" disabled="disabled" /></h5>
                <h5 class="box-title pull-right" id="miscLink"><input type="button" value="Miscellaneous" class="btn btn-default btn-sm" disabled="disabled" /></h5>
                <h5 class="box-title pull-right" id="concesLink"><input type="button" value="Concession" class="btn btn-default btn-sm" disabled="disabled" /></h5>
                <h5 class="box-title pull-right" id="ledgerLink"><input type="button" id="btnLedgerDetails" onclick="getLedgerDetails_ByERPNo()" value="Ledger" class="btn btn-default btn-sm" disabled="disabled" /></h5>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-6">
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group" style="">
                                    <span class="input-group-addon">@Html.LabelFor(r => Model.InstallmentId)</span>
                                    @Html.DropDownListFor(m => m.InstallmentId, new SelectList(Model.InstallmentList, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "getUnpaidInstallmentDetails()" })
                                    @Html.ValidationMessageFor(r => Model.InstallmentId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="input-group">
                                    <div class="radio">
                                        <label>@Html.RadioButtonFor(m => m.FeeType, "FT", htmlAttributes: new { @checked = "checked", title = "Fee & Transport", onchange = "getUnpaidInstallmentDetails()" }) Both</label>
                                        <label>@Html.RadioButtonFor(m => m.FeeType, "F", htmlAttributes: new { onchange = "getUnpaidInstallmentDetails()" }) Fee </label>
                                        <label>@Html.RadioButtonFor(m => m.FeeType, "T", htmlAttributes: new { onchange = "getUnpaidInstallmentDetails()" }) Transport</label>
                                        <label>@Html.RadioButtonFor(m => m.FeeType, "B", htmlAttributes: new { onchange = "getUnpaidInstallmentDetails()" }) Balance</label>
                                        <label>@Html.RadioButtonFor(m => m.FeeType, "CF", htmlAttributes: new { onchange = "getUnpaidInstallmentDetails()" }) Current Fee</label>
                                        @Html.ValidationMessageFor(r => Model.FeeType, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-12">
                                <div class="" id="feeHeadDetailsMainDiv" style="height:150px;overflow-y:scroll;">
                                    <table class="table table-responsive table-hover table-bordered table-condensed">
                                        <thead>
                                            <tr>
                                                <th>Head</th>
                                                <th>Amount</th>
                                            </tr>
                                        </thead>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-6">
                        <table class="table table-responsive table-hover table-bordered table-condensed">
                            <tbody>
                                <tr>
                                    <td>@Html.LabelFor(r => Model.AmountToPay)</td>
                                    <td>@Html.TextBoxFor(r => Model.AmountToPay, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                                    <td>@Html.LabelFor(r => Model.Discount)</td>
                                    <td>
                                        @Html.TextBoxFor(r => Model.Discount, htmlAttributes: new { @class = "form-control", onchange = "CalculateDueAmount()", onkeypress = "return NumericOnly(event)" })
                                        @Html.ValidationMessageFor(r => Model.Discount, null, htmlAttributes: new { style = "color:red;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(r => Model.LateFee)</td>
                                    <td>@Html.TextBoxFor(r => Model.LateFee, htmlAttributes: new { @class = "form-control", onchange = "CalculateDueAmount()", onkeypress = "return NumericOnly(event)" })</td>

                                    <td>@Html.LabelFor(r => Model.PaidAmount)</td>
                                    <td>
                                        @Html.TextBoxFor(r => Model.PaidAmount, htmlAttributes: new { @class = "form-control", onkeyup = "OnInhandChange()", onkeypress = "return NumericOnly(event)" })
                                        @Html.ValidationMessageFor(r => Model.PaidAmount, null, htmlAttributes: new { style = "color:red;" })
                                    </td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(r => Model.Advance)</td>
                                    <td>@Html.TextBoxFor(r => Model.Advance, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>

                                    <td>@Html.LabelFor(r => Model.Balance)</td>
                                    <td>@Html.TextBoxFor(r => Model.Balance, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                                </tr>
                                <tr>
                                    <td>@Html.LabelFor(r => Model.NetPay)</td>
                                    <td>@Html.TextBoxFor(r => Model.NetPay, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                                    <td>@Html.LabelFor(r => Model.Excess)</td>
                                    <td>@Html.TextBoxFor(r => Model.Excess, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary" id="receiptDivMain">
                <div class="box-header with-border">
                    <h3 class="box-title">Fee Receipts</h3>
                    @*<div class="box-tools pull-right">
                            <button id="btnReceiptDetails" onclick="getReceiptDetails()" type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-plus"></i>
                            </button>
                        </div>*@
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div id="receiptDetailsMainDiv">
                        &nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary" id="transportDivMain">
                <div class="box-header with-border">
                    <h3 class="box-title">Transport Receipts</h3>
                    @*<div class="box-tools pull-right">
                            <button id="btnTransportDetails" onclick="getTransportDetails()" type="button" class="btn btn-box-tool" data-widget="collapse">
                                <i class="fa fa-plus"></i>
                            </button>
                        </div>*@
                </div>
                <!-- /.box-header -->
                <div class="box-body">
                    <div id="transportDetailsMainDiv">
                        &nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary collapsed-box" id="ledgerDivMain">
                <div class="box-header with-border">
                    <h3 class="box-title">Ledger Details</h3>
                    <div class="box-tools pull-right">
                        <button id="btnLedgerDetails" onclick="getLedgerDetails()" type="button" class="btn btn-box-tool" data-widget="collapse">
                            <i class="fa fa-plus"></i>
                        </button>

                    </div>
                </div>
                <!-- /.box-header -->
                <div class="box-body" style="display: none;">
                    <div id="ledgerDetailsMainDiv">
                        &nbsp;
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    $(document).ready(function () {
        $("input[type='text']").on("click", function () {
            $(this).select();
        });
        CheckToDisableFeild();

        if ('@ViewBag.erpNo' != null && '@ViewBag.erpNo' != "") {
            $('#ERPNo').val('@ViewBag.erpNo');
            checkToCallFunction($('#ERPNo').val(), '');
        }

        getlastReceiptNo();
    });
    function onStudentChangeFunction() {
        getUnpaidInstallment();
        getReceiptDetails();
        getTransportDetails();
    }

    function getReceiptDetails() {
        if ($('#StudentId').val() != null && $('#StudentId').val() != '') {
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../Fee_Transaction/_ReceiptDetails_ByERPNo",
                data: { erpno: $('#StudentId').val() },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    $('#receiptDetailsMainDiv').html(response);
                },
                complete: function () {
                    spinnerHide();
                }
            });
        }
    }


    function getTransportDetails() {
        if ($('#StudentId').val() != null && $('#StudentId').val() != '') {
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../Fee_Transaction/_TransportDetails_ByERPNo",
                data: { erpno: $('#StudentId').val() },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    $('#transportDetailsMainDiv').html(response);
                },
                complete: function () {
                    spinnerHide();
                }
            });
        }
    }



    function getLedgerDetails() {
        if ($('#StudentId').val() != null && $('#StudentId').val() != '') {
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../StudentFeeDetails/_StudentLedger",
                data: { erpno: $('#StudentId').val() },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    $('#ledgerDetailsMainDiv').html(response);
                },
                complete: function () {
                    spinnerHide();
                }
            });
        }
    }

    function CheckToDisableFeild() {
        var trnMode = $('#FeeModeId').val();
        if (trnMode == 'CH') {
            $('#SelectedBankId').val(null).change();
            $('#BranchName').val('');
            $('#TransactionNo').val('');
            $('#TransactionDate').val('');
            $('.otherThanCash').attr('disabled', true);
        } else {
            $('.otherThanCash').attr('disabled', false);
        }
        //
    }
    function getUnpaidInstallment() {
        if ($('#StudentId').val() != '' && $('#StudentId').val() != null) {
            var installmentHTML = '';
            $.ajax({
                type: "GET",
                url: "../Fee_Transaction/GetUnpaidInstallmentList",
                data: { ErpNo: $('#StudentId').val(), SessionId: $('#SessionId').val(), FeeMode: $('input[name=FeeType]:checked').val() },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        if (result[i].Selected) {
                            installmentHTML += '<option Selected = ' + result[i].Selected + ' value=' + result[i].Value + '>' + result[i].Text + '</option>';
                        } else {
                            installmentHTML += '<option  value=' + result[i].Value + '>' + result[i].Text + '</option>';
                        }
                    }
                    $('#InstallmentId').html(installmentHTML);
                   // EmptyLedgerAndReceiptDetails();
                    getUnpaidInstallmentDetails();
                },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
            });
        }
    }

    function EmptyLedgerAndReceiptDetails() {
        if ($('#ledgerDivMain').hasClass("collapsed-box")) {
        } else {
            $('#btnLedgerDetails').click();
        }

        if ($('#receiptDivMain').hasClass("collapsed-box")) {
        } else {
            $('#btnReceiptDetails').click();
        }

        if ($('#receiptDivMain').hasClass("collapsed-box")) {
        } else {
            $('#btnTransportDetails').click();
        }

        $('#receiptDetailsMainDiv').html('');
        $('#ledgerDetailsMainDiv').html('');
    }

    function getUnpaidInstallmentDetails() {
        if ($('#StudentId').val() != '' && $('#StudentId').val() != null) {
            $.ajax({
                type: "GET",
                url: "../Fee_Transaction/_FeeInstallmentDetails",
                data: { ErpNo: $('#StudentId').val(), SessionId: $('#SessionId').val(), DueDate: $('#InstallmentId').val(), FeeMode: $('input[name=FeeType]:checked').val(), TransactionDate: $('#ReceiptDate').val() },
                success: function (result) {
                    $('#feeHeadDetailsMainDiv').html(result);
                },
            });
        }
    }

    function CalculateDueAmount() {
        var dueAmt = parseInt($('#AmountToPay').val());
        var discount = parseInt($('#Discount').val());
        var lateFee = parseInt($('#LateFee').val());
        var advance = parseInt($('#Advance').val());
        //var netPay = //parseInt($('#NetPay').val());

        var netPay = (dueAmt + lateFee) - advance;
        $('#NetPay').val(netPay);

       // alert(lateFee);

        //if (discount = null || discount == "") {
        //    discount = 0;
        //}
        //if (lateFee = null || lateFee == "") {
        //    lateFee = 0;
        //}

        var inhandAmt = (dueAmt + lateFee) - (discount + advance);
       // alert(inhandAmt);
        var adjustmentAmt = (netPay - (inhandAmt + discount));
        if (adjustmentAmt > 0) {
            $('#Balance').val(adjustmentAmt);
            $('#Excess').val(0);
        } else if (adjustmentAmt < 0) {
            $('#Excess').val((adjustmentAmt) * -1);
            $('#Balance').val(0);
        } else {
            $('#Balance').val(0);
            $('#Excess').val(0);
        }

        $('#PaidAmount').val(inhandAmt);
        $('#TrnAmount').val(inhandAmt);
    }

    function OnInhandChange() {
        var dueAmt = parseInt($('#AmountToPay').val());
        var discount = parseInt($('#Discount').val());
        var lateFee = parseInt($('#LateFee').val());
        var advance = parseInt($('#Advance').val());
        var netPay = parseInt($('#NetPay').val());
        var inhandAmt = parseInt($('#PaidAmount').val());

        var adjustmentAmt = (netPay - (inhandAmt + discount));
        if (adjustmentAmt > 0) {
            $('#Balance').val(adjustmentAmt);
            $('#Excess').val(0);
        } else if (adjustmentAmt < 0) {
            $('#Excess').val((adjustmentAmt) * -1);
            $('#Balance').val(0);
        } else {
            $('#Balance').val(0);
            $('#Excess').val(0);
        }
        $('#PaidAmount').val(inhandAmt);
        $('#TrnAmount').val(inhandAmt);
    }


    function CancelOrDeleteReceiptConfirm(ReceiptNo, Mode) { //ErpNo
        var param = [ReceiptNo, Mode];
        AsyncConfirmYesNo("Confirmation", "Are you sure to '" + Mode + "' Receipt No '" + ReceiptNo + "'?", MyYesFunction, MyNoFunction, param);
    }

    function MyYesFunction(param) {
        var ReceiptNo = param[0];;
       // var ErpNo = param[1];;
        var Mode = param[1];

        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Fee_Transaction/FeeReceipt_CancelOrDelete",
            data: { ERPNo: $('#StudentId').val(), SessionId: $('#SessionId').val(), ReceiptNo: ReceiptNo, Mode: Mode},
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg);
                getReceiptDetails();
                getTransportDetails();
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }



    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    $.ajax({
                        type: "GET",
                        url: "../Fee_Transaction/_EncodedViewRctLink",
                        data: { ReceiptNo: response.ReceiptNo, StudentId: $('#StudentId').val() },
                        success: function (result) {
                            window.open(result);
                        },
                    });
                    $('#ClassId').val(null).change();
                    $('#SectionId').html('<option value="">--Select--</option>');
                    $('#SectionId').val(null);
                    EmptyValForNewStudent();
                    getlastReceiptNo();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val(), 'Info');
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function getlastReceiptNo() {
        $.ajax({
            type: "GET",
            url: "../Fee_Transaction/Get_LastReceiptNo",
            data: { },
            success: function (result) {
                $('#lastReceiptNoHtml').html(result);
            },
        });
    }

    function EmptyValForNewStudent() {
        $('#ERPNo').val(null);
        $('#AdmNo').val(null);
        $('#FatherName').val(null);
        $('#MotherName').val(null);
        $('#MobileNo').val(null);
        $('#FeeCategory').val(null);
        $('#FeeCategory').val(null);

        $('#StudentId').html('');
        $('#StudentId').val(null).change();

        $('#InstallmentId').html('');
        $('#InstallmentId').val(null).change();
        $('#feeHeadDetailsMainDiv').html('');

        $('#TrnAmount').val(0);
        $('#FeeModeId').val('CH').change();
        $('#SelectedBankId').val(null).change();
        $('#BranchName').val(null);
        $('#TransactionNo').val(null);

        $('#AmountToPay').val(0);
        $('#Advance').val(0);
        $('#NetPay').val(0);
        $('#Discount').val(0);
        $('#Balance').val(0);
        $('#PaidAmount').val(0);
        $('#Excess').val(0);
        $('#LateFee').val(0);

        $('#siblingNameHtml').html('');

        $('#miscLink').html('<input type="button" value="Miscellaneous" class="btn btn-default btn-sm" disabled="disabled" />');
        $('#transLink').html('<input type="button" value="Transport" class="btn btn-default btn-sm" disabled="disabled" />');
        $('#concesLink').html('<input type="button" value="Concession" class="btn btn-default btn-sm" disabled="disabled" />');
        $('#ledgerLink').html('<input type="button" id="btnLedgerDetails" onclick="getLedgerDetails_ByERPNo()" value="Ledger" class="btn btn-default btn-sm" disabled="disabled" />');

        EmptyLedgerAndReceiptDetails();
    }

    function getLedgerDetails_ByERPNo() {
        $.ajax({
            type: "GET",
            url: "../StudentFeeDetails/_StudentLedger",
            data: { erpno: $('#ERPNo').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                OpenMessegeModal(response, '', 'lg', 'Download/View : Student Ledger');
            },
        });
    }

</script>
