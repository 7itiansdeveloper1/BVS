@model ISas.Entities.Academic.Academic_HolidayAllocationModel

<section class="content-header">
    <h1>
        Holiday Allocation Setup
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Academic</li>
        <li><a href="@Url.Action("New", "Academic_HolidayMaster")">Holiday Master</a></li>
        <li><a href="@Url.Action("LandingPage", "Academic_HolidayAllocation")">Holiday Allocation</a></li>
        <li><a href="#">Holiday Allocation Setup</a></li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Academic_HolidayAllocation_CRUD", "Academic_HolidayAllocation", FormMethod.Post, htmlAttributes: new { }))
    {
        @Html.HiddenFor(r => Model.HolidayId)
        @Html.HiddenFor(r=> Model.CRUDFor)
        @Html.Hidden("hddnRowLenght")

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title"> Holiday Name : <span class="text-primary">@Html.DisplayFor(r => Model.HolidayName)</span> </h5>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.FDate)</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.TextBoxFor(m => m.FDate, htmlAttributes: new { @class = "form-control pull-right", @readonly = true })
                                @Html.ValidationMessageFor(r => Model.FDate, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.TDate)</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.TextBoxFor(m => m.TDate, htmlAttributes: new { @class = "form-control pull-right", @readonly = true })
                                @Html.ValidationMessageFor(r => Model.TDate, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.NoofDays)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.NoofDays, htmlAttributes: new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(r => Model.NoofDays, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-4">
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h5 class="box-title">Student</h5>
                            </div>
                            <div class="box-body">
                                <table class="table table-bordered table-condensed">
                                    <thead>
                                        <tr>
                                            <th>
                                                @Html.CheckBox("cheBoxClassAllSelect", htmlAttributes:new { onchange = "checkToSelectAllClass()" })
                                            </th>
                                            <th>Class</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.ClassList.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    @Html.HiddenFor(r => Model.ClassList[i].Value)
                                                    @Html.HiddenFor(r => Model.ClassList[i].Text)
                                                    @Html.CheckBoxFor(r => Model.ClassList[i].Selected, htmlAttributes:new { @class = "chkBoxClass" })
                                                </td>
                                                <td>
                                                    @Html.DisplayFor(r => Model.ClassList[i].Text)
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>

                            <div class="box-footer">
                                <button class="btn btn-success" id="savebutton" type="button" onclick="$('#CRUDFor').val('STUD'); DoAjaxPostAndMore(this);">Save</button>
                            </div>
                        </div>
                    </div>
                    <div class="col-md-8">
                        <div class="box box-warning">
                            <div class="box-header with-border">
                                <h5 class="box-title">Staff</h5>
                            </div>
                            <div class="box-body">
                                <div class="row">
                                    <div class="col-md-3">
                                        <h5><label for="">@Html.LabelFor(r => Model.Department)</label></h5>
                                    </div>
                                    <div class="col-xs-12 col-sm-12 col-md-5">
                                        <div class="form-group">

                                            <div class="select">
                                                @Html.DropDownListFor(m => m.Department, new SelectList(Model.DepartmentList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;" , onchange="SelectStaff()"})
                                                @Html.ValidationMessageFor(r => Model.Department, null, htmlAttributes: new { style = "color:red;" })
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="" style="height:512px; overflow-y:auto;">
                                    <table class="table table-bordered table-condensed">
                                        <thead>
                                            <tr>
                                                <th>
                                                    @Html.CheckBox("cheBoxStaffAllSelect", htmlAttributes: new { onchange = "checkToSelectAllStaff()" } )
                                                </th>
                                                <th>Staff Name</th>
                                                <th>Department</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @for (int i = 0; i < Model.StaffList.Count; i++)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.HiddenFor(r => Model.StaffList[i].StaffName)
                                                        @Html.HiddenFor(r => Model.StaffList[i].StaffID)
                                                        @Html.HiddenFor(r => Model.StaffList[i].DeptId)
                                                        @Html.HiddenFor(r => Model.StaffList[i].DeptName)
                                                        @Html.CheckBoxFor(r => Model.StaffList[i].Selected, htmlAttributes: new { @class = "chkBoxDept " + Model.StaffList[i].DeptId  })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(r => Model.StaffList[i].StaffName)
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(r => Model.StaffList[i].DeptName)
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>

                            <div class="box-footer">
                                <button class="btn btn-success" id="savebutton" type="button" onclick="$('#CRUDFor').val('STAFF'); DoAjaxPostAndMore(this);">Save</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            @*<div class="box-footer">
                    <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">Save</button>
                    <button class="btn btn-default" type="button" onclick="window.location.reload()">Reset</button>
                </div>*@
        </div>
    }
</section>

<script>
    function SelectStaff() {
        var deptId = $('#Department').val();
        if (deptId != null && deptId != "") {
            $('.chkBoxDept').prop('checked', false);
            $('.' + deptId).prop('checked', true);
        } else {
            $('.chkBoxDept').prop('checked', false);
        }
    }

    function checkToSelectAllClass() {
        if ($('#cheBoxClassAllSelect').is(':checked')) {
            $('.chkBoxClass').prop('checked', true);
        }
        else {
            $('.chkBoxClass').prop('checked', false);
        }
    }

    function checkToSelectAllStaff() {
        if ($('#cheBoxStaffAllSelect').is(':checked')) {
            $('.chkBoxDept').prop('checked', true);
        }
        else {
            $('.chkBoxDept').prop('checked', false);
        }
    }

    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Success');
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }
</script>
