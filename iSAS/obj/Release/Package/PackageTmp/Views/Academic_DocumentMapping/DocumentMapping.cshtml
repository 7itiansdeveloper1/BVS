@model ISas.Entities.Academic.Academic_DocumentMappingModel
@{
    ViewBag.Title = "New";
}

<section class="content-header">
    <h1>
        Document Mappping
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>School</li>
        <li class="active">Document Mapping</li>
    </ol>
</section>

<section class="content">
    <div class="box box-success">
        <div class="box-body">
            <div class="row">
                <div class="col-md-3">
                    <h5><label for="">@Html.LabelFor(r => Model.DepartmentList)</label></h5>
                </div>
                <div class="col-xs-12 col-sm-12 col-md-5">
                    <div class="form-group">

                        <div class="select">
                            @Html.DropDownListFor(m => m.DepartmentId, new SelectList(Model.DepartmentList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "SelectStaff()" })
                            @Html.ValidationMessageFor(r => Model.DepartmentId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>               
            </div>

            
            <div class="" style="height:512px; overflow-y:auto;">
                <table class="table table-bordered table-condensed">
                    <thead>
                        <tr>
                            <th>
                                @Html.CheckBox("chkBoxStaffAllSelect", htmlAttributes: new { onchange = "checkToSelectAllStaff()" })
                            </th>
                            <th>Document</th>
                        </tr>
                    </thead>
                    <tbody>
                        @for (int i = 0; i < Model.DocumentList.Count; i++)
                        {
                        <tr>
                            

                            <td>
                                
                                @Html.HiddenFor(r => Model.DocumentList[i].DocumentId)
                                @Html.CheckBoxFor(r => Model.DocumentList[i].Selected )
                            </td>
                            <td>
                                @Html.DisplayFor(r => Model.DocumentList[i].DocumentName)
                            </td>
                            

                        </tr>
                        }
                    </tbody>
                </table>
            </div>



        </div>


        <div class="box-footer">
            <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
            <button class="btn btn-default" type="button" onclick="window.location.reload()">RESET</button>
        </div>
    </div>
</section>
<script>
   

    function checkToSelectAllDocument() {
        if ($('#cheBoxClassAllSelect').is(':checked')) {
            $('.chkBoxClass').prop('checked', true);
        }
        else {
            $('.chkBoxClass').prop('checked', false);
        }
    }

    function checkToSelectAllStaff() {
        if ($('#cheBoxStaffAllSelect').is(':checked')) {
            $('.chkBoxDept').prop('checked', true);
        }
        else {
            $('.chkBoxDept').prop('checked', false);
        }
    }

    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Success');
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }
</script>
