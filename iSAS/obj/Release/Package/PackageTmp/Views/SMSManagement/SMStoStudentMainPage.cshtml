@model ISas.Entities.SMSManagement.SMS_MainModel
@{
    ViewBag.Title = "SMStoStudentMainPage";

    List<SelectListGroup> classGroupList = Model.DropDownList.ClassList.Select(r => r.Text.Substring(0, r.Text.Length - 2)).Distinct().Select(r => new SelectListGroup
    {
        Name = r,
        Disabled = false
    }).ToList();

    for (int i = 0; i < Model.DropDownList.ClassList.Count; i++)
    {
        string className = Model.DropDownList.ClassList[i].Text.Substring(0, Model.DropDownList.ClassList[i].Text.Length - 2);
        Model.DropDownList.ClassList[i].Group = classGroupList.Where(r => className == r.Name).FirstOrDefault();
    }
}


@using (Html.BeginForm("StudentSMSGroup_CRUD", "SMSManagement", FormMethod.Post, htmlAttributes: new { }))
{
    @Html.HiddenFor(r => Model.PostStudentSMSGroupType)

    <div class="row">
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h5 class="box-title">Create Group</h5>
                        </div>
                        <div class="box-body">
                            <div class="row">
                                <div class="col-xs-12 col-sm-6 col-md-6">
                                    <div class="form-group">
                                        <label for="">@Html.LabelFor(r => Model.SMSStudentGroupName)</label>
                                        <div class="select">
                                            @Html.TextBoxFor(r => Model.SMSStudentGroupName, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(r => Model.SMSStudentGroupName, null, htmlAttributes: new { style = "color:red;" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <br /><h5><input type="button" value="CREATE NEW" class="btn btn-success btn-sm" onclick="DoAjaxPostAndMore(this, 'NEW')" /></h5>
                                    </div>
                                </div>
                                <div class="col-xs-12 col-sm-6 col-md-3">
                                    <div class="form-group">
                                        <br /> <h5> <input type="button" value="UPDATE" class="btn btn-warning btn-sm" onclick="DoAjaxPostAndMore(this, 'UPDATE')" /></h5>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="row">
                <div class="col-md-12">
                    <div class="box box-success">
                        <div class="box-header with-border">
                            <h5 class="box-title">Send SMS</h5>
                            <h5 class="box-title pull-right"><input onclick="SendSMS(this)" type="button" class="btn btn-success btn-sm pull-right" value="SEND SMS" /></h5>
                            <div class="box-title pull-right row">
                                <div class="col-md-12">
                                    @Html.DropDownListFor(r => Model.MsgType_Stud, new SelectList(Model.MsgTypeList, "Value", "Text"), htmlAttributes: new { @class = "form-control form-group-sm", style = "width:100%;height:30px;font-size:12px;" })
                                    @Html.ValidationMessageFor(r => Model.MsgType_Stud, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="row">
                                <div class="col-xs-12 col-sm-12 col-md-12">
                                    <div class="form-group">
                                        <div class="select" style="font-family:'Times New Roman'">
                                            @Html.TextAreaFor(r => Model.SMSText, htmlAttributes: new { @class = "form-control", style = "height:62px;", placeholder = "Enter your Messege here.." })
                                            @Html.ValidationMessageFor(r => Model.SMSText, null, htmlAttributes: new { style = "color:red;" })
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>


            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-body">
                    <div class="row" style="border-bottom:1px solid #808080 ">
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                <div class="radio">
                                    <label> @Html.RadioButtonFor(r => Model.StudentSMSFilterType, "GroupWise", htmlAttributes: new { onchange = "SMSFilterTypeChange()" })<span>Group Wise</span></label>
                                </div>
                                @*<label for="">@Html.LabelFor(r => Model.StudentGroupId)</label>*@
                                <div class="select">
                                    @Html.DropDownListFor(r => Model.StudentGroupId, Model.DropDownList.StudentGroupList, "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", disabled = "disabled" })
                                    @Html.ValidationMessageFor(r => Model.StudentGroupId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                <div class="radio">
                                    <label> @Html.RadioButtonFor(r => Model.StudentSMSFilterType, "ClassWise", htmlAttributes: new { onchange = "SMSFilterTypeChange()", @checked = "checked" })<span>Class Wise</span></label>
                                </div>
                                <div class="select">
                                    @Html.DropDownListFor(r => Model.ClassWithSectionIDs, Model.DropDownList.ClassList, htmlAttributes: new { @class = "form-control multiSelectWithSelectOptGrp", multiple = true })
                                    @Html.ValidationMessageFor(r => Model.ClassWithSectionIDs, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-6">
                            <div class="row">
                                <div class="col-md-12">
                                    <h3>
                                        <button type="button" class="btn btn-success pull-right" onclick="GetStudentDetails()">
                                            <i class="fa fa-search btnDefaultColor"></i>
                                        </button>
                                    </h3>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-12">
                                    <h5>
                                        <span class="label label-primary pull-right" style="font-size:14px;font-family:Calibri;">Result Count : <span class="label label-info" id="studentresultCount">0</span> </span>
                                        <span class="label label-success pull-right" style="font-size:14px;font-family:Calibri;">Select Count : <span class="label label-warning" id="selectedStudentCount">0</span> </span>
                                    </h5>
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <div id="studentDetailsMainDiv" style="max-height:400px;overflow-y:auto;">
                                @*@Html.Partial("_StudentDetails")*@
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
}


<script type="text/javascript">
    function getSelectedCount() {
        var count = 0;
        $('#tblStudentList > tbody > tr').each(function (i) {
            if ($('#StudentList_' + i + '__IsSelected').is(':checked')) {
                count++;
            }
        });
        $('#selectedStudentCount').html(count);
    }

    function chekBoxAllStudent() {
        if ($('#chkBoxSelectAllStudent').is(':checked')) {
            $('.studentSelectchkBox').prop('checked', true);
        } else {
            $('.studentSelectchkBox').prop('checked', false);
        }
        getSelectedCount();
    }

    function chekBoxAllStudentClass() {
        if ($('#chkBoxSelectAllStudentClass').is(':checked')) {
            $('.studentClassSelectchkBox').prop('checked', true);
        } else {
            $('.studentClassSelectchkBox').prop('checked', false);
        }
    }

    function SMSFilterTypeChange() {
        var smsFilterType = $('#StudentSMSFilterType:checked').val();
        if (smsFilterType == 'ClassWise') {
            $('#ClassWithSectionIDs').attr('disabled', false);

            $('#StudentGroupId').val(null).change();
            $('#StudentGroupId').attr('disabled', true);
        } else {
            $('#ClassWithSectionIDs').val('');
            $('#ClassWithSectionIDs').attr('disabled', true);

            $('#StudentGroupId').attr('disabled', false);
        }
    }

    function GetStudentDetails() {
        var smsFilterType = $('#StudentSMSFilterType:checked').val();
        var classIds = "";
        if (smsFilterType == 'ClassWise') {
            var classSectionIds = $('#ClassWithSectionIDs').val();

            if (classSectionIds == "" || classSectionIds == null) {
                OpenMessegeAutoHideDiv('Select at least one class..!', 'Info');
                return false;
            }

            classIds = classSectionIds.toString();
            if (classIds == "" || classIds == null) {
                OpenMessegeAutoHideDiv('Select at least one class..!', 'Info');
                return false;
            }
        } else {
            if ($('#StudentGroupId').val() == "" || $('#StudentGroupId').val() == null) {
                OpenMessegeAutoHideDiv('Select student group first..!', 'Info');
                return false;
            }
        }

        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../SMSManagement/_StudentDetails",
            data: { ClassIds: classIds, StudentGroupId: $('#StudentGroupId').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#studentDetailsMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function SendSMS(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SMSManagement/SendSMS',
            data: $form.serialize(),
            error: function (xhr, status, error) {
                console.log(xhr);
                console.log(status);
                console.log(error);
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                } else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }


    function DoAjaxPostAndMore(btnClicked, mode) {
        var selectedStudentCount = 0;
        $('#tblStudentList > tbody > tr').each(function (i) {
            if ($('#StudentList_' + i + '__IsSelected').is(':checked')) {
                selectedStudentCount++;
            }
        });

        if ($('#SMSStudentGroupName').val() != "" && $('#SMSStudentGroupName').val() != null && selectedStudentCount > 0) {
            $('#PostStudentSMSGroupType').val(mode);
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                beforeSend: function () {
                    spinnerShow();
                },
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    if (response.status == 'success') {
                        OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    } else {
                        OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                        AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                        AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                    }
                },
                complete: function () {
                    spinnerHide();
                }
            });
        } else {
            if (selectedStudentCount == 0) {
                OpenMessegeAutoHideDiv('Select at least one student for this group ..!', 'Info');
            } else {
                OpenMessegeAutoHideDiv('SMS group name must not be empty ..!', 'Info');
            }
        }
    }
</script>

