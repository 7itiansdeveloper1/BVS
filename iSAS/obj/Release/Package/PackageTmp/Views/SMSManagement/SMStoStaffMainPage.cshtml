@model ISas.Entities.SMSManagement.SMS_MainModel
@{
    ViewBag.Title = "SMS to Staff";
}

@using (Html.BeginForm("StaffSMSGroup_CRUD", "SMSManagement", FormMethod.Post, htmlAttributes: new { }))
{
    @Html.HiddenFor(r => Model.PostStaffSMSGroupType)
    <div class="row">
        <div class="col-md-6">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h5 class="box-title">Create Group</h5>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-6 col-md-6">
                            <div class="form-group">
                                <label for="">@Html.LabelFor(r => Model.SMSStaffGroupName)</label>
                                <div class="select">
                                    @Html.TextBoxFor(r => Model.SMSStaffGroupName, htmlAttributes: new { @class = "form-control" })
                                    @Html.ValidationMessageFor(r => Model.SMSStaffGroupName, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                <br /><h5><input type="button" value="CREATE NEW" class="btn btn-success btn-sm" onclick="DoAjaxPostAndMore_ForStaff(this, 'NEW')" /></h5>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                <br /><h5><input type="button" value="UPDATE" class="btn btn-warning btn-sm" onclick="DoAjaxPostAndMore_ForStaff(this, 'UPDATE')" /></h5>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-md-6">
            <div class="box box-success">
                <div class="box-header with-border">
                    <h5 class="box-title">Send SMS</h5>
                    <h5 class="box-title pull-right"><input type="button" onclick="SendSMS_Staff(this)" class="btn btn-success btn-sm" value="SEND SMS" /></h5>
                    <div class="box-title pull-right row">
                        <div class="col-md-12">
                            @Html.DropDownListFor(r => Model.MsgType_Staff, new SelectList(Model.MsgTypeList, "Value", "Text"), htmlAttributes: new { @class = "form-control form-group-sm", style = "width:100%;height:30px;font-size:12px;" })
                            @Html.ValidationMessageFor(r => Model.MsgType_Staff, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>
                <div class="box-body">
                    <div class="row">
                        <div class="col-xs-12 col-sm-12 col-md-12">
                            <div class="form-group">
                                <div class="select"  style="font-family:'Times New Roman'">
                                    @Html.TextAreaFor(r => Model.SMSText_Staff, htmlAttributes: new { @class = "form-control", placeholder = "Enter your messege here.." })
                                    @Html.ValidationMessageFor(r => Model.SMSText_Staff, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div class="box box-success">
                <div class="box-body">
                    <div class="row" style="border-bottom:1px solid #808080">
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group">
                                <label for="">@Html.LabelFor(r => Model.StaffSMSFilterType)</label>
                                <div class="radio">
                                    <label> @Html.RadioButtonFor(r => Model.StaffSMSFilterType, "DeptWise", htmlAttributes: new { onchange = "SMSFilterTypeChange_ForStaff()", @checked = "checked" })<span>Dept Wise</span></label>
                                    <label> @Html.RadioButtonFor(r => Model.StaffSMSFilterType, "StaffGroupWise", htmlAttributes: new { onchange = "SMSFilterTypeChange_ForStaff()" })<span>Group Wise</span></label>
                                    <label> @Html.RadioButtonFor(r => Model.StaffSMSFilterType, "AdminStaff", htmlAttributes: new { onchange = "SMSFilterTypeChange_ForStaff()" })<span>Admin Staff</span></label>
                                    @Html.ValidationMessageFor(r => Model.StaffSMSFilterType, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-3">
                            <div class="form-group">
                                <label for="">@Html.LabelFor(r => Model.StaffGroupId)</label>
                                <div class="select">
                                    @Html.DropDownListFor(r => Model.StaffGroupId, Model.DropDownList.TeacherGroupList, "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", disabled = "disabled" })
                                    @Html.ValidationMessageFor(r => Model.StaffGroupId, null, htmlAttributes: new { style = "color:red;" })
                                </div>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-1">
                            <div class="form-group">
                                <br /><h5> <button type="button" onclick="GetStaffDetails()" class="btn btn-success btnDefaultColor"> <i class="fa fa-search"></i></button> </h5>
                            </div>
                        </div>
                        <div class="col-md-4">
                            <span class="pull-right label label-primary pull-right" style="font-size:14px;font-family:Calibri;">Result Count : <span class="label label-info" id="staffresultCount">0</span> </span>
                            <span class="pull-right label label-success pull-right" style="font-size:14px;font-family:Calibri;">Select Count : <span class="label label-warning" id="selectedStaffCount">0</span> </span>
                        </div>
                    </div>

                    <div class="row">
                        <div class="col-md-3">
                            <div style="max-height:400px;overflow-y:auto;">
                                <table class="table table-bordered table-hover table-responsive" id="tblStaffDeptList">
                                    <thead>
                                        <tr>
                                            <th>@Html.CheckBox("chkBoxSelectAllStaffDept", false, htmlAttributes: new { onchange = "chekBoxAllStaffDept()" })</th>
                                            <th>Dept Name</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @if (Model != null && Model.DropDownList != null && Model.DropDownList.DepartmentList != null && Model.DropDownList.DepartmentList.Count > 0)
                                        {
                                            for (int i = 0; i < Model.DropDownList.DepartmentList.Count; i++)
                                            {
                                                <tr>
                                                    <td>
                                                        @Html.HiddenFor(r => Model.DropDownList.DepartmentList[i].Text)
                                                        @Html.HiddenFor(r => Model.DropDownList.DepartmentList[i].Value)
                                                        @Html.CheckBoxFor(r => Model.DropDownList.DepartmentList[i].Selected, htmlAttributes: new { @class = "staffDeptSelectchkBox" })
                                                    </td>
                                                    <td>
                                                        @Html.DisplayFor(r => Model.DropDownList.DepartmentList[i].Text)
                                                    </td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>
                        <div class="col-md-9">
                            <div class="row">
                                <div id="staffDetailsMainDiv" style="max-height:400px;overflow-y:auto;">
                                    @*@Html.Partial("_StaffDetails")*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}


<script type="text/javascript">
    function SendSMS_Staff(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SMSManagement/SendSMS_Staff',
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    console.log(response.Msg);
                    OpenMessegeAutoHideDiv(response.Msg, response.Color );
                } else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function getSelectedStaffCount() {
        var count = 0;
        $('#tblStaffList > tbody > tr').each(function (i) {
            if ($('#AdminAndStaffList_' + i + '__IsSelected').is(':checked')) {
                count++;
            }
        });
        $('#selectedStaffCount').html(count);
    }

    function chekBoxAllStaff() {
        if ($('#chkBoxSelectAllStaff').is(':checked')) {
            $('.staffSelectchkBox').prop('checked', true);
        } else {
            $('.staffSelectchkBox').prop('checked', false);
        }
        getSelectedStaffCount();
    }

    function chekBoxAllStaffDept() {
        if ($('#chkBoxSelectAllStaffDept').is(':checked')) {
            $('.staffDeptSelectchkBox').prop('checked', true);
        } else {
            $('.staffDeptSelectchkBox').prop('checked', false);
        }
    }

    function SMSFilterTypeChange_ForStaff() {
        var smsFilterType_Staff = $('#StaffSMSFilterType:checked').val();
        if (smsFilterType_Staff == 'DeptWise') {
            $('.staffDeptSelectchkBox').attr('disabled', false);
            $('#chkBoxSelectAllStaffDept').attr('disabled', false);

            $('#StaffGroupId').val('');
            $('#StaffGroupId').attr('disabled', true);
        } else if (smsFilterType_Staff == 'StaffGroupWise') {

            $('#chkBoxSelectAllStaffDept').attr('checked', false);
            $('#chkBoxSelectAllStaffDept').attr('disabled', true);

            $('.staffDeptSelectchkBox').attr('checked', false);
            $('.staffDeptSelectchkBox').attr('disabled', true);
            $('#StaffGroupId').attr('disabled', false);
        } else {

            $('#chkBoxSelectAllStaffDept').attr('checked', false);
            $('#chkBoxSelectAllStaffDept').attr('disabled', true);

            $('.staffDeptSelectchkBox').attr('checked', false);
            $('.staffDeptSelectchkBox').attr('disabled', true);

            $('#StaffGroupId').val('');
            $('#StaffGroupId').attr('disabled', true);
        }
    }

    function GetStaffDetails() {
        var smsFilterType_Staff = $('#StaffSMSFilterType:checked').val();
        var deptIds = ""; var IsForAdminStaff = "NO";
        if (smsFilterType_Staff == "DeptWise") {
            $('#tblStaffDeptList > tbody > tr').each(function (i) {
                if ($('#DropDownList_DepartmentList_' + i + '__Selected').is(':checked')) {
                    if (deptIds == "") {
                        deptIds += $('#DropDownList_DepartmentList_' + i + '__Value').val();
                    } else {
                        deptIds += "," + $('#DropDownList_DepartmentList_' + i + '__Value').val();
                    }
                }
            });
            if (deptIds == "" || deptIds == null) {
                OpenMessegeAutoHideDiv('Select at least one department..!', 'Info');
                return false;
            }
        } else if (smsFilterType_Staff == "StaffGroupWise") {
            if ($('#StaffGroupId').val() == "" || $('#StaffGroupId').val() == null) {
                OpenMessegeAutoHideDiv('Select staff group first..!', 'Info');
                return false;
            }
        } else {
            IsForAdminStaff = "YES";
        }

        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../SMSManagement/_StaffDetails",
            data: { DeptIds: deptIds, StaffGroupId: $('#StaffGroupId').val(), IsForAdminStaff: IsForAdminStaff },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#staffDetailsMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function DoAjaxPostAndMore_ForStaff(btnClicked, mode) {
        var selectedStaffCount = 0;
        $('#tblStaffDeptList > tbody > tr').each(function (i) {
            if ($('#AdminAndStaffList_' + i + '__IsSelected').is(':checked')) {
                selectedStaffCount++;
            }
        });

        if ($('#SMSStaffGroupName').val() != "" && $('#SMSStaffGroupName').val() != null && selectedStaffCount > 0) {
            $('#PostStaffSMSGroupType').val(mode);
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                beforeSend: function () {
                    spinnerShow();
                },
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (response) {
                    if (response.status == 'success') {
                        OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    } else {
                        OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                        AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                        AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                    }
                },
                complete: function () {
                    spinnerHide();
                }
            });
        } else {
            if (selectedStaffCount == 0) {
                OpenMessegeAutoHideDiv('Select at least one staff for this group ..!', 'Info');
            } else {
                OpenMessegeAutoHideDiv('SMS group name must not be empty ..!', 'Info');
            }
        }
    }
</script>

