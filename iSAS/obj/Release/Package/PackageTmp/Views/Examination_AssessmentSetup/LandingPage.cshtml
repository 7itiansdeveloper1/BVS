@using ISas.Web.Models;
@model List<ISas.Entities.Examination_Entities.Examination_AssessmentSetupModels>

<!-- /.box -->
<div class="box box-primary">
    <!-- /.box-header -->
    <div class="box-header with-border">
        <div class="box-title">
            <h5 class="box-title">Assessment Details</h5>
        </div>
    </div>
    <div class="box-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>S. No</th>
                    <th>Assessment</th>
                    @*<th>Subject</th>*@
                    <th>Print Order</th>
                    <th>Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    int count = 1;
                    for (int i = 0; i < Model.Count(); i++)
                    {
                        string completeName ="Exam : " + Model[i].Exam_TemplateName + "; Subject : " + Model[i].SubjectName + "; Assessment :" + Model[i].AssessmentName;
                        <tr>
                            <td>@Html.DisplayFor(r => count)</td>
                            <td>@Html.DisplayFor(r => Model[i].AssessmentName)</td>
                            @*<td>@Html.DisplayFor(r => Model[i].SubjectName)</td>*@
                            <td>
                                @Html.DisplayFor(r=> Model[i].PrintOrder)
                            </td>
                            <td class="text-center">
                                @if (Model[i].IsDeleteable)
                                {
                                    <a href="#" onclick="DeleteConfirm('@Model[i].AssessmentPropertyId', '@Model[i].SubjectName')" title="Remove Assessment" class="fa fa-remove btnDefaultColor"></a>
                                }
                                else
                                {
                                    <span title="Remove Assessment" class="fa fa-remove btnDefaultColorFaded"></span>
                                }

                                @Html.EncodedActionLink(" ", "Updation", "Examination_AssessmentSetup", new { ExamTempleteId = Model[i].ExamTemplateId,  AssessmentPropertyId = Model[i].AssessmentPropertyId, SubjectId = Model[i].SubjectId, MainSubjectId = ViewBag.MainSubjectId, MainSubjectName = ViewBag.MainSubjectName, IsChildSubjectSetup = ViewBag.IsChildSubjectSetup }, htmlAttributes: new { @class = "fa fa-edit btnDefaultColor" })
                                <a href="#" onclick="OpenPropertiesDialog('@Model[i].AssessmentPropertyId', '@completeName')" title="Properties" class="fa fa-gear btnDefaultColor"></a>
                            </td>
                        </tr>
                        count++;
                    }
                }
            </tbody>
        </table>
    </div>
    <!-- /.box-body -->
</div>
<!-- /.box -->
<script>
    $(function () {
        $('#example1').DataTable();
    });

    function DeleteConfirm(Id, templeteName) {
        AsyncConfirmYesNo("Confirmation", "Are you sure to remove assessment from '" + templeteName + "' ?", MyYesFunction, MyNoFunction, Id);
    }

    function MyYesFunction(Id) {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Examination_AssessmentSetup/Examination_AssessmentSetup_Delete",
            data: { AssessmentId: Id },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg, result.Color);
                getAssessmentList();
                // setTimeout(function () { window.location.reload(); }, $('#hddnReloadTime').val());
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }

    function OpenPropertiesDialog(PropertyId, subjectName) {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },  
            url: "../Examination_AssessmentSetup/AssessmentPropertySetup",
            data: { AssessmentPropertyId: PropertyId },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenModalWithSave(result, 'Properties For :- ' + subjectName);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>