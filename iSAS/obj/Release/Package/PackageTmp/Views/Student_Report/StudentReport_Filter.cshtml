@model ISas.Entities.Student_ReportModel
@{
    List<SelectListItem> statusList = new List<SelectListItem>();
    statusList.Add(new SelectListItem { Text = "Active", Value = "False", Selected = true });
    statusList.Add(new SelectListItem { Text = "In-Active", Value = "True" });
    List<SelectListGroup> classGroupList = Model.ClassSectionList.Select(r => r.ClassName).Distinct().Select(r => new SelectListGroup
    {
        Name = r,
        Disabled = false
    }).ToList();

    List<SelectListItem> classSecList = Model.ClassSectionList.Select(r => new SelectListItem
    {
        Text = r.ClassSectionName,
        Value = r.ClassSectionId
    }).ToList();

    for (int i = 0; i < classSecList.Count; i++)
    {
        string className = classSecList[i].Text.Substring(0, classSecList[i].Text.Length - 2);
        classSecList[i].Group = classGroupList.Where(r => className == r.Name).FirstOrDefault();
    }
}

<script src="~/bower_components/datatables.net/js/dataTables.buttons.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.flash.min.js"></script>
<script src="~/bower_components/datatables.net/js/jszip.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.print.min.js"></script>
<script src="~/bower_components/datatables.net/js/pdfmake.min.js"></script>
<script src="~/bower_components/datatables.net/js/vfs_fonts.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.html5.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.colVis.min.js"></script>
<script src="~/bower_components/datatables.net/js/dataTables.select.min.js"></script>
<link rel="stylesheet" href="~/bower_components/datatables.net/css/buttons.dataTables.min.css">


<section class="content-header">
    <h1>Reports</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Student</li>
        <li class="active">Reports</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Academic_HolidayDeclaration_CRUD", "Academic_HolidayDeclaration", FormMethod.Post, htmlAttributes: new { }))
    //@using (Html.BeginForm("Student_Report_Testing", "Student_Report", FormMethod.Post, htmlAttributes: new { id = "stud_ReportForm", target = "_blank" }))
    {
        @Html.HiddenFor(r => Model.SelectedClassNames)
        <div class="box box-primary">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-5">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ReportName)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.ReportName, new SelectList(Model.ReportNameList, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.ReportName, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <br />
                            <div class="select">
                                <h5>
                                    <button title="SEARCH" type="button" class="btn btn-success" onclick="getStudentDetailReport('NO')">
                                        <i class="fa fa-search btnDefaultColor"></i>
                                    </button>
                                </h5>
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.Status)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.Status, new SelectList(statusList, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.Status, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <div class="radio">
                                <span> <strong>Report Type | </strong> </span> <label>@Html.RadioButtonFor(r => r.ReportType, "Detail", htmlAttributes: new { onchange = "GetReportNameList()" }) Detail</label>
                                <label>@Html.RadioButtonFor(r => r.ReportType, "Statical", htmlAttributes: new { onchange = "GetReportNameList()" }) Statical</label>
                            </div>
                            <div class="radio">
                                <span><strong>Order by | </strong> </span> <label>@Html.RadioButtonFor(r => r.OrderBy, "Name", htmlAttributes: new { }) Name</label>
                                <label>@Html.RadioButtonFor(r => r.OrderBy, "AdmNo", htmlAttributes: new { }) Adm No</label>
                            </div>
                        </div>
                    </div>

                </div>

                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>@Html.RadioButtonFor(r => r.ReportFilterType, "WingWise", htmlAttributes: new { }) By Wing</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.WingId, new SelectList(Model.WingList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.WingId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>@Html.RadioButtonFor(r => r.ReportFilterType, "ClassWise", htmlAttributes: new { }) By Class</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.ClassSectionIds, classSecList, htmlAttributes: new { @class = "form-control multiSelectWithSelectOptGrp", multiple = true, style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.ClassSectionIds, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>
                <hr />
                <div class="row">
                    <div class="col-md-12" style="width:100%;overflow-y:auto;">
                        <div id="studentReportMainDiv"></div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
<script>
    function GetReportNameList() {
        var reportNameHtml = '<option value="">--Select--</option>';
        $.ajax({
            type: "GET",
            beforeSend: function () { spinnerShow(); },
            url: "../Student_Report/GetReportNameList",
            data: { ReportType: $('input[name=ReportType]:checked').val() },
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            success: function (result) {
                for (var i = 0; i < result.length; i++) {
                    reportNameHtml += '<option value=' + result[i].Value + '>' + result[i].Text + '</option>';
                }
                $('#ReportName').html(reportNameHtml);
                $('#studentReportMainDiv').html('');
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function CheckToSelctClassSection() {
        if ($('#chkBoxSelectAll').is(':checked')) {
            $('.chkBoxClassSection').prop('checked', true);
        } else {
            $('.chkBoxClassSection').prop('checked', false);
        }
        SetClassSectionValue();
    }

    function SelectWingClass() {
        $('.chkBoxClassSection').prop('checked', false);
        if ($('#WingId').val() != null && $('#WingId').val() != '') {
            $('.' + $('#WingId').val()).prop('checked', true);
        }
        SetClassSectionValue();
    }

    function SetClassSectionValue() {
        var classSectionVal = ""; var className = ""; // var classNameArray = [];
        $('#tblClassSection > tbody > tr').each(function (i) {
            if ($('#ClassSectionList_' + i + '__Selected').is(':checked')) {
                if (classSectionVal == "") {
                    classSectionVal = $('#ClassSectionList_' + i + '__ClassSectionId').val();
                    className = $('#ClassSectionList_' + i + '__ClassSectionName').val();
                } else {
                    classSectionVal += "," + $('#ClassSectionList_' + i + '__ClassSectionId').val();
                    className += ", " + $('#ClassSectionList_' + i + '__ClassSectionName').val();
                }
                //classNameArray.push($('#ClassSectionList_' + i + '__ClassName').val());
            }
        });

        $('#SelectedClassNames').val(className);
        $('#hddnClassSectionId').val(classSectionVal);
    }
    function getStudentDetailReport(Print) {
        var tempClassSecId = ""; var wingID = $('#WingId').val();
        var reportFilterType = $('input[name=ReportFilterType]:checked').val();
        if (reportFilterType == 'ClassWise') {
            var classSecIds = $('#ClassSectionIds').val();  //$("#hddnClassSectionId").val()
            if (classSecIds == null || classSecIds == "") {
                OpenMessegeModal('No class selected..!', 'Warning');
                return false;
            } else {
                tempClassSecId = classSecIds.toString();
                wingID = "";
            }
        } else {
            if (wingID == null || wingID == "") {
                OpenMessegeModal('No wing selected..!', 'Warning');
                return false;
            } else {
                tempClassSecId = "";
            }
        }

        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Student_Report/_StudentDetailReport",
            data: {
                ClassSectionId: tempClassSecId, Reporttype: $("input[name='ReportType']:checked").val(),
                InActive: $('#Status').val(), OrderBy: $("input[name='OrderBy']:checked").val(),
                ReportName: $('#ReportName').val(), SelectedClassNames: $('#SelectedClassNames').val(), SelectedReportName: $('#ReportName option:selected').text(),
                WingId: wingID, Print: Print
            },
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            success: function (result) {
                if (Print == "NO") {
                    $('#studentReportMainDiv').html(result);
                } else {
                    var w = window.open('');
                    $(w.document.body).html(result);
                    w.print();
                    // w.close();
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>