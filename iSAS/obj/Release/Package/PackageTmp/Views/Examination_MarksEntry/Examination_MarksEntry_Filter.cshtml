@model ISas.Entities.Examination_Entities.Examination_MarksEntryModels
@{
    ViewBag.Title = "MarksEntry1to5";
}
<section class="content-header">
    <h1>
        Marks Entry
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Examination</li>
        <li class="active">Marks Entry</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("Examination_MarksEntry_CRUD", "Examination_MarksEntry", FormMethod.Post))
    {
    <div class="box box-success">
        <div class="box-header with-border">
            <h5 class="box-title">Marks Entry Form</h5>
            <span class="box-title pull-right"><a href="#" onclick="exportToExcel('tblExportToExcel', 'tblHeader')" title="Export to Excel" class="fa fa-file-excel-o btnDefaultColor"></a></span>
            <span class="box-title pull-right" style="padding-right:0.5%;"><a href="#" onclick="window.open('StudentMarkListPrintPage','Exam','width=650,height=800').print()" title="Print" class="fa fa-print btnDefaultColor"></a></span>
            @*<span class="pull-right box-title" style="padding-right:1%;">
                <input onclick="sendEmail()" type="button" class="btn btn-primary btn-xs" value="SEND EMAIL" />
            </span>*@
        </div>
        <div class="box-body">
            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">Session</label>
                        @Html.DropDownListFor(m => m.SessionId, Model.SessionList, "--- Select Session ---", new { @class = "form-control select2", style = "width:100%;" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">Term</label>
                        @Html.DropDownListFor(m => m.ExamId, Model.ExamList, "-- Select Exam --", new { @class = "form-control select2", style = "width:100%;", onchange = "getClassList()" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">Class</label>
                        @Html.DropDownListFor(m => m.ClassId, Model.ClassList, "--- Select Class ---", new { @class = "form-control select2", style = "width:100%;", onchange = "getSectionList()" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">Section</label>
                        @Html.DropDownListFor(m => m.SectionId, new SelectList(string.Empty, "", ""), "--- Select Section ---", new { @class = "form-control select2", style = "width:100%;", onchange = "getSubjectList()" })
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-6">
                    <div class="form-group">
                        <label for="">Subject</label>
                        @Html.DropDownListFor(m => m.SubjectId, new SelectList(string.Empty, "", ""), "--- Select Subject ---", new { @class = "form-control select2", style = "width:100%;", onchange = "getAssismentList()" })
                    </div>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">Assessment</label>
                        @Html.DropDownListFor(m => m.AssessmentId, new SelectList(string.Empty, "", ""), "---Select Assessment ---", new { @class = "form-control select2", style = "width:100%;", onchange = "getStudentList()" })
                    </div>
                </div>
                <div id="divMarkList">
                    @*@Html.Partial("_MarksEntryFrom", Model)*@
                </div>
            </div>
        </div>
        <div class="box-footer">
            <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
            <button class="btn btn-default" type="button" onclick="window.location.reload()">RESET</button>
        </div>
    </div>
    }
</section>

<script>
    function getClassList() {
        $.ajax({
            url: '../Examination_MarksEntry/GetClassList',
            data: { SessionId: $('#SessionId').val(), ExamId: $('#ExamId').val() },
            type: 'get',
            success: function (data) {
                var $ddlClass = $('#ClassId');
                $ddlClass.empty();
                $('#SectionId').empty();
                $('#SubjectId').empty();
                $('#AssessmentId').empty();

                $('#SectionId').append($("<option />").text("--- Select Section ---"));
                $('#SubjectId').append($("<option />").text("--- Select Subject ---"));
                $('#AssessmentId').append($("<option />").text("--- Select Assessment ---"));

                $ddlClass.append($("<option />").text("--- Select Class ---"));
                $.each(data, function () {
                    $ddlClass.append($("<option />").val(this.Value).text(this.Text));
                });
            },
        })
    }

    function getSectionList() {
        $.ajax({
            url: '../Examination_MarksEntry/GetSectionList',
            data: { SessionId: $('#SessionId').val(), ClassId: $('#ClassId').val(), ExamId: $('#ExamId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSec = $('#SectionId');
                $ddlSec.empty();
                $('#SubjectId').empty();
                $('#AssessmentId').empty();

                $('#SubjectId').append($("<option />").text("--- Select Subject ---"));
                $('#AssessmentId').append($("<option />").text("--- Select Assessment ---"));

                $ddlSec.append($("<option />").text("--- Select Section ---"));
                $.each(data, function () {
                    $ddlSec.append($("<option />").val(this.Value).text(this.Text));
                })
            })
        });
    }

    function getSubjectList() {
        $.ajax({
            url: '../Examination_MarksEntry/GetSubjectList',
            data: { SessionId: $('#SessionId').val(), ClassId: $('#ClassId').val(), SectionId: $('#SectionId').val(), ExamId: $('#ExamId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSubject = $('#SubjectId');
                $ddlSubject.empty();

                
                $('#AssessmentId').empty();
                $('#AssessmentId').append($("<option />").text("--- Select Assessment ---"));

                $ddlSubject.append($("<option />").text("--- Select Subject ---"));
                $.each(data, function () {
                    $ddlSubject.append($("<option />").val(this.Value).text(this.Text));
                })
            })
        })
    }

    function getAssismentList() {
        $.ajax({
            url: '../Examination_MarksEntry/GetAssessmentList',
            data: {
                SessionId: $('#SessionId').val(),
                ClassId: $('#ClassId').val(), SectionId: $('#SectionId').val(),
                ExamId: $('#ExamId').val(), SubjectId: $('#SubjectId').val()
            },
            type: 'get',
            success: (function (data) {
                var $ddlAssessment = $('#AssessmentId');
                $ddlAssessment.empty();

                $('#divMarkList').empty();

                $ddlAssessment.append($("<option />").text("--- Select Assessment ---"));
                $.each(data, function () {
                    $ddlAssessment.append($("<option />").val(this.Value).text(this.Text));
                })
            })
        })
    }

    function getStudentList() {
        $.ajax({
            url: '../Examination_MarksEntry/_MarksEntryFrom',
            data: {
                SessionId: $('#SessionId').val(), ClassId: $('#ClassId').val(), SectionId: $('#SectionId').val(),
                ExamId: $('#ExamId').val(), SubjectId: $('#SubjectId').val(), AssessmentId: $('#AssessmentId').val()
            },
            type: 'get',
            success: (function (data) {
                $('#divMarkList').empty();
                $('#divMarkList').html(data);
            })
        })
    }


    function fun_ApplyAll_Grade() {
        $('#MarkTable > tbody > tr').each(function (i) {
            $('#StudentsMarkList_' + i + '__Grade').val($('#ApplyAll_Grade').val()).change();
        });
    }

    function fun_ApplyAll_Marks() {
        $('#MarkTable > tbody > tr').each(function (i) {
            $('#StudentsMarkList_' + i + '__MarkObtained').val($('#ApplyAll_Marks').val());
        });
    }



    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val(), 'Info');
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>

@*<script type="text/javascript">


        function sendEmail() {
            $.ajax({
                type: 'POST',
                url: '../Exam/StudentMarkListPrintPage',
                beforeSend: function () {
                    spinnerShow();
                },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                data: { IsConfirmation: true },
                success: function (response) {
                    AsyncConfirmYesNo("Email Content, Are u sure to send?", response, MyYesFunction, MyNoFunction, null, 'lg');
                },
                complete: function () {
                    spinnerHide();
                }
            })
            return false;
        }

        function MyYesFunction() {
            sendEmailConfirm();
        }
        function MyNoFunction() {
            return false;
        }

        function sendEmailConfirm() {
            $.ajax({
                type: 'POST',
                url: '../Exam/SendEmail',
                beforeSend: function () {
                    spinnerShow();
                },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                data: {},
                success: function (response) {
                    if (response.status == 'success') {
                        OpenMessegeAutoHideDiv(response.Msg, 'Success');
                    }
                    else if (response.status == 'failed') {
                        OpenMessegeAutoHideDiv(response.Msg, 'Warning');
                    }
                },
                complete: function () {
                    spinnerHide();
                }
            })
        }
    </script>*@