@model ISas.Entities.TimeTable_Entities.TimeTable_Adjustment_TransactionModel

<section class="content-header">
    <h1>Adjust Period</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Time Table</li>
        <li><a href="@Url.Action("LandingPage", "TimeTable_Adjustment")">Time Table Adjustment</a></li>
        <li class="active">Adjust Period</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("TimeTable_Adjustment_CRUD", "TimeTable_Adjustment", FormMethod.Post))
    {
        @Html.HiddenFor(r => Model.AbsentStaffId)
        @Html.HiddenFor(r => Model.AbsentStaffName)
        @Html.HiddenFor(r => Model.AbsentDate)

        <div class="box box-widget">
            <div class="box-header with-border">
                <h5 class="box-title">Adjust Period For : <label class="label label-info">@Html.DisplayFor(r => Model.AbsentStaffName)</label></h5>
                <h5 class="box-title pull-right">Date : <label class="label label-info">@Html.DisplayFor(r => Model.AbsentDate)</label></h5>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-md-1">
                        <h4>Class :-</h4>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="select">
                                @Html.DropDownListFor(m => m.EffectedClassId, Model.EffectedClassList, "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "getEffectedPeriodWithAvailableTeachers()" })
                                @Html.ValidationMessageFor(r => Model.EffectedClassId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div id="adjustPeriodMainDiv">
            @Html.Partial("_AdjustPeriod", Model)
        </div>
    }
</section>

<script>
    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color );
                   // setTimeout(function () { window.location.reload(); }, 2000);
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }


    function getEffectedPeriodWithAvailableTeachers() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../TimeTable_Adjustment/_AdjustPeriod',
            data: { TeacherId: '@Model.AbsentStaffId', Date: '@Model.AbsentDate', ClassSecId: $('#EffectedClassId').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#adjustPeriodMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>
