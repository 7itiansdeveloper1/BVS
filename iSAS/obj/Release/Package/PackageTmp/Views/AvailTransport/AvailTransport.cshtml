@model ISas.Entities.TransportEntities.AvailTransportModel
@{
    ViewBag.Title = "Avail Transport";
    Model.FacilityList.Add(new SelectListItem { Text = "Pick & Drop", Value = "PD" });
    Model.FacilityList.Add(new SelectListItem { Text = "Pick", Value = "P" });
    Model.FacilityList.Add(new SelectListItem { Text = "Drop", Value = "D" });
}

<section class="content-header">
    <h1>Transportation</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Transport</li>
        <li class="active">Transportation</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("AvailTransport_CRUD", "AvailTransport", FormMethod.Post, htmlAttributes: new { }))
    {

        @Html.Hidden("hddnRowLenght", 0)

        @Html.HiddenFor(r => Model.Selected_DueDate)
        @Html.HiddenFor(r => Model.Selected_FeeHeadId)
        @Html.HiddenFor(r => Model.Selected_TransportAmount)
        @Html.HiddenFor(r => Model.Selected_TransRefNo)
        @Html.HiddenFor(r => Model.IsSingleSave)
        @Html.HiddenFor(r => Model.CRUDFor)

        { Html.RenderAction("_StudentSearchPartial", "Common"); }

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title">Transport</h5>
                <div class="box-title pull-right" style="padding-left:2%;">
                    @*<button title="Apply Transport on All" class="btn btn-info btn-xs" type="button" onclick="enableDisabledFeilds()">
                            <i class="fa fa-edit"></i> <span>Edit Transport</span>
                        </button>*@
                </div>
                <div class="box-title pull-right checkbox">
                    <label>
                        @Html.CheckBoxFor(r => Model.IsAvailTransport) @Html.DisplayNameFor(r => Model.IsAvailTransport)
                    </label>
                </div>

            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.RouteId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.RouteId, Model.RouteList, "--Select--", htmlAttributes: new { @class = "form-control select2 disabledFeilds", style = "width:100%;", onchange = "getStopList()" })
                                @Html.ValidationMessageFor(r => Model.RouteId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.StopId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.StopId, Model.StopList, "--Select--", htmlAttributes: new { @class = "form-control select2 disabledFeilds", style = "width:100%;", onchange = "getVehicleList(); Get_ChargeDetails();" })
                                @Html.ValidationMessageFor(r => Model.StopId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.VehicleId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.VehicleId, Model.VehicleList, "--Select--", htmlAttributes: new { @class = "form-control select2 disabledFeilds", style = "width:100%;", onchange = "Get_VehicleDetails()" })
                                @Html.ValidationMessageFor(r => Model.VehicleId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.FacilityId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.FacilityId, Model.FacilityList, "--Select--", htmlAttributes: new { @class = "form-control select2 disabledFeilds", style = "width:100%;" })
                                @Html.ValidationMessageFor(r => Model.FacilityId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.DriverName)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.DriverName, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.DriverName, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.DriverMobile)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.DriverMobile, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.DriverMobile, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.HelperNo)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.HelperNo, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.HelperNo, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.Incharge)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.Incharge, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.Incharge, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.InchargeMobile)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.InchargeMobile, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.InchargeMobile, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SeatCapacity)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.SeatCapacity, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.SeatCapacity, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SeatOccupied)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.SeatOccupied, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.SeatOccupied, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.PickCharge)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.PickCharge, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.PickCharge, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.DropCharge)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.DropCharge, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.DropCharge, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.PickAndDropCharge)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.PickAndDropCharge, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })
                                @Html.ValidationMessageFor(r => Model.PickAndDropCharge, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.Date)</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.TextBoxFor(m => m.Date, htmlAttributes: new { @class = "form-control pull-right date disabledFeilds" })
                                @Html.ValidationMessageFor(r => Model.Date, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>

                    <div class="col-md-3">
                        <br /> <h5 id="btnWithdrawTransport" style="display:none;"><input type="button" onclick="ConfirmWithDrawTransport(this)" value="Withdraw Transport" class="btn btn-danger" /></h5>
                        <h5 id="btnAvailTransport" style="display:none;"><input onclick="ConfirmAvailTransport(this)" type="button" value="Avail Transport" class="btn btn-success" /></h5>
                    </div>
                </div>
            </div>
        </div>

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title">Transport Dues</h5>
                <div class="box-title pull-right checkbox">
                    <button style="display:none;" id="btnRemoveSync" title="Sync Transport" class="btn btn-primary btn-sm" type="button" onclick="ConfirmRemoveSync(this)">
                        <i class="fa fa-remove"></i> <span>Sync Transport</span>
                    </button>

                    <button style="display:none;" id="btnApplySync" title="Sync Transport" class="btn btn-primary btn-sm" type="button" onclick="ConfirmApplySync(this)">
                        <i class="fa fa-plus"></i> <span>Sync Transport</span>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div id="dueDetailsMainDiv">
                    @*@Html.Partial("_TransportDueDetails", Model)*@
                </div>
            </div>
        </div>
    }
</section>


<script>
    $(document).ready(function () {
        $('#rw_space').css('display', 'none');
        $('#rwFee_Mobile').css('display', 'none');
        $('#rw_space1').css('display', 'none');
        $('#rw_FatherName').css('display', 'none');

        if ('@ViewBag.erpNo' != null && '@ViewBag.erpNo' != "") {
            $('#ERPNo').val('@ViewBag.erpNo');
            checkToCallFunction($('#ERPNo').val(), '');
        }   
    });

    function ConfirmWithDrawTransport_Single(evt) {
        var i = $(evt).closest('td').attr('id');
        var wefDate = $('#DueList_' + i + '__DueDate').val();
        AsyncConfirmYesNo("Confirmation", "Are u sure to withdrawl transport for due Date " + wefDate + "?", YES_ConfirmWithDrawTransport_Single, MyNoFunction, evt);
    }

    function YES_ConfirmWithDrawTransport_Single(evt) {
        $('#CRUDFor').val('CANCEL');
        $('#IsSingleSave').val(true);
        removeFacilityCharge(evt);
        DoAjaxPostAndMore(evt);
    }

    function ConfirmAvailTransport_Single(evt) {
        var i = $(evt).closest('td').attr('id');
        var wefDate = $('#DueList_' + i + '__DueDate').val();
        AsyncConfirmYesNo("Confirmation", "Are u sure to avail transport for due Date " + wefDate + "?", YES_ConfirmAvailTransport_Single, MyNoFunction, evt);
    }

    function YES_ConfirmAvailTransport_Single(evt) {
        $('#CRUDFor').val('SAVE');
        $('#IsSingleSave').val(true);
        getFacilityCharge(evt);
        DoAjaxPostAndMore(evt);

    }



    function ConfirmWithDrawTransport(evt) {
        var wefDate = $('#Date').val();
        AsyncConfirmYesNo("Confirmation", "Are u sure to withdrawl transport w.e.f Date " + wefDate + "?", YES_ConfirmWithDrawTransport, MyNoFunction, evt);
    }

    function YES_ConfirmWithDrawTransport(evt) {
        $('#CRUDFor').val('CANCEL');
        DoAjaxPostAndMore_TransportationCRUD(evt);
    }



    function ConfirmAvailTransport(evt) {
        var wefDate = $('#Date').val();
        AsyncConfirmYesNo("Confirmation", "Are u sure to apply transport w.e.f Date " + wefDate + "?", YES_ConfirmAvailTransport, MyNoFunction, evt);
    }

    function YES_ConfirmAvailTransport(evt) {
        $('#CRUDFor').val('SAVE');
        DoAjaxPostAndMore_TransportationCRUD(evt);
    }




    function ConfirmRemoveSync(evt) {
        var wefDate = $('#Date').val();
        AsyncConfirmYesNo("Confirmation", "Are u sure to withdrawl transport due w.e.f Date " + wefDate + "?", YES_ConfirmRemoveSync, MyNoFunction, evt);
    }

    function YES_ConfirmRemoveSync(evt) {
        postRemoveAllFacilityCharges();
        DoAjaxPostAndMore(evt);
    }
    function MyNoFunction() {
        //alert('No Calling');
    }

    function ConfirmApplySync(evt) {
        var wefDate = $('#Date').val();
        AsyncConfirmYesNo("Confirmation", "Are you sure to apply transport due w.e.f Date " + wefDate + "?", YES_ConfirmApplySync, MyNoFunction, evt);
    }

    function YES_ConfirmApplySync(evt) {
        postApplyAllFacilityCharges();
        DoAjaxPostAndMore(evt);
    }




    //function enableDisabledFeilds() {
    //  //  $('.disabledFeilds').attr('disabled', false);
    //}

    function Get_ChargeDetails() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../AvailTransport/Get_ChargeDetails",
            data: { StopId: $('#StopId').val() },
            success: function (result) {
                $('#PickCharge').val(result.Item1);
                $('#DropCharge').val(result.Item2);
                $('#PickAndDropCharge').val(result.Item3);
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function Get_VehicleDetails() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../AvailTransport/Get_VehicleDetails",
            data: { VehicleId: $('#VehicleId').val() },
            success: function (result) {
                $('#SeatCapacity').val(result.Item1);
                $('#SeatOccupied').val(result.Item2);
                $('#DriverName').val(result.Item3);
                $('#DriverMobile').val(result.Item4);
                $('#HelperNo').val(result.Item5);
                $('#Incharge').val(result.Item6);
                $('#InchargeMobile').val(result.Item7);
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            complete: function () {
                spinnerHide();
            }
        });
    }


    function onStudentChangeFunction() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../AvailTransport/Get_AvailTransportDetails",
            data: { ERPNo: $('#StudentId').val(), SessionId: $('#SessionId').val() },
            success: function (result) {
                UpdateTransportInfoValues(result);
                GetTransportDues();
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            complete: function () {
                spinnerHide();
            }
        });
    }


    function EmptyValForNewStudent() {

    }

    function GetTransportDues() {
        $.ajax({
            type: "GET",
            url: "../AvailTransport/_TransportDueDetails",
            data: { ERPNo: $('#StudentId').val(), SessionId: $('#SessionId').val() },
            success: function (result) {
                $('#dueDetailsMainDiv').html(result);
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
        });
    }

    function CalculateRow(i) {
        var dueAmt = $('#DueList_' + i + '__Due').val();
        var paidAmt = $('#DueList_' + i + '__Paid').val();
        var balAmt = parseInt(dueAmt) - parseInt(paidAmt); //$('#ConsessionList_' + i + '__Balance').val();
        if (parseInt(balAmt) > 0) {
            $('#DueList_' + i + '__Balance').val(parseInt(balAmt));
            $('#DueList_' + i + '__Excess').val(0);

            $('#displayOnly_' + i).find("td").eq(3).html(parseInt(balAmt));
            $('#displayOnly_' + i).find("td").eq(4).html(0);
        } else if (parseInt(balAmt) < 0) {
            $('#DueList_' + i + '__Balance').val(0);
            $('#DueList_' + i + '__Excess').val(parseInt(paidAmt) - parseInt(dueAmt));

            $('#displayOnly_' + i).find("td").eq(3).html(0);
            $('#displayOnly_' + i).find("td").eq(4).html(parseInt(paidAmt) - parseInt(dueAmt));
        } else {
            $('#DueList_' + i + '__Balance').val(0);
            $('#DueList_' + i + '__Excess').val(0);

            $('#displayOnly_' + i).find("td").eq(3).html(0);
            $('#displayOnly_' + i).find("td").eq(4).html(0);
        }
        $('#Selected_TransportAmount').val($('#DueList_' + i + '__Due').val());


        $('#Selected_DueDate').val($('#DueList_' + i + '__DueDate').val());
        $('#Selected_FeeHeadId').val($('#DueList_' + i + '__HeadID').val());
        $('#Selected_TransportAmount').val($('#DueList_' + i + '__Due').val());
        $('#Selected_TransRefNo').val($('#DueList_' + i + '__TransRefNo').val());
    }

    function UpdateTransportInfoValues(data) {
        var stopHtml = '<option value="">--Select--</option>';
        var vehicleHtml = '<option value="">--Select--</option>';

        //alert(data.IsAvailTransport);

        if (data.IsAvailTransport) {
            $('#btnWithdrawTransport').removeAttr('style');
            $('#btnAvailTransport').removeAttr('style');
            $('#btnAvailTransport').css('display', 'none');


            $('#btnApplySync').removeAttr('style');
            $('#btnRemoveSync').removeAttr('style');
            $('#btnRemoveSync').css('display', 'none');

        } else {
            $('#btnAvailTransport').removeAttr('style');
            $('#btnWithdrawTransport').removeAttr('style');
            $('#btnWithdrawTransport').css('display', 'none');


            $('#btnApplySync').removeAttr('style');
            $('#btnRemoveSync').removeAttr('style');
            $('#btnApplySync').css('display', 'none');
        }


        $('#IsAvailTransport').attr('checked', data.IsAvailTransport);
        $('#RouteId').val(data.RouteId);
        $('#StopId').val(data.StopId);
        $('#VehicleId').val(data.VehicleId);
        $('#FacilityId').val(data.FacilityId).change();

        var routeName = "";
        for (var i = 0; i < data.StopList.length; i++) {
            routeName = data.RouteList[i].Text;
        }

        $('#RouteId option[value=' + data.RouteId + ']').attr('selected', 'selected');
        $('#RouteId').prop('title', routeName);
        $('#select2-RouteId-container').html(routeName);

        for (var i = 0; i < data.StopList.length; i++) {
            stopHtml += '<option selected=true value="' + data.StopList[i].Value + '">' + data.StopList[i].Text + '</option>';
        }

        for (var i = 0; i < data.VehicleList.length; i++) {
            // alert(data.VehicleList[i].Value);
            vehicleHtml += '<option selected=true value="' + data.VehicleList[i].Value + '">' + data.VehicleList[i].Text + '</option>';
        }

        $('#StopId').html(stopHtml);
        $('#VehicleId').html(vehicleHtml);

        $('#DriverName').val(data.DriverName);
        $('#DriverMobile').val(data.DriverMobile);
        $('#HelperNo').val(data.HelperNo);
        $('#Incharge').val(data.Incharge);
        $('#InchargeMobile').val(data.InchargeMobile);
        $('#SeatCapacity').val(data.SeatCapacity);
        $('#SeatOccupied').val(data.SeatOccupied);

        $('#PickCharge').val(data.PickCharge);
        $('#DropCharge').val(data.DropCharge);
        $('#PickAndDropCharge').val(data.PickAndDropCharge);

        $('#Date').val(data.Date);
    }

    function getStopList() {
        var stopHtml = '<option value="">--Select--</option>';
        if ($('#RouteId').val() != null && $('#RouteId').val() != '') {
            $.ajax({
                type: "GET",
                url: "../AvailTransport/Get_AvailTransportDropDowns",
                data: { RouteId: $('#RouteId').val(), QueryFor: "GetStopList", StopId: "", ERPNo: "", SessionId: "" },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        stopHtml += '<option value=' + result[i].Value + '>' + result[i].Text + '</option>';
                    }
                    $('#StopId').html(stopHtml);
                },
            });
        } else {
            $('#StopId').val(null);
            $('#StopId').html(stopHtml);

            $('#VehicleId').val(null);
            $('#VehicleId').html(stopHtml);
        }
    }


    function getVehicleList() {
        var vehicleHtml = '<option value="">--Select--</option>';
        if ($('#StopId').val() != null && $('#StopId').val() != '') {
            $.ajax({
                type: "GET",
                url: "../AvailTransport/Get_AvailTransportDropDowns",
                data: { RouteId: "", QueryFor: "GetVehList", StopId: $('#StopId').val(), ERPNo: "", SessionId: "" },
                success: function (result) {
                    for (var i = 0; i < result.length; i++) {
                        vehicleHtml += '<option value=' + result[i].Value + '>' + result[i].Text + '</option>';
                    }
                    $('#VehicleId').html(vehicleHtml);
                },
            });
        } else {
            $('#VehicleId').val(null);
            $('#VehicleId').html(vehicleHtml);
        }
    }

    function EnableEditableRow(selectedRow) {
        var rowCount = $('#hddnRowLenght').val();
        for (var i = 0; i < rowCount; i++) {
            if (i == selectedRow) {

                $('#Selected_DueDate').val($('#DueList_' + i + '__DueDate').val());
                $('#Selected_FeeHeadId').val($('#DueList_' + i + '__HeadID').val());
                $('#Selected_TransportAmount').val($('#DueList_' + i + '__Due').val());
                $('#Selected_TransRefNo').val($('#DueList_' + i + '__TransRefNo').val());

                $('#displayOnly_' + i).css('display', 'none');
                $('#editable_' + i).removeAttr('style');
            } else {
                $('#displayOnly_' + i).removeAttr('style');
                $('#editable_' + i).css('display', 'none');
            }
        }
    }

    function postApplyAllFacilityCharges() {
        var rowCount = $('#hddnRowLenght').val();

        var facilityVal = $('#FacilityId').val();
        var chargesVal = 0;
        if (facilityVal == 'P') {
            chargesVal = $('#PickCharge').val();
        } else if (facilityVal == 'D') {
            chargesVal = $('#DropCharge').val();
        } else if (facilityVal == 'PD') {
            chargesVal = $('#PickAndDropCharge').val();
        }

        for (var i = 0; i < rowCount; i++) {
            if ($('#DueList_' + 0 + '__AvailTransport').val()) {
                $('#displayOnly_' + i).find("td").eq(1).html(chargesVal);
                $('#DueList_' + i + '__Due').val(chargesVal);

                CalculateRow(i);
            }
        }
        $('#CRUDFor').val("SAVE");
    }

    function postRemoveAllFacilityCharges() {
        var rowCount = $('#hddnRowLenght').val();
        for (var i = 0; i < rowCount; i++) {
            if ($('#DueList_' + 0 + '__WithDrawlTransport').val()) {
                $('#displayOnly_' + i).find("td").eq(1).html(0);
                $('#DueList_' + i + '__Due').val(0);
                CalculateRow(i);
            }
        }
        $('#CRUDFor').val("CANCEL");
    }

    function getFacilityCharge(evt) {
        var i = $(evt).closest('td').attr('id');
        var facilityVal = $('#FacilityId').val();
        var chargesVal = 0;
        if (facilityVal == 'P') {
            chargesVal = $('#PickCharge').val();
        } else if (facilityVal == 'D') {
            chargesVal = $('#DropCharge').val();
        } else if (facilityVal == 'PD') {
            chargesVal = $('#PickAndDropCharge').val();
        }
        $('#displayOnly_' + i).find("td").eq(1).html(chargesVal);
        $('#DueList_' + i + '__Due').val(chargesVal);
        CalculateRow(i);
    }

    function removeFacilityCharge(evt) {
        var i = $(evt).closest('td').attr('id');

        $('#displayOnly_' + i).find("td").eq(1).html(0);
        $('#DueList_' + i + '__Due').val(0);

        CalculateRow(i);
    }

    function DoAjaxPostAndMore_TransportationCRUD(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../AvailTransport/Trasnport_Transportation_CRUD',
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    onStudentChangeFunction();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }


    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    GetTransportDues();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>