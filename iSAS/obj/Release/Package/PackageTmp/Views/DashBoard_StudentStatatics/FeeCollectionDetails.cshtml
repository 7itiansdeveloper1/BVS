@model ISas.Entities.DashboardEntities.FeeCollectionDetailsModel
<style>
    #chartdiv_annualDueReceived {
        width: 100%;
        height: 500px;
        font-size: 11px;
    }

    #chartdiv_paidDefaulter {
        width: 100%;
        height: 500px;
    }

    #chartdiv_monthlyDueReceived {
        width: 100%;
        height: 500px;
        font-size: 11px;
    }

    .chartdiv_gauge {
        width: 100%;
        height: 500px;
    }
</style>

<script src="~/bower_components/datatables.net/js/dataTables.buttons.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.flash.min.js"></script>
<script src="~/bower_components/datatables.net/js/jszip.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.print.min.js"></script>
<script src="~/bower_components/datatables.net/js/pdfmake.min.js"></script>
<script src="~/bower_components/datatables.net/js/vfs_fonts.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.html5.min.js"></script>
<script src="~/bower_components/datatables.net/js/buttons.colVis.min.js"></script>
<script src="~/bower_components/datatables.net/js/dataTables.select.min.js"></script>
<link rel="stylesheet" href="~/bower_components/datatables.net/css/buttons.dataTables.min.css">
<style>
    .chartdiv {
        width: 100%;
        height: 200px;
    }

    .chartdiv_Annual {
        width: 100%;
        height: 500px;
    }
</style>
<section class="content-header">
    <h1>Fee Collection Details</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li><a href="@Url.Action("Dashboard", "Dashboard")">Dashboard</a></li>
        <li class="active">Fee Collection Details</li>
    </ol>
</section>
<section class="content">
    @*<div class="row">
            <div class="col-md-12">
                <div class="box box-solid">
                    <div class="box-body">
                        <div id="carousel-example-generic" class="carousel slide" data-ride="carousel">
                            <ol class="carousel-indicators">
                                <li data-target="#carousel-example-generic" data-slide-to="3" class="active"></li>
                                <li data-target="#carousel-example-generic" data-slide-to="4" class=""></li>
                                <li data-target="#carousel-example-generic" data-slide-to="5" class=""></li>

                                <li data-target="#carousel-example-generic" data-slide-to="0"></li>
                                <li data-target="#carousel-example-generic" data-slide-to="1" class=""></li>
                                <li data-target="#carousel-example-generic" data-slide-to="2" class=""></li>
                            </ol>
                            <div class="carousel-inner">
                                <div class="item active">
                                    <div class="chartdiv_gauge" id="chartdiv_gauge_paidDefaulter"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;">Total Paid</label></h4>
                                    </div>
                                </div>

                                <div class="item">
                                    <div class="chartdiv_gauge" id="chartdiv_gauge_monthlyDueReceived"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;">Total Monthly Received</label></h4>
                                    </div>
                                </div>

                                <div class="item">
                                    <div class="chartdiv_gauge" id="chartdiv_gauge_annualyDueReceived"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;">Total Annual Received</label></h4>
                                    </div>
                                </div>
                                <div class="item">
                                    <div id="chartdiv_monthlyDueReceived"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;"> Monthly Due/Received</label></h4>
                                    </div>
                                </div>
                                <div class="item">
                                    <div id="chartdiv_paidDefaulter"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;">Paid/Defaulter</label></h4>
                                    </div>
                                </div>
                                <div class="item">
                                    <div id="chartdiv_annualDueReceived"></div>
                                    <div class="carousel-caption">
                                        <h4><label style="color:darkblue;">Annual Due/Received</label></h4>
                                    </div>
                                </div>
                            </div>
                            <a style="color:darkblue;" class="left carousel-control" href="#carousel-example-generic" data-slide="prev">
                                <span class="fa fa-angle-left"></span>
                            </a>
                            <a style="color:darkblue;" class="right carousel-control" href="#carousel-example-generic" data-slide="next">
                                <span class="fa fa-angle-right"></span>
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>*@

    <div class="row">
        <div class="col-md-6">
            <h4 class="text-primary">Defaulter Funnel</h4>
            <div class="chartdiv" id="chartdiv"></div>
        </div>
        <div class="col-md-6">
            <h4 class="text-primary">Monthly Budget</h4>
            <div class="chartdiv" id="chartdiv1"></div>
        </div>
    </div>
    @*<div class="row">
            <div class="col-md-12">
                <div class="chartdiv_Annual" id="chartdiv2"></div>
            </div>
        </div>*@

    <div class="row">
        <div class="col-md-12">
            <div class="box box-primary">
                <div class="box-body">
                    <div style="overflow-y:auto;">
                        <table id="example1" class="table table-bordered table-striped nowrap">
                            <thead>
                                <tr class="text-center" style="font-size:medium;">
                                    <td colspan="2"><strong> Total</strong></td>
                                    <td>@Html.DisplayFor(r => Model.Strength) </td>
                                    <td><strong>@Html.DisplayFor(r => Model.PaidStudent)</strong> </td>
                                    <td><a href="#" onclick="GetDashBoard_FeeCollectionDetails('', '', 'Total Defaulter')"> <strong><u> @Html.DisplayFor(r => Model.DefaulterStudent)</u></strong> </a>  </td>
                                    <td><strong> @Html.DisplayFor(r => Model.Due)</strong> </td>
                                    <td><strong>@Html.DisplayFor(r => Model.Received)</strong> </td>
                                    <td><a href="#" onclick="GetDashBoard_FeeCollectionDetails('', '', 'Total Balance')"> <strong><u> @Html.DisplayFor(r => Model.Balance)</u></strong> </a>  </td>
                                    <td><strong> @Html.DisplayFor(r => Model.AnnualDue)</strong> </td>
                                    <td><strong> @Html.DisplayFor(r => Model.AnnualReceived)</strong> </td>
                                    <td><strong> @Html.DisplayFor(r => Model.AnnualBalance)</strong> </td>
                                </tr>
                                <tr>
                                    <th>S. No</th>
                                    <th style="vertical-align:middle;">Class Name</th>
                                    <th style="vertical-align:middle;">Strength</th>
                                    <th style="vertical-align:middle;">Paid</th>
                                    <th style="vertical-align:middle;">Defaulter</th>
                                    <th style="vertical-align:middle;">Due</th>
                                    <th style="vertical-align:middle;">Received</th>
                                    <th style="vertical-align:middle;">Balance</th>
                                    <th>Annual <br /> Due</th>
                                    <th>Annual <br /> Received</th>
                                    <th>Annual <br /> Balance</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.FeeCollectionDetails != null)
                                {
                                    int count = 1;
                                    for (int i = 0; i < Model.FeeCollectionDetails.Count(); i++)
                                    {
                                        <tr class="text-center">
                                            <td>@Html.DisplayFor(r => count)</td>
                                            <td>@Html.DisplayFor(r => Model.FeeCollectionDetails[i].Fullclass)</td>
                                            <td><a href="#" onclick="GetDashBoard_FeeCollectionDetails('@Model.FeeCollectionDetails[i].Fullclass', '@Model.FeeCollectionDetails[i].ClassSectionId', 'Strength')"> <strong><u> @Html.DisplayFor(r => Model.FeeCollectionDetails[i].Strength)</u></strong> </a></td>
                                            <td> @Html.DisplayFor(r => Model.FeeCollectionDetails[i].PaidStudent)</td>
                                            <td><a href="#" onclick="GetDashBoard_FeeCollectionDetails('@Model.FeeCollectionDetails[i].Fullclass', '@Model.FeeCollectionDetails[i].ClassSectionId', 'Defaulter')"> <strong><u>  @Html.DisplayFor(r => Model.FeeCollectionDetails[i].DefaulterStudent)</u></strong> </a></td>
                                            <td> @Html.DisplayFor(r => Model.FeeCollectionDetails[i].Due)</td>
                                            <td>@Html.DisplayFor(r => Model.FeeCollectionDetails[i].Received)</td>
                                            <td><a href="#" onclick="GetDashBoard_FeeCollectionDetails('@Model.FeeCollectionDetails[i].Fullclass', '@Model.FeeCollectionDetails[i].ClassSectionId', 'Balance')"><strong> <u>  @Html.DisplayFor(r => Model.FeeCollectionDetails[i].Balance)</u></strong> </a></td>
                                            <td>@Html.DisplayFor(r => Model.FeeCollectionDetails[i].AnnualDue)</td>
                                            <td>@Html.DisplayFor(r => Model.FeeCollectionDetails[i].AnnualReceived)</td>
                                            <td>@Html.DisplayFor(r => Model.FeeCollectionDetails[i].AnnualBalance)</td>
                                        </tr>
                                        count++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <!-- /.box-body -->
            </div>
        </div>
    </div>
</section>
<script>
    $(function () {
        $('#example1').DataTable({
            "pageLength": 25
        });
    });
    function GetDashBoard_FeeCollectionDetails(ClassName, ClassSectionId, StaticMode) {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../DashBoard_StudentStatatics/_StudentFeeCollectionDetails',
            data: { ClassSectionId: ClassSectionId, StaticMode: StaticMode, ClassName: ClassName },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                OpenMessegeModal(response, 'Primary', 'lg', ClassName + '  :- ' + StaticMode);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>
<script src="~/bower_components/newchart.js/amcharts.js"></script>
<script src="~/bower_components/newchart.js/export.min.js"></script>
<script src="~/bower_components/newchart.js/light.js"></script>
<script src="~/bower_components/newchart.js/pie.js"></script>
<script src="~/bower_components/newchart.js/serial.js"></script>
<link href="~/bower_components/newchart.css/export.css" rel="stylesheet" />
<script src="~/bower_components/newchart.js/gauge.js"></script>
<script src="~/bower_components/newchart.js/funnel.js"></script>


<script>
    $(function () {
        var chart = AmCharts.makeChart("chartdiv", {
            "type": "funnel",
            "theme": "light",
            "dataProvider": [{
                "title": "Strength",
                "value": @Model.Strength
            }
            , {
                "title": "Defaulter",
                "value": @Model.DefaulterStudent
            } ,   {
                "title": "Paid",
                "value": @Model.PaidStudent
            }],
            "balloon": {
                "fixedPosition": true
            },
            "valueField": "value",
            "titleField": "title",
            "marginRight": 240,
            "marginLeft": 50,
            "startX": -500,
            "depth3D": 100,
            "angle": 40,
            "outlineAlpha": 1,
            "outlineColor": "#FFFFFF",
            "outlineThickness": 2,
            "labelPosition": "right",
            "balloonText": "[[title]]: [[value]]n[[description]]",
            "export": {
                "enabled": true
            }
        });
    });
</script>
<script>
    $(function () {
        var chart = AmCharts.makeChart("chartdiv1", {
            "type": "funnel",
            "theme": "light",
            "dataProvider": [{
                "title": "Due",
                "value": @Model.Due
            },
            {
                "title": "Balance",
                "value": @Model.Balance
            },    {
                "title": "Received",
                "value": @Model.Received
            }],
            "balloon": {
                "fixedPosition": true
            },
            "valueField": "value",
            "titleField": "title",
            "marginRight": 240,
            "marginLeft": 50,
            "startX": -500,
            "depth3D": 100,
            "angle": 40,
            "outlineAlpha": 1,
            "outlineColor": "#FFFFFF",
            "outlineThickness": 2,
            "labelPosition": "right",
            "balloonText": "[[title]]: [[value]]n[[description]]",
            "export": {
                "enabled": true
            }
        });
    });
</script>

@*<script>
        $(function () {
            var chart = AmCharts.makeChart("chartdiv2", {
                "type": "funnel",
                "theme": "light",
                "dataProvider": [{
                    "title": "Annual Due",
                    "value": 35654335
                }, {
                    "title": "Annual Received",
                    "value": 14768705
                }, {
                    "title": "Annual Balance",
                    "value": 20885630
                }],
                "balloon": {
                    "fixedPosition": true
                },
                "valueField": "value",
                "titleField": "title",
                "marginRight": 240,
                "marginLeft": 50,
                "startX": -500,
                "depth3D": 100,
                "angle": 40,
                "outlineAlpha": 1,
                "outlineColor": "#FFFFFF",
                "outlineThickness": 2,
                "labelPosition": "right",
                "balloonText": "[[title]]: [[value]]n[[description]]",
                "export": {
                    "enabled": true
                }
            });
        });
    </script>*@

@*<script>
        $(function () {
            $.ajax({
                type: "GET",
                url: "../DashBoard_StudentStatatics/FeeCollectionDetails_Charts",
                data: {},
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (result) {
                    annualDueReceivedChart(result.annualDueReceivedData);
                    paidDefaulterChart(result.paidDefaulterData);
                    monthlyDueReceivedChart(result.monthlyDueReceivedData);
                    gaugeChart(result.paidDefaulter, result.monthlyDueReceived, result.annualyDueReceived)
                },
            });
        });

        function monthlyDueReceivedChart(data) {
            var chartdiv_monthlyDueReceived = AmCharts.makeChart("chartdiv_monthlyDueReceived", {
                "theme": "light",
                "type": "serial",
                "dataProvider": data,
                "valueAxes": [{
                    "unit": "",
                    "position": "left",
                    "title": "Amount",
                }],
                "startDuration": 1,
                "graphs": [{
                    "balloonText": "Class [[category]] (Due): <b>[[value]]</b>",
                    "fillAlphas": 0.9,
                    "lineAlpha": 0.2,
                    "title": "Due",
                    "type": "column",
                    "valueField": "due"
                }, {
                    "balloonText": "Class [[category]] (Received): <b>[[value]]</b>",
                    "fillAlphas": 0.9,
                    "lineAlpha": 0.2,
                    "title": "Received",
                    "type": "column",
                    "clustered": false,
                    "columnWidth": 0.5,
                    "valueField": "received"
                }],
                "plotAreaFillAlphas": 0.1,
                "categoryField": "className",
                "categoryAxis": {
                    "gridPosition": "start"
                },
                "export": {
                    "enabled": true
                }
            });
        }
        function annualDueReceivedChart(data) {
            var chartdiv_annualDueReceived = AmCharts.makeChart("chartdiv_annualDueReceived", {
                "type": "serial",
                "theme": "light",
                "categoryField": "className",
                "rotate": true,
                "startDuration": 1,
                "categoryAxis": {
                    "gridPosition": "start",
                    "position": "left"
                },
                "trendLines": [],
                "graphs": [
                    {
                        "balloonText": "Annual Due :[[value]]",
                        "fillAlphas": 0.8,
                        "id": "AmGraph-1",
                        "lineAlpha": 0.2,
                        "title": "Annual Due",
                        "type": "column",
                        "valueField": "annualDue"
                    },
                    {
                        "balloonText": "Annula Received:[[value]]",
                        "fillAlphas": 0.8,
                        "id": "AmGraph-2",
                        "lineAlpha": 0.2,
                        "title": "Annula Received",
                        "type": "column",
                        "valueField": "annualReceived"
                    }
                ],
                "guides": [],
                "valueAxes": [
                    {
                        "id": "ValueAxis-1",
                        "position": "top",
                        "axisAlpha": 0
                    }
                ],
                "allLabels": [],
                "balloon": {},
                "titles": [],
                "dataProvider": data,
                "export": {
                    "enabled": true
                }

            });
        }
        function paidDefaulterChart(data) {
            var chartdiv_paidDefaulter = AmCharts.makeChart("chartdiv_paidDefaulter", {
                "type": "serial",
                "theme": "light",
                "rotate": true,
                "marginBottom": 50,
                "dataProvider": data,
                "startDuration": 1,
                "graphs": [{
                    "fillAlphas": 0.8,
                    "lineAlpha": 0.2,
                    "type": "column",
                    "valueField": "paid",
                    "title": "Paid Count",
                    "labelText": "[[value]]",
                    "clustered": false,
                    "labelFunction": function (item) {
                        return Math.abs(item.values.value);
                    },
                    "balloonFunction": function (item) {
                        return item.category + ": " + Math.abs(item.values.value);
                    }
                }, {
                    "fillAlphas": 0.8,
                    "lineAlpha": 0.2,
                    "type": "column",
                    "valueField": "defaulter",
                    "title": "Defaulter Count",
                    "labelText": "[[value]]",
                    "clustered": false,
                    "labelFunction": function (item) {
                        return Math.abs(item.values.value);
                    },
                    "balloonFunction": function (item) {
                        return item.category + ": " + Math.abs(item.values.value);
                    }
                }],
                "categoryField": "className",
                "categoryAxis": {
                    "gridPosition": "start",
                    "gridAlpha": 0.2,
                    "axisAlpha": 0
                },
                "valueAxes": [{
                    "gridAlpha": 0,
                    "ignoreAxisWidth": true,
                    "labelFunction": function (value) {
                        return Math.abs(value) + '';
                    },
                    "guides": [{
                        "value": 0,
                        "lineAlpha": 0.2
                    }]
                }],
                "balloon": {
                    "fixedPosition": true
                },
                "chartCursor": {
                    "valueBalloonsEnabled": false,
                    "cursorAlpha": 0.05,
                    "fullWidth": true
                },
                "allLabels": [{
                    "text": "Paid",
                    "x": "28%",
                    "y": "97%",
                    "bold": true,
                    "align": "middle"
                }, {
                    "text": "Defaulter",
                    "x": "75%",
                    "y": "97%",
                    "bold": true,
                    "align": "middle"
                }],
                "export": {
                    "enabled": true
                }
            });
        }
        function gaugeChart(paidDefaulter, monthlyDueReceived, annualyDueReceived) {
            var chartdiv_gauge_paidDefaulter = AmCharts.makeChart("chartdiv_gauge_paidDefaulter", {
                "theme": "light",
                "type": "gauge",
                "axes": [{
                    "topTextFontSize": 20,
                    "topTextYOffset": 70,
                    "axisColor": "#31d6ea",
                    "axisThickness": 1,
                    "endValue": 100,
                    "gridInside": true,
                    "inside": true,
                    "radius": "50%",
                    "valueInterval": 10,
                    "tickColor": "#67b7dc",
                    "startAngle": -90,
                    "endAngle": 90,
                    "unit": "%",
                    "bandOutlineAlpha": 0,
                    "bands": [{
                        "color": "#0080ff",
                        "endValue": 100,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }, {
                        "color": "#3cd3a3",
                        "endValue": 0,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }]
                }],
                "arrows": [{
                    "alpha": 1,
                    "innerRadius": "35%",
                    "nailRadius": 0,
                    "radius": "170%"
                }]
            });

            var chartdiv_gauge_monthlyDueReceived = AmCharts.makeChart("chartdiv_gauge_monthlyDueReceived", {
                "theme": "light",
                "type": "gauge",
                "axes": [{
                    "topTextFontSize": 20,
                    "topTextYOffset": 70,
                    "axisColor": "#31d6ea",
                    "axisThickness": 1,
                    "endValue": 100,
                    "gridInside": true,
                    "inside": true,
                    "radius": "50%",
                    "valueInterval": 10,
                    "tickColor": "#67b7dc",
                    "startAngle": -90,
                    "endAngle": 90,
                    "unit": "%",
                    "bandOutlineAlpha": 0,
                    "bands": [{
                        "color": "#0080ff",
                        "endValue": 100,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }, {
                        "color": "#3cd3a3",
                        "endValue": 0,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }]
                }],
                "arrows": [{
                    "alpha": 1,
                    "innerRadius": "35%",
                    "nailRadius": 0,
                    "radius": "170%"
                }]
            });

            var chartdiv_gauge_annualyDueReceived = AmCharts.makeChart("chartdiv_gauge_annualyDueReceived", {
                "theme": "light",
                "type": "gauge",
                "axes": [{
                    "topTextFontSize": 20,
                    "topTextYOffset": 70,
                    "axisColor": "#31d6ea",
                    "axisThickness": 1,
                    "endValue": 100,
                    "gridInside": true,
                    "inside": true,
                    "radius": "50%",
                    "valueInterval": 10,
                    "tickColor": "#67b7dc",
                    "startAngle": -90,
                    "endAngle": 90,
                    "unit": "%",
                    "bandOutlineAlpha": 0,
                    "bands": [{
                        "color": "#0080ff",
                        "endValue": 100,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }, {
                        "color": "#3cd3a3",
                        "endValue": 0,
                        "innerRadius": "105%",
                        "radius": "170%",
                        "gradientRatio": [0.5, 0, -0.5],
                        "startValue": 0
                    }]
                }],
                "arrows": [{
                    "alpha": 1,
                    "innerRadius": "35%",
                    "nailRadius": 0,
                    "radius": "170%"
                }]
            });

            //setInterval(setValue, 2000);
            setTimeout(function () {
                setValue();
            }, 2000);
            //setValue();
            // set random value
            function setValue() {
                //var value = Math.round(Math.random() * 100);
                chartdiv_gauge_paidDefaulter.arrows[0].setValue(paidDefaulter);
                chartdiv_gauge_paidDefaulter.axes[0].setTopText(paidDefaulter + " %");
                chartdiv_gauge_paidDefaulter.axes[0].bands[1].setEndValue(paidDefaulter);

                chartdiv_gauge_monthlyDueReceived.arrows[0].setValue(monthlyDueReceived);
                chartdiv_gauge_monthlyDueReceived.axes[0].setTopText(monthlyDueReceived + " %");
                chartdiv_gauge_monthlyDueReceived.axes[0].bands[1].setEndValue(monthlyDueReceived);

                chartdiv_gauge_annualyDueReceived.arrows[0].setValue(annualyDueReceived);
                chartdiv_gauge_annualyDueReceived.axes[0].setTopText(annualyDueReceived + " %");
                chartdiv_gauge_annualyDueReceived.axes[0].bands[1].setEndValue(annualyDueReceived);
            }
        }
    </script>*@
