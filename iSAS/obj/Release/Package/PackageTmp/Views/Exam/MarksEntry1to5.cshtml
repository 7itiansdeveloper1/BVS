@model ISas.Web.ViewModels.MarksEntry1to5ViewModel
@{
    ViewBag.Title = "MarksEntry1to5";
}
<section class="content-header">
    <h1>
        Marks Entry <small>Class Wise</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>CCE Exam Module</li>
        <li class="active">VI to X Marks Entry</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("Student_MarksEntry_CRUD", "Exam", FormMethod.Post))
    {
        <div class="box box-success">
            <div class="box-header with-border">
                <span class="box-title pull-right"><a href="#" onclick="exportToExcel('tblExportToExcel', 'tblHeader')" title="Export to Excel" class="fa fa-file-excel-o btnDefaultColor"></a></span>
                <span class="box-title pull-right" style="padding-right:0.5%;"><a href="#" onclick="window.open('StudentMarkListPrintPage','Exam','width=650,height=800').print()" title="Print" class="fa fa-print btnDefaultColor"></a></span>

                <span class="pull-right box-title" style="padding-right:1%;">
                    <input onclick="sendEmail()" type="button" class="btn btn-primary btn-xs" value="SEND EMAIL" />
                </span>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">Session</label>
                            @Html.HiddenFor(r=> Model.SelectedSessionId)
                            @Html.DropDownListFor(m => m.SelectedSessionId, Model.SessionList, new { @class = "form-control select2", style = "width:100%;", id = "SelectedSessionId", disabled = "disabled" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">Term</label>
                            @Html.DropDownListFor(m => m.SelectedExamId, Model.ExamList, "-- Select Exam --", new { @class = "form-control select2", style = "width:100%;", onchange = "getClassList()" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">Class</label>
                            @Html.DropDownListFor(m => m.SelectedClassId, Model.ClassList, new { @class = "form-control select2", style = "width:100%;", onchange = "getSectionList()" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">Section</label>
                            @Html.DropDownListFor(m => m.SelectedSectionId, Model.SectionList, new { @class = "form-control select2", style = "width:100%;", onchange = "getSubjectList()" })
                        </div>

                    </div>

                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <label for="">Subject</label>
                            @Html.DropDownListFor(m => m.SelectedSubjectId, Model.SubjectList, new { @class = "form-control select2", style = "width:100%;", onchange = "getAssismentList()" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <label for="">Assessment</label>
                            @Html.DropDownListFor(m => m.SelectedAssessmentId, Model.AssessmentList, new { @class = "form-control select2", style = "width:100%;", onchange = "getStudentList()" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div id="divMarkList">
                        @Html.Partial("_StudentMarkListPartial", Model)
                    </div>
                </div>

            </div>
            <div class="box-footer">
                <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
            </div>
        </div>
    }
</section>

<script type="text/javascript">
    function fun_ApplyAll_Grade() {
        $('#MarkTable > tbody > tr').each(function (i) {
            $('#StudentsMarkList_' + i + '__StudentsMarkFromDBList_StudentGrade').val($('#ApplyAll_Grade').val()).change();
        });
    }

    function fun_ApplyAll_Marks() {
        $('#MarkTable > tbody > tr').each(function (i) {
            $('#StudentsMarkList_' + i + '__StudentsMarkFromDBList_StudentMark').val($('#ApplyAll_Marks').val());
        });
    }



    function getClassList() {
        $.ajax({
            url: '../Exam/BindClassddl',
            data: { examId: $('#SelectedExamId').val() },
            type: 'get',
            success: function (data) {
                var $ddlClass = $('#SelectedClassId');
                $ddlClass.empty();
                $('#SelectedSectionId').empty();
                $('#SelectedSubjectId').empty();
                $('#SelectedAssessmentId').empty();
                $ddlClass.append($("<option />").text("--- Select Class ---"));
                $.each(data, function () {
                    $ddlClass.append($("<option />").val(this.ClassId).text(this.ClassName));
                });
            },
        })
    }

    function getSectionList() {
        $.ajax({
            url: '../Exam/BindSectionddl',
            data: { classId: $('#SelectedClassId').val(), examId: $('#SelectedExamId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSec = $('#SelectedSectionId');
                $ddlSec.empty();
                $('#SelectedSubjectId').empty();
                $('#SelectedAssessmentId').empty();
                $ddlSec.append($("<option />").text("--- Select Section ---"));
                $.each(data, function () {
                    $ddlSec.append($("<option />").val(this.SectionId).text(this.SectionName));
                })
            })
        });
    }

    function getSubjectList() {
        $.ajax({
            url: '../Exam/BindSubjectddl',
            data: { classId: $('#SelectedClassId').val(), sectionId: $('#SelectedSectionId').val(), examId: $('#SelectedExamId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSubject = $('#SelectedSubjectId');
                $ddlSubject.empty();
                $('#SelectedAssessmentId').empty();
                $ddlSubject.append($("<option />").text("--- Select Subject ---"));
                $.each(data, function () {
                    $ddlSubject.append($("<option />").val(this.SubjectId).text(this.SubjectName));
                })
            })
        })
    }

    function getAssismentList() {
        $.ajax({
            url: '../Exam/BindAssessmentddl',
            data: {
                classId: $('#SelectedClassId').val(), sectionId: $('#SelectedSectionId').val(),
                examId: $('#SelectedExamId').val(), subjectId: $('#SelectedSubjectId').val()
            },
            type: 'get',
            success: (function (data) {
                var $ddlAssessment = $('#SelectedAssessmentId');
                $ddlAssessment.empty();
                $ddlAssessment.append($("<option />").text("--- Select Assessment ---"));
                $.each(data, function () {
                    $ddlAssessment.append($("<option />").val(this.AssessmentId).text(this.AssessmentName));
                })
            })
        })
    }

    function getStudentList() {
        $.ajax({
            url: '../Exam/BindStudentMarkGrid',
            data: {
                classId: $('#SelectedClassId').val(), sectionId: $('#SelectedSectionId').val(), examId: $('#SelectedExamId').val(), subjectId: $('#SelectedSubjectId').val(), assessmentId: $('#SelectedAssessmentId').val(),
                SessionName: $('#SelectedSessionId option:selected').text(), TermName: $('#SelectedExamId option:selected').text(),
                ClassName: $('#SelectedClassId option:selected').text(), SectionName: $('#SelectedSectionId option:selected').text(),
                SubjectName: $('#SelectedSubjectId option:selected').text(), AssessmentName: $('#SelectedAssessmentId option:selected').text(),
            },
            type: 'get',
            success: (function (data) {
                $('#divMarkList').empty();
                $('#divMarkList').html(data);
            })
        })
    }

    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color );
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function sendEmail() {
        $.ajax({
            type: 'POST',
            url: '../Exam/StudentMarkListPrintPage',
            beforeSend: function () {
                spinnerShow();
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            data: { IsConfirmation: true },
            success: function (response) {
                AsyncConfirmYesNo("Email Content, Are u sure to send?", response, MyYesFunction, MyNoFunction, null, 'lg');
            },
            complete: function () {
                spinnerHide();
            }
        })
        return false;
    }

    function MyYesFunction() {
        sendEmailConfirm();
    }
    function MyNoFunction() {
        return false;
    }

    function sendEmailConfirm() {
        $.ajax({
            type: 'POST',
            url: '../Exam/SendEmail',
            beforeSend: function () {
                spinnerShow();
            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            data: {},
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Success');
                }
                else if (response.status == 'failed') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Warning');
                }
            },
            complete: function () {
                spinnerHide();
            }
        })
    }
</script>