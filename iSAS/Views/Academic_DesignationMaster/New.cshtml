@model ISas.Entities.Academic.Academic_DesignationMasterModels
@{
    ViewBag.Title = "New";
}

<section class="content-header">
    <h1>
        Designation Master
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>School</li>
        <li class="active">Designation Master</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Academic_DesignationMaster_CRUD", "Academic_DesignationMaster", FormMethod.Post, htmlAttributes: new { }))
    {
        @Html.HiddenFor(r => Model.DesigID)

        @Html.Hidden("hddnRowLenght")

        <div class="box box-success">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.DesigName)<i class="mandateLbl">*</i></label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.DesigName, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(r => Model.DesigName, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

            </div>
            <div class="box-footer">
                <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
                <button class="btn btn-default" type="button" onclick="window.location.reload()">RESET</button>
            </div>
        </div>
    }

    <div class="" id="designationMasterMainDiv">
        @{ Html.RenderAction("LandingPage", "Academic_DesignationMaster", new { }); }
    </div>
</section>

<script>
    function emptyDesigDetails() {
        $('#DesigName').val("");
    }
    function getDesignationDetails() {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Academic_DesignationMaster/LandingPage",
            data: {  },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                $('#designationMasterMainDiv').html(result);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function EnableEditableRow(selectedRow) {
        var rowCount = $('#hddnRowLenght').val();
        for (var i = 0; i < rowCount; i++) {
            if (i == selectedRow) {
                $('.editableFeild_' + i).attr('readonly', false);
                $('#btnEdit_' + i).css('display', 'none');
                $('#btnSave_' + i).removeAttr('style');
            } else {
                $('.editableFeild_' + i).attr('readonly', true);
                $('#btnSave_' + i).css('display', 'none');
                $('#btnEdit_' + i).removeAttr('style');
            }
        }
    }

    function DeleteDesignationConfirm(DesigId) {
        AsyncConfirmYesNo("Confirmation", "Are you sure to delete this Designation?", MyYesFunction, MyNoFunction, DesigId);
    }

    function MyYesFunction(DesigId) {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Academic_DesignationMaster/Academic_DesignationMaster_Delete",
            data: { DesigId: DesigId },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg, result.Color );
                getDesignationDetails();
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }

    function UpdateDesignation(i) {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../Academic_DesignationMaster/Academic_DesignationMaster_CRUD',
            data: { DesigID: $('#DesigID_' + i).val(), DesigName: $('#DesigName_' + i).val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    getDesignationDetails();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    getDesignationDetails();
                    emptyDesigDetails();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>
