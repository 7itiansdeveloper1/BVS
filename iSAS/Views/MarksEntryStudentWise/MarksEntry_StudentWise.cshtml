@model ISas.Entities.MarksEntryStudentWiseModel
@{
    ViewBag.Title = "MarksEntry1to5";
}
<section class="content-header">
    <h1>
        Marks Entry
        <small>Student Wise</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li><a href="#">CCE Exam Module</a></li>
        <li class="active">Marks Entry</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("SubjectWiseMarksEntry_CRUD", "MarksEntryStudentWise", FormMethod.Post))
    {
        @Html.Hidden("subjectCount_Row")
        @Html.Hidden("assismentCount_Column")

        <div class="box box-primary">
            <div class="box-header with-border">
                <span class="pull-right box-title">
                    <input onclick="sendEmail()" type="button" class="btn btn-warning btn-xs" value="Send Email" />
                    <input onclick="window.open('_StudentWiseMarkList_Print','MarksEntryStudentWise','width=650,height=800').print()" type="button" class="btn btn-success btn-xs" value="Print" />
                </span>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SessionId)</label>
                            @Html.HiddenFor(r=> Model.SessionId)
                            @Html.DropDownListFor(m => m.SessionId, Model.SessionList, new { @class = "form-control select2", style = "width:100%;", id = "SessionId", disabled = "disabled" })
                            @Html.ValidationMessageFor(r => r.SessionId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ExamId)</label>
                            @Html.DropDownListFor(m => m.ExamId, Model.ExamList, "-- Select Exam --", new { @class = "form-control select2", style = "width:100%;", onchange = "getClassList()" })
                            @Html.ValidationMessageFor(r => r.ExamId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ClassId)</label>
                            @Html.DropDownListFor(m => m.ClassId, new SelectList(string.Empty, "", ""), new { @class = "form-control select2", style = "width:100%;", onchange = "getSectionList()" })
                            @Html.ValidationMessageFor(r => r.ClassId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SectionId)</label>
                            @Html.DropDownListFor(m => m.SectionId, new SelectList(string.Empty, "", ""), new { @class = "form-control select2", style = "width:100%;", onchange = "getSubjectList()" })
                            @Html.ValidationMessageFor(r => r.SectionId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-6">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SubjectId)</label>
                            @Html.DropDownListFor(m => m.SubjectId, new SelectList(string.Empty, "", ""), new { @class = "form-control select2", style = "width:100%;", onchange = "getSubjectWithMarksList()" })
                            @Html.ValidationMessageFor(r => r.SubjectId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ErpNo_Id)</label>
                            @Html.DropDownListFor(m => m.ErpNo_Id, new SelectList(string.Empty, "", ""), new { @class = "form-control select2", style = "width:100%;", onchange = "getSubjectWithMarksList()" })
                            @Html.ValidationMessageFor(r => r.ErpNo_Id, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ErpNo_Id, "Apply All")</label>
                            <input type="text" class="form-control" id="applyAllText" onfocusout="Fun_AppyAll()" />
                            @Html.ValidationMessageFor(r => r.ErpNo_Id, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-md-12">
                        <div id="divMarkList">
                            &nbsp;
                        </div>
                    </div>
                </div>

            </div>
            <div class="box-footer">
                <button class="btn btn-info" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">Save</button>
            </div>
        </div>
    }
</section>

<script type="text/javascript">
    function Fun_AppyAll() {
        spinnerShow();
        var row = $('#subjectCount_Row').val();
        var col = $('#assismentCount_Column').val();
        for (var i = 0; i < row; i++) {
            for (var j = 0; j < col; j++) {
                var assismentName = $('#SubjectListWithMarks_' + i + '__AssismentWithMarksList_' + j + '__AssismentName').val();
                if (assismentName.indexOf("WS") <= 0) {
                    $('#SubjectListWithMarks_' + i + '__AssismentWithMarksList_' + j + '__Marks').val($('#applyAllText').val());
                }
            }
        }
        spinnerHide();
    }
    //function myfunction() {
    //    var myTableArray = [];
    //    $('#MarkTable tr:not(:first)').each(function () {
    //        var tds = $(this).find('td');
    //        var myDets;
    //        myDets = {
    //            studentERPNo: $(tds[0]).html()
    //            , IsStudentAbsent: $(tds[4]).find('input[type="checkbox"]').is(':checked'),
    //            IsStudentML: $(tds[5]).find('input[type="checkbox"]').is(':checked'),
    //            IsStudentExempt: $(tds[6]).find('input[type="checkbox"]').is(':checked'),
    //            StudentMark: $(tds[7]).find(":text").val()
    //            , StudentGrade: $(tds[8]).find(":text").val()
    //        }
    //        myTableArray.push(myDets);
    //    });
    //    return myTableArray;
    //}


    function getClassList() {
        $.ajax({
            url: '../Exam/BindClassddl',
            data: { examId: $('#ExamId').val() },
            type: 'get',
            success: function (data) {
                var $ddlClass = $('#ClassId');
                $ddlClass.empty();
                $('#SectionId').empty();
                $('#SubjectId').empty();
                $('#ErpNo_Id').empty();
                $ddlClass.append($("<option />").text("--- Select Class ---"));
                $.each(data, function () {
                    $ddlClass.append($("<option />").val(this.ClassId).text(this.ClassName));
                });
            },
        })
    }

    function getSectionList() {
        $.ajax({
            url: '../Exam/BindSectionddl',
            data: { classId: $('#ClassId').val(), examId: $('#ExamId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSec = $('#SectionId');
                $ddlSec.empty();
                $('#SubjectId').empty();
                $('#ErpNo_Id').empty();
                $ddlSec.append($("<option />").text("--- Select Section ---"));
                $.each(data, function () {
                    $ddlSec.append($("<option />").val(this.SectionId).text(this.SectionName));
                })
            })
        });
    }

    function getSubjectList() {
        $.ajax({
            url: '../MarksEntryStudentWise/BindSubjectddl',
            beforeSend: function () {
                spinnerShow();
            },
            data: { classId: $('#ClassId').val(), sectionId: $('#SectionId').val(), examId: $('#ExamId').val(), sessionId: $('#SessionId').val()  },
            type: 'get',
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            success: (function (data) {
                var $ddlSubject = $('#SubjectId');
                $ddlSubject.empty();
                $('#ErpNo_Id').empty();
                $ddlSubject.append($("<option />").text("--- Select Subject ---"));
                $.each(data.subejctList, function () {
                    $ddlSubject.append($("<option />").val(this.Value).text(this.Text));
                })


                var $ddlStudent = $('#ErpNo_Id');
                $ddlStudent.empty();
                $ddlStudent.append($("<option />").text("--- Select Student ---"));
                $.each(data.studentList, function () {
                    $ddlStudent.append($("<option />").val(this.Value).text(this.Text));
                })
            }),
            complete: function () {
                spinnerHide();
            }
        })
    }


    function getSubjectWithMarksList() {
        if ($('#SubjectId').val() > 0 && $('#ErpNo_Id').val() > 0) {
            $.ajax({
                url: '../MarksEntryStudentWise/_StudentWiseMarkList',
                beforeSend: function () {
                    spinnerShow();
                },
                data: {
                    examid: $('#ExamId').val(), classid: $('#ClassId').val(), sectioinid: $('#SectionId').val(),
                    mainsubjectid: $('#SubjectId').val(), sessionid: $('#SessionId').val(),
                    erpno: $('#ErpNo_Id').val(),
                    TermName: $('#ExamId option:selected').text(),
                    ClassName: $('#ClassId option:selected').text(),
                    SectionName: $('#SectionId option:selected').text(),
                    MainSubjectName: $('#SubjectId option:selected').text(),
                    StudentName: $('#ErpNo_Id option:selected').text(),
                },
                type: 'get',
                success: (function (data) {
                    $('#divMarkList').empty();
                    $('#divMarkList').html(data);
                }),
                complete: function () {
                    spinnerHide();
                }
            })
        } else {
            $('#divMarkList').empty();
        }
    }

    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');

        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeModal(response.Msg, '', 'sm');
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }

    function sendEmail() {
        $.ajax({
            type: 'POST',
            url: '../MarksEntryStudentWise/_StudentWiseMarkList_Print',
            beforeSend: function () {
                spinnerShow();
            },
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            data: { IsConfirmation: true },
            success: function (response) {
                AsyncConfirmYesNo("Email Content, Are u sure to send?", response, MyYesFunction, MyNoFunction, null, 'lg');
            },
            complete: function () {
                spinnerHide();
            }
        })
        return false;
    }

    function MyYesFunction() {
        sendEmailConfirm();
    }
    function MyNoFunction() {
        return false;
    }

    function sendEmailConfirm() {
        $.ajax({
            type: 'POST',
            url: '../MarksEntryStudentWise/SendEmail',
            beforeSend: function () {
                spinnerShow();
            },
            error: function (xhr, status, error) {
                OpenMessegeModal($('#ErrorMsgOnJasonFailed').val());
            },
            data: {},
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeModal(response.Msg, '', 'sm');
                }
                else if (response.status == 'failed') {
                    OpenMessegeModal(response.Msg, 'Warning', 'sm');
                }
            },
            complete: function () {
                spinnerHide();
            }
        })
    }
</script>