@model ISas.Entities.Academic.Academic_HolidayDeclarationModel

<section class="content-header">
    <h1>
        Holiday Declaration
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li><a href="#">Academic</a></li>
        <li><a href="@Url.Action("New", "Academic_HolidayMaster")">Holiday Master</a></li>
        <li><a href="@Url.Action("LandingPage", "Academic_HolidayAllocation")">Holiday Allocation</a></li>
        <li><a href="#">Holiday Declaration</a></li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("Academic_HolidayDeclaration_CRUD", "Academic_HolidayDeclaration", FormMethod.Post, htmlAttributes: new { }))
    {
        @Html.HiddenFor(r => Model.HolidayId)
        @Html.Hidden("hddnRowLenght")

        <div class="box box-primary">
            <div class="box-header with-border">
                <h5 class="box-title"> Holiday Name : <span class="text-primary">@Html.DisplayFor(r => Model.HolidayName)</span> </h5>
            </div>
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.Fdate)</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.TextBoxFor(m => m.Fdate, htmlAttributes: new { @class = "form-control pull-right date", onchange = "GetDaysBetweenDays('Fdate', 'TDate', 'NoofDays')" })
                                @Html.ValidationMessageFor(r => Model.Fdate, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.TDate)</label>
                            <div class="input-group date">
                                <div class="input-group-addon">
                                    <i class="fa fa-calendar"></i>
                                </div>
                                @Html.TextBoxFor(m => m.TDate, htmlAttributes: new { @class = "form-control pull-right date", onchange = "GetDaysBetweenDays('Fdate', 'TDate', 'NoofDays')" })
                                @Html.ValidationMessageFor(r => Model.TDate, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                            <!-- /.input group -->
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.NoofDays)</label>
                            <div class="select">
                                @Html.TextBoxFor(m => m.NoofDays, htmlAttributes: new { @class = "form-control", @readonly = true })
                                @Html.ValidationMessageFor(r => Model.NoofDays, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="box-footer">
                <button class="btn btn-success" id="savebutton" type="button" onclick="DoAjaxPostAndMore(this)">Save</button>
                <button class="btn btn-default" type="button" onclick="window.location.reload()">Reset</button>
            </div>
        </div>
    }
</section>
<script>
    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Success');
                    setTimeout(function () { window.location = "../Academic_HolidayAllocation/LandingPage"; }, 3000);
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
        return false;
    }
</script>
