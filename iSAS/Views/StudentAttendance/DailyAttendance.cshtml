@model ISas.Web.ViewModels.DailyAttendanceViewModel
@{
    ViewBag.Title = "DailyAttendance";
    int lastDateCount = Convert.ToInt32(System.Configuration.ConfigurationManager.AppSettings["DailyAttn_MarkLastDateCount"]);
}
<section class="content-header">
    <h1>
        Daily Attendance <small>(ADD)</small>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Student Attendance</li>
        <li><a href="@Url.Action("DailyAttendanceLanding", "StudentAttendance")">Daily Attendance</a></li>
        <li class="activetemp">Add</li>
    </ol>
</section>
<section class="content">
    <div class="box box-success">
        <div class="box-header">
            <h5 class="box-title pull-right">
                <span class="pull-right text-sm"><span class="mandateLbl">*</span>Attendance can not be marked before @Html.DisplayFor(r => lastDateCount) days.</span>
            </h5>
        </div>
        @using (Html.BeginForm("", "", FormMethod.Post, htmlAttributes: new { id = "stud_attn" }))
        {
        <div class="box-body">
            <div class="row">
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">@Html.LabelFor(r => Model.SelectedSessionId)<i class="mandateLbl">*</i></label>
                        <div class="select">
                            @Html.HiddenFor(r => Model.SelectedSessionId)
                            @Html.DropDownListFor(m => m.SelectedSessionId, Model.SessionList, new { @class = "form-control select2", style = "width:100%;", id = "SelectedSessionId", disabled = "disabled" })
                            @Html.ValidationMessageFor(r => Model.SelectedSessionId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>
                
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <label for="">@Html.LabelFor(r => Model.SelectedClassId)<i class="mandateLbl">*</i></label>
                        <div class="select">
                            @Html.DropDownListFor(m => m.SelectedClassId, Model.ClassList, "-- Select Class --", new { @class = "form-control select2", style = "width:100%;", onchange = "getSectionList()" })
                            @Html.ValidationMessageFor(r => Model.SelectedClassId, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                    </div>

               <div class="col-xs-12 col-sm-6 col-md-3">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SelectedSectionId)<i class="mandateLbl">*</i></label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.SelectedSectionId, Model.SectionList, "-- Select Section --", new { @class = "form-control select2", style = "width:100%;", onchange = "getStudentList()" })
                                @Html.ValidationMessageFor(r => Model.SelectedSectionId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
               <div class="col-xs-12 col-sm-6 col-md-3">
                   <div class="form-group">
                       <label for="">@Html.LabelFor(r => Model.AttendanceDate)<i class="mandateLbl">*</i></label>
                       <div class="input-group date">
                           <div class="input-group-addon">
                               <i class="fa fa-calendar"></i>
                           </div>
                           @Html.TextBoxFor(m => m.AttendanceDate, htmlAttributes: new { @class = "form-control pull-right", onchange = "getStudentList()" })
                           @Html.ValidationMessageFor(r => Model.AttendanceDate, null, htmlAttributes: new { style = "color:red;" })
                       </div>
                   </div>
               </div>    
            </div>
            
            
                <div class="box-header with-border">
                
                    <div class="pull-left">
                        <label for="">Send SMS<i class="mandateLbl">*</i></label>
                        @Html.CheckBoxFor(m => Model.IsSendSMS, htmlAttributes: new { })
                    </div>        
                    
                    <div class="box-title pull-right">
                        <button class="btn btn-success savebutton" type="button">SAVE</button>
                    </div>


                </div>
            
            
            
            
            
            <div id="divAttendanceList">
                @*@Html.Partial("_StudentAttendanceListPartial", Model)*@
            </div>
        </div>
        <div class="box-footer">
            <button class="btn btn-success savebutton" id="" type="button">SAVE</button>
            <button class="btn btn-warning" id="btndelete" onclick="DeleteAttendanceConfirm()" type="button">DELETE</button>
        </div>
            
        }
    </div>
</section>
<script type="text/javascript">


    function DeleteAttendanceConfirm() {
        //var params = [ReceiptNo, ERPNo];
        AsyncConfirmYesNo("Confirmation", "Are you sure to delete this attendance?", MyYesFunction, MyNoFunction);
    }

    function MyYesFunction() {

        if ($('#SelectedClassId').val() == null || $('#SelectedClassId').val() == "") {
            OpenMessegeAutoHideDiv('Select Class', 'Info');
            return false;
        }
        if ($('#SelectedSectionId').val() == null || $('#SelectedSectionId').val() == "") {
            OpenMessegeAutoHideDiv('Select Section', 'Info');
            return false;
        }
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../StudentAttendance/DeleteStudentAttendance",
            data: { classId: $('#SelectedClassId').val(), sectionId: $('#SelectedSectionId').val(), attdate: $('#AttendanceDate').val()},
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg);
                $('#divAttendanceList').empty();
            },

            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }

    function flipAttendance() {
        var filipto = $('#HddnFilpTo').val();
        var textcolor = "";
        if (filipto == "A") {
            textcolor = "red";
            $('#HddnFilpTo').val("P");
        } else {
            textcolor = "green";
            $('#HddnFilpTo').val("A");
        }
        $('#AttendanceTable tr:not(:first)').each(function () {
            $(".MA").each(function (i, e) {
                $(this).text(filipto);
                $(this).css({ 'color': textcolor, 'font-weight': 'bold' });
            });
            $(".AA").each(function (i, e) {
                $(this).text(filipto);
                $(this).css({ 'color': textcolor, 'font-weight': 'bold' });
            });
        })
    }



    $(function () {
        var date = new Date();
        date.setDate(date.getDate() - '@lastDateCount');

        var datepicker = $.fn.datepicker.noConflict();
        $.fn.bootstrapDP = datepicker;
        $('#AttendanceDate').bootstrapDP({
            autoclose: true,
            format: 'dd/mm/yyyy',
            startDate: date,
            endDate : new Date()
        });
    });

    function myfunction() {
        var myTableArray = [];
        $('#AttendanceTable tr:not(:first)').each(function () {
            var tds = $(this).find('td');
            var myDets = {
                studentERPNo: $(tds[0]).html(), StudentMorningAttendnace: $(tds[6]).text(),
                StudentAfternoonAttendnace: $(tds[7]).text(), StudentLeaveType: $(tds[8]).find(":selected").val()
            }
            myTableArray.push(myDets);
        });
        return myTableArray;
    }

    function getSectionList() {
        $('#divAttendanceList').html('');
        $.ajax({
            url: '../StudentAttendance/GetSectionsForClass',
            data: { classId: $('#SelectedClassId').val() },
            type: 'get',
            success: (function (data) {
                var $ddlSec = $('#SelectedSectionId');
                $ddlSec.empty();
                $ddlSec.append($("<option />").val(null).text("-- Select Section --"));
                $.each(data, function () {
                    $ddlSec.append($("<option />").val(this.SecId).text(this.SecName));
                });
            })
        })
    }
    function getStudentList() {
        if ($('#SelectedClassId').val() == null || $('#SelectedClassId').val() == "") {
            OpenMessegeAutoHideDiv('Select Class', 'Info');
            return false;
        }
        if ($('#SelectedSectionId').val() == null || $('#SelectedSectionId').val() == "") {
            OpenMessegeAutoHideDiv('Select Section', 'Info');
            return false;
        }
        $.ajax({
            url: '../StudentAttendance/GetAttandaceList',
            data: { sessionId: $('#SelectedSessionId').val(), classId: $('#SelectedClassId').val(), sectionId: $('#SelectedSectionId').val(), attdate: $('#AttendanceDate').val() },
            type: 'get',
            success: (function (data) {
                $('#divAttendanceList').empty();
                $('#divAttendanceList').html(data);
                //alert(data);
            })
        })
    }

    $(document).ready(function () {
        $('.savebutton').click(function () {
           // if ($('#stud_attn').valid()) {
                var myTableArray = [];
                var myTableArray = myfunction();
                event.preventDefault();
                $.ajax({
                    type: 'POST',
                    beforeSend: function () {
                        spinnerShow();
                    },
                    url: '@Url.Action("SaveStudentAttendance", "StudentAttendance")',
                    dataType: 'json',
                    contentType: 'application/json; charset=utf-8',
                    data: JSON.stringify({ attdate: $('#AttendanceDate').val(), ClassAttendanceList: myTableArray, IsSendSMS: $('#IsSendSMS').is(':checked') }),
                    success: function (result) {
                        OpenMessegeAutoHideDiv(result.Msg, result.Color);
                        //setTimeout(function () { window.location = "../StudentAttendance/DailyAttendance"; }, $('#hddnReloadTime').val());
                    },
                    error: function () {
                        OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                    },
                    complete: function () {
                        spinnerHide();
                    }
                });
            //}
        });
    });
</script>