@model ISas.Entities.Exam_Entities.Exam_QuestionMasterModels
@{
}
<style>
    #option span {
        margin-right: 12px;
    }

    .radio label {
        padding-left: 27px;
    }
</style>

@*<section class="content-header">
        <h1> Attend Assessment</h1>
        <ol class="breadcrumb">
            <li>
                <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
                <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
                <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
            </li>
            <li>Online Assessment <a href="@Url.Action("Exam_QuestionPaperMaster", "Exam_QuestionPaper")" title="Question Paper"></a></li>
            <li>Attend Questions</li>
        </ol>
    </section>*@

<section class="content">
    
    <div class="box-body">

        @if (Model.isHavingParagraph)
        {
            <div class="row">
                <div class="col-xs-12 col-sm-3 col-md-12">
                    <label for="">@Html.DisplayTextFor(r => Model.parValue)</label>
                </div>
            </div>
        }


        <div class="row">
            <div class="col-xs-12 col-sm-6 col-md-12">
                <div class="form-group">
                    <label for="">
                        @Html.LabelFor(r => Model.qNo) @Model.qNo:@Model.qText
                        @Html.HiddenFor(r => Model.qpId, htmlAttributes: new { })
                        @Html.HiddenFor(r => Model.qId, htmlAttributes: new { })
                    </label>
                    <label class="right">(MM: @Model.qMark)</label>
                    <div class="select">
                        @Html.ValidationMessageFor(r => Model.qNo, null, htmlAttributes: new { style = "color:red;" })
                    </div>
                </div>
            </div>

        </div>

        @*<div class="row">
            <div class="col-xs-12 col-sm-3 col-md-12">
                <label for="">@Html.LabelFor(r => Model.ans)<i class="mandateLbl">*</i></label>
            </div>
        </div>*@

        @if (Model.qNature == "DI")
        {
            <div class="row">
                <div class="col-xs-12 col-sm-12 col-md-12">
                    <div class="form-group">
                        <label for="">@Html.LabelFor(r => Model.ansText)</label>
                        <div class="select">
                            @Html.TextAreaFor(m => m.ansText, htmlAttributes: new { @class = "form-control", @rows = 18, maxlength = 2000 })
                            @Html.ValidationMessageFor(r => Model.ansText, null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>
            </div>
        }

        else
        {
            <div>

                <div class="row">

                    @if (Model.Oa.Length > 0)
                    {
                        <div class="col-xs-12 col-sm-12 col-md-3">
                            <div class="form-group">
                                
                                <div class="radio" id="option">
                                    <label>
                                        @if (Model.ans == "a")
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "a", htmlAttributes: new { @checked=true, onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'a' " + ")" })
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "a", htmlAttributes: new { onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'a' " + ")" })
                                        }
                                        @*<input id="ans_A" type="radio"  onchange="ConfirmToUpdateStatus(@Model.qId,'a')">*@
                                        <span>@Model.Oa</span>
                                    </label>


                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.Ob.Length > 0)
                    {
                        <div class="col-xs-12 col-sm-12 col-md-3">
                            <div class="form-group">
                                @*<label for="">@Html.LabelFor(r => Model.Ob)</label>*@
                                <div class="radio" id="option">
                                    <label>

                                        @if (Model.ans == "b")
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "b", htmlAttributes: new {@checked=true, onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'b' " + ")" })
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "b", htmlAttributes: new { onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'b' " + ")" })
                                        }
                                        <span>@Model.Ob</span>


                                    </label>
                                </div>
                            </div>
                        </div>
                    }
                </div>


                <div class="row">
                    @if (Model.Oc.Length > 0)
                    {
                        <div class="col-xs-12 col-sm-12 col-md-3">
                            <div class="form-group">

                                <div class="radio" id="option">
                                    <label>

                                        @if (Model.ans == "c")
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "c", htmlAttributes: new { @checked = true, onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'c' " + ")" })
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "c", htmlAttributes: new { onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'c' " + ")" })

                                        }
                                        @*<input id="ans_C" type="radio" onchange="ConfirmToUpdateStatus(@Model.qId,'c')">*@
                                        <span>@Model.Oc</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    }
                    @if (Model.Od.Length > 0)
                    {
                        <div class="col-xs-12 col-sm-12 col-md-3">
                            <div class="form-group">
                                <div class="radio" id="option">
                                    <label>
                                        @if (Model.ans == "d")
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "d", htmlAttributes: new { @checked=true, onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'d' " + ")" })
                                        }
                                        else
                                        {
                                            @Html.RadioButtonFor(r => r.ans, "d", htmlAttributes: new { onchange = "ConfirmToUpdateStatus(" + Model.qId + ",'d' " + ")" })
                                        }

                                        <span>@Model.Od</span>
                                    </label>
                                </div>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }


    </div>
            <div class="box-footer right">
                <div class="box-footer ">
                    @if (Model.QS != "F")
                    {
                        <button class="btn btn-default" type="button" onclick="getQuestion(@Model.qpId,@Model.qId,@Model.qNo,'PREV')">PREVIOUS</button>
                    }
                    @if (Model.QS == "L")
                    {
                        
                        <button class="btn btn-default disabled" type="button" onclick="">NEXT</button>
                        <button class="btn btn-primary" type="button" onclick="SubmitAssessment(@Model.qId,'@Model.qNature')">SUBMIT</button>
                    }
                    else
                    {
                        <button class="btn btn-default" type="button" onclick="getQuestion(@Model.qpId,@Model.qId,@Model.qNo,'NEXT','@Model.qNature')">NEXT</button>
                        <button class="btn btn-primary disabled" type="button" onclick="">SUBMIT</button>
                    }


                </div>
            </div>

    

</section>
<script>
    @*function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    //setTimeout(function () { window.location = "../Academic_DocumentMaster/New"; }, $('#hddnReloadTime').val());
                    setTimeout(function () { window.location = "../Exam_QuestionMaster/New?qpId=@Model.qpId&className=@Model.className&subjectName=@Model.subjectName&assessmentName=@Model.assessmentName&maxMark=@Model.maxMark"; }, $('#hddnReloadTime').val());
                    //setTimeout(function () { window.location = "../Exam_QuestionMaster/LandingPage"; }, $('#hddnReloadTime').val());
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }*@

    function getQuestion(qpId1, qId1, qNo1, btnclick1, qNature1 ) {

        var ans1 = "";
        if (qNature1 == 'DI')
            ans1 = $('#ansText').val();
        //alert(ans1);

        $.ajax({
            url: '../Exam_OnlineAssessment/_Exam_BrowseAssessment',
            data: {
                qpId: qpId1, qId: qId1, qNo: qNo1, btnclick: btnclick1, qNature: qNature1, ans: ans1
            },
            type: 'get',
            success: (function (data) {
                $('#addNewBookMainDiv').empty();
                $('#addNewBookMainDiv').html(data);
                //alert(data);
            })
        })
    };
    

</script>
