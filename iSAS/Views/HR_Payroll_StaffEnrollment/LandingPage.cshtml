@model ISas.Entities.HR_Payroll_Entities.HR_Payroll_StaffEnrollmentModels


<section class="content-header">
    <h1>
        Staff Enrolment  For : <span class="text-primary">@Html.DisplayFor(r => Model.PayBandName)</span>
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>HR & Payroll</li>
        <li><a href="@Url.Action("New", "HR_Payroll_PayBandMaster")">PayBand Master</a></li>
        <li>Staff Enrolment </li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-6">
            <div class="box box-primary">
                <!-- /.box-header -->
                <div class="box-header with-border">
                    <div class="box-title">
                        <h5 class="box-title">Enrolled Staff List</h5>
                    </div>
                </div>
                <div class="box-body">
                    <table class="table table-bordered table-striped  dt-responsive nowrap">
                        <thead>
                            <tr>
                                <th>S. No</th>
                                <th>Staff Name</th>
                                <th>Department</th>
                                <th>Action</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.EnrolledStaffList.Count > 0)
                            {
                                int count = 1;
                                for (int i = 0; i < Model.EnrolledStaffList.Count; i++)
                                {
                                    <tr>
                                        <td>
                                            @Html.DisplayFor(r => count)
                                            @Html.HiddenFor(r => Model.EnrolledStaffList[i].StaffID)
                                            @Html.HiddenFor(r => Model.EnrolledStaffList[i].StaffName)
                                        </td>
                                        <td>@Html.DisplayFor(r => Model.EnrolledStaffList[i].StaffName)</td>
                                        <td>@Html.DisplayFor(r => Model.EnrolledStaffList[i].DeptName)</td>
                                        <td class="text-center">
                                            @if (Model.EnrolledStaffList[i].IsDeleteable)
                                            {
                                                <a href="#" onclick="RemoveEmpFromPayBandConfirm('@Model.EnrolledStaffList[i].StaffID')" title="Remove Staff From This PayBand" class="fa fa-remove btnDefaultColor"></a>
                                            }
                                            else
                                            {
                                                <span disabled="disabled" title="Remove Staff From This PayBand" class="fa fa-remove btnDefaultColorFaded"></span>
                                            }
                                        </td>
                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            @using (Html.BeginForm("HR_Payroll_StaffEnrollment_CRUD", "HR_Payroll_StaffEnrollment", FormMethod.Post, htmlAttributes: new { }))
            {
                <div class="box box-primary">
                    <!-- /.box-header -->
                    <div class="box-header with-border">
                        <h5 class="box-title">Non Enrolled Staff List</h5>
                        <h5 class="box-title pull-right">
                            <button class="btn btn-success btn-sm" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
                            <button class="btn btn-default btn-sm" type="button" onclick="window.location.reload()">RESET</button>
                        </h5>
                    </div>

                    @Html.HiddenFor(r => Model.PayBandId)
                    @Html.HiddenFor(r => Model.PayBandName)

                    <div class="box-body">
                        <table id="example1" class="table table-bordered table-striped  dt-responsive nowrap">
                            <thead>
                                <tr>
                                    <th>S. No</th>
                                    <th>@Html.CheckBox("chkBoxAllNonEnroll", false, htmlAttributes: new { onchange = "Fun_checkToAllNonEnrolledStaff()" }) </th>
                                    <th>Staff Name</th>
                                    <th>Department</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.NonEnrolledStaffList.Count > 0)
                                {
                                    int count = 1;
                                    for (int i = 0; i < Model.NonEnrolledStaffList.Count; i++)
                                    {
                                        <tr>
                                            <td>@Html.DisplayFor(r => count)</td>
                                            <td>
                                                @Html.CheckBoxFor(r => Model.NonEnrolledStaffList[i].Selected, htmlAttributes: new { @class = "chkBoxNonEnrol" })
                                                @Html.HiddenFor(r => Model.NonEnrolledStaffList[i].StaffID)
                                                @Html.HiddenFor(r => Model.NonEnrolledStaffList[i].StaffName)
                                            </td>
                                            <td>@Html.DisplayFor(r => Model.NonEnrolledStaffList[i].StaffName)</td>
                                            <td>@Html.DisplayFor(r => Model.NonEnrolledStaffList[i].DeptName)</td>
                                        </tr>
                                        count++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>

                </div>
            }
        </div>
    </div>
</section>
<script>
    function Fun_checkToAllNonEnrolledStaff() {
        if ($('#chkBoxAllNonEnroll').is(':checked')) {
            $('.chkBoxNonEnrol').prop('checked', true);
        } else {
            $('.chkBoxNonEnrol').prop('checked', false);
        }
    }

    function DoAjaxPostAndMore(btnClicked) {
        var selectedEmpCount = 0;
        $('#example1 > tbody > tr').each(function (i) {
            if ($('#NonEnrolledStaffList_' + i + '__Selected').is(':checked')) {
                selectedEmpCount++;
            }
        });

        if (parseInt(selectedEmpCount) == 0) {
            OpenMessegeAutoHideDiv('No Employee is Selected to Add in this PayBand..!', 'Info');
            return false;
        }

        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    setTimeout(function () { window.location.reload(); }, $('#hddnReloadTime').val());
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function RemoveEmpFromPayBandConfirm(StaffID) {
        AsyncConfirmYesNo("Confirmation", "Are you sure to remove this employee from payband..?", MyYesFunction, MyNoFunction, StaffID);
    }

    function MyYesFunction(StaffID) {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../HR_Payroll_StaffEnrollment/HR_Payroll_StaffEnrollment_Delete",
            data: { PayBandID: '@Model.PayBandId', StaffID: StaffID },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg, result.Color);
                setTimeout(function () { window.location.reload(); }, $('#hddnReloadTime').val());
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }
</script>