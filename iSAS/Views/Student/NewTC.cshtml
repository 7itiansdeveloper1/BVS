@model ISas.Entities.Student_TC

@{
    ViewBag.Title = "NewTC";
}

@*<form>*@
    @using (Html.BeginForm("StudentTC_CRUD", "Student", FormMethod.Post, htmlAttributes: new { id = "form1" }))

    {

    <div class="formSec">
        <div class="row">
            <div class="col-xs-12">
                <div class="form-group row">
                    <label for="" class="col-xs-12 col-sm-6 col-md-3"><strong>Last TC No. :  @Model.LastTCNo </strong></label>
                    <label for="" class="col-xs-12 col-sm-6 col-md-3"><strong>Current Session TC Count :  @Model.TCCount </strong></label>
                    
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="col-xs-12">
                <hr class="space">
            </div>


            <div class="col-xs-12 col-sm-6 col-md-3"  style="display:none" >
                <div class="form-group">
                    <label for="">@Html.LabelFor(r => Model.TCNo)</label>
                    @Html.TextBoxFor(m => Model.TCNo, htmlAttributes: new { @class = "form-control",@readonly ="true"  })
                    @Html.ValidationMessageFor(r => Model.TCNo, null, htmlAttributes: new { style = "color:red;" })

                    @*<label for="">TC No.</label>
			<input type="text" placeholder="" id="" class="form-control">*@
                </div>
            </div>


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">@Html.LabelFor(r => Model.Session)</label>
                    <div class="select">
                        @Html.DropDownListFor(m => Model.Session, Model.SessionList, htmlAttributes: new { @class = "form-control" ,id="ddlSessionList"})
                        @Html.ValidationMessageFor(r => Model.Session, null, htmlAttributes: new { style = "color:red;" })
                    </div>

                </div>
            </div>

            @*<div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group has-feedback">
                    <label for="">@Html.LabelFor(r => Model.AppliedDate)</label>
                    @Html.TextBoxFor(m => m.AppliedDate, new { @class = "form-control", id = "tc_applied_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.AppliedDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>

                </div>
            </div>*@


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group has-feedback">
                    <label for="">@Html.LabelFor(r => Model.CreationDate)</label>
                    @Html.TextBoxFor(m => m.CreationDate, new { @class = "form-control", id = "tc_create_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.CreationDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>
                </div>
            </div>

@*            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group has-feedback">
                    <label for="">@Html.LabelFor(r => Model.IssueDate)</label>
                    @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control", id = "tc_issue_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.IssueDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>

                </div>
            </div>*@

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    @*<label for="">ERP No.</label>
			<input type="text" placeholder="" id="" class="form-control">*@
                    <label for="">@Html.LabelFor(r => Model.ERPNo)</label>
                    @Html.TextBoxFor(m => Model.ERPNo, htmlAttributes: new { @class = "form-control" ,id="txtERPNo" })
                    @Html.ValidationMessageFor(r => Model.ERPNo, null, htmlAttributes: new { style = "color:red;" })

                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    @*<label for="">Admission No.</label>
			<input type="text" placeholder="" id="" class="form-control">*@
                    <label for="">@Html.LabelFor(r => Model.AdmNo)</label>
                    @Html.TextBoxFor(m => Model.AdmNo, htmlAttributes: new { @class = "form-control",id="txtAdmNo" })
                    @Html.ValidationMessageFor(r => Model.AdmNo, null, htmlAttributes: new { style = "color:red;" })

                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    
                    <label for="">@Html.LabelFor(r => Model.ClassId)</label>
                    <div class="select">
                        @Html.DropDownListFor(m => Model.ClassId, Model.ClassList, "--Select--", htmlAttributes: new { @class = "form-control",dataChangeUrl = Url.Action("GetSectionsForClass")})
                        @Html.ValidationMessageFor(r => Model.ClassId, null, htmlAttributes: new { style = "color:red;" })
                    </div>

                </div>
            </div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    @*<label for="">Section</label>
                    <div class="select">
                        <select>
                            <option>Select</option>
                        </select>
                    </div>*@

                    <label for="">@Html.LabelFor(r => Model.SectionId)</label>
                    <div class="select">
                        @Html.DropDownListFor(m => Model.SectionId, Model.SectionList, "--Select--", htmlAttributes: new { @class = "form-control",dataChangeUrl = Url.Action("GetddlStudentList") })
                        @Html.ValidationMessageFor(r => Model.SectionId, null, htmlAttributes: new { style = "color:red;" })
                    </div>

                </div>
            </div>

            <div class="col-xs-12">
                <hr class="space">
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">1. Name of the pupil</label>
                    @*<label for="">@Html.LabelFor(r => Model.Student)</label>*@
                    <div class="select">
                        @Html.DropDownListFor(m => m.Student, Model.StudentList, "--Select--", htmlAttributes: new { @class = "form-control"})
                        @Html.ValidationMessageFor(r => r.Student ,null, htmlAttributes: new { style = "color:red;" })
                    </div>
                </div>
            </div>
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">3. Mother's Name</label>
                    <input type="text" placeholder="" id="" class="form-control" readonly="true">
                    @*<label for="">@Html.LabelFor(r => Model.Father)</label>*@
                    @*@Html.TextBoxFor(m => m.Father, htmlAttributes: new { @class = "form-control",id="txtFather" })
                    @Html.ValidationMessageFor(r => Model.Father, null, htmlAttributes: new { style = "color:red;" })*@

                </div>
            </div>
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">3. Father's Name</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.Father)</label>*@
                    @Html.TextBoxFor(m => m.Father, htmlAttributes: new { @class = "form-control",id="txtFather",@readonly="true" })
                    @Html.ValidationMessageFor(r => Model.Father, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">4. Nationality</label>
                    <input type="text" placeholder="" id="" class="form-control" readonly="true">
                    @*<label for="">@Html.LabelFor(r => Model.Father)</label>*@
                    @*@Html.TextBoxFor(m => m.Father, htmlAttributes: new { @class = "form-control",id="txtFather" })
                    @Html.ValidationMessageFor(r => Model.Father, null, htmlAttributes: new { style = "color:red;" })*@

                </div>
            </div>
            <div class="clearfix"></div>
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">5. Weither Belong to SC/ST</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.BelogtoSCST)</label>*@
                    @Html.TextBoxFor(m => m.BelogtoSCST, htmlAttributes: new { @class = "form-control",@readonly="true" })
                    @Html.ValidationMessageFor(r => Model.BelogtoSCST, null, htmlAttributes: new { style = "color:red;" })

                </div>
            </div>

            <div class="clearfix"></div>

            <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group has-feedback">
            <label for="">6. Date of admission in school</label>
			<input type="text" class="form-control" id="tc_create_date" value="DD/MM/YYYY">
			<i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>

                  @*  <label for="">@Html.LabelFor(r => Model.CreationDate)</label>
                    @Html.TextBoxFor(m => m.CreationDate, new { @class = "form-control", id = "tc_create_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.CreationDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>*@


                </div>
            </div>


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for=""> Admission Class </label>
                    <input type="text" placeholder="" id="" class="form-control" readonly="true">
                    @*<label for="">@Html.LabelFor(r => Model.ClassInFigure)</label>
                    @Html.TextBoxFor(m => m.ClassInFigure, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ClassInFigure, null, htmlAttributes: new { style = "color:red;" })*@

                </div>
            </div>


            <div class="clearfix"></div>
            <div class="col-xs-12 col-sm-6 col-md-3">
            <div class="form-group has-feedback">
            <label for="">7. DOB according to admission register</label>
			<input type="text" class="form-control" id="tc_create_date1" value="DD/MM/YYYY">
			<i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>

                  @*  <label for="">@Html.LabelFor(r => Model.CreationDate)</label>
                    @Html.TextBoxFor(m => m.CreationDate, new { @class = "form-control", id = "tc_create_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.CreationDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>*@


                </div>
            </div>

            <div class="clearfix"></div>
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">8. Class in which pupil last studied(in figure)</label>
                    @*@<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.ClassInFigure)</label>*@
                    @Html.TextBoxFor(m => m.ClassInFigure, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ClassInFigure, null, htmlAttributes: new { style = "color:red;" })

                </div>
            </div>



            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">Class (in words)</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.ClassInWords)</label>*@
                    @Html.TextBoxFor(m => m.ClassInWords, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ClassInWords, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            <div class="clearfix"></div>
            
            
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="form-group">
                    <label for="">9. School/Board Annual Examination last taken with result</label>
                    <input type="text" placeholder="" id="" class="form-control">
                    @*<label for="">@Html.LabelFor(r => Model.ClassInWords)</label>*@
                    @*@Html.TextBoxFor(m => m.ClassInWords, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ClassInWords, null, htmlAttributes: new { style = "color:red;" })*@
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="form-group">
                    <label for="">10. Weither Failed, if so once/twice in then same class</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.FailedinSameClass)</label>*@
                    @Html.TextBoxFor(m => m.FailedinSameClass, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.FailedinSameClass, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            <div class="clearfix"></div>
            
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">12. Weither Promoted to higher class</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.QualifiedForPromotion)</label>*@
                    @Html.TextBoxFor(m => m.IsQualifiedForHigherClass, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.IsQualifiedForHigherClass, null, htmlAttributes: new { style = "color:red;" })

                </div>
            </div>


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for=""> Class(in figure)</label>
                    @*<label for="">@Html.LabelFor(r => Model.ClassId)</label>*@
                    <div class="select">
                        @Html.DropDownListFor(m => Model.ClassId, Model.ClassList, "--Select--", htmlAttributes: new { @class = "form-control",dataChangeUrl = Url.Action("GetSectionsForClass")})
                        @Html.ValidationMessageFor(r => Model.ClassId, null, htmlAttributes: new { style = "color:red;" })
                    </div>

                </div>
            </div>



            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">Class (in words)</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.ClassInWords)</label>*@
                    @Html.TextBoxFor(m => m.ClassInWords, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ClassInWords, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>

        <div class="clearfix"></div>
            
            
            
            <div class="col-xs-12 col-sm-6 col-md-4">
                <div class="form-group">
                   <label for="">13. Month upto which pupil has paid school dues</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.MonthForDues)</label>*@
                    @Html.TextBoxFor(m => m.MonthForDues, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.MonthForDues, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            
            <div class="clearfix"></div>
            
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="form-group">
                    <label for="">14. Any fee concession availed : if so, the nature of such concession</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.NatureOFConcession)</label>*@
                    @Html.TextBoxFor(m => m.NatureOFConcession, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.NatureOFConcession, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            <div class="clearfix"></div>
            


            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">15. Total no of Working Days</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.TotalWorkingDays)</label>*@
                    @Html.TextBoxFor(m => m.TotalWorkingDays, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.TotalWorkingDays, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>



               <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">16. Total no of working days presents</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.WorkingDaysPresents)</label>*@
                    @Html.TextBoxFor(m => m.WorkingDaysPresents, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.WorkingDaysPresents, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>


            <div class="clearfix"></div>


            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="form-group">
                    <label for="">17. Weither NCC Cadet/Boy Scout/Girl Guide (Details may be given)</label>
                    @*<input type="text" place eholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.WeitherNCCCedete)</label>*@
                    @Html.TextBoxFor(m => m.WeitherNCCCedete, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.WeitherNCCCedete, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            <div class="clearfix"></div>


            <div class="col-xs-12 col-sm-6 col-md-8">
                <div class="form-group">
                    <label for="">18. Games played or Extra Curricular Activities in which the pupil usually took part (mention Achievement level their in)</label>
                    @*<input type="text" placeholder="" id="" class="form-control">*@
                    @*<label for="">@Html.LabelFor(r => Model.ExtraCurricularActivities)</label>*@
                    @Html.TextBoxFor(m => m.ExtraCurricularActivities, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ExtraCurricularActivities, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            <div class="clearfix"></div>
            
            <div class="col-xs-12 col-sm-6 col-md-6">
                <div class="form-group">
                    <label for="">19. General Conduct</label>
                    <input type="text" placeholder="" id="" class="form-control">
                    @*<label for="">@Html.LabelFor(r => Model.ExtraCurricularActivities)</label>*@
                    @*@Html.TextBoxFor(m => m.ExtraCurricularActivities, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ExtraCurricularActivities, null, htmlAttributes: new { style = "color:red;" })*@
                </div>
            </div>
            <div class="clearfix"></div>
            
            
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group has-feedback">
                    <label for="">20. Date of Application for Certificate</label>
                    @*<label for="">@Html.LabelFor(r => Model.AppliedDate)</label>*@
                    @Html.TextBoxFor(m => m.AppliedDate, new { @class = "form-control", id = "tc_applied_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.AppliedDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>
                </div>
            </div>
            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group has-feedback">
                    <label for="">21. Date of Issue of Certificate</label>
                    @*<label for="">@Html.LabelFor(r => Model.IssueDate)</label>*@
                    @Html.TextBoxFor(m => m.IssueDate, new { @class = "form-control", id = "tc_issue_date", value = "DD/MM/YYYY" })
                    @Html.ValidationMessageFor(r => Model.IssueDate, null, htmlAttributes: new { style = "color:red;" })
                    <i class="glyphicon glyphicon-calendar fa fa-calendar form-control-feedback"></i>

                </div>
            </div>


            @*<div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">Refund Fee</label>
                    <input type="text" placeholder="" id="" class="form-control">
                    <label for="">@Html.LabelFor(r => Model.RefundFee)</label>
                    @Html.TextBoxFor(m => m.RefundFee, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.RefundFee, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>*@


            
            <div class="clearfix"></div>

            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">22. Reason for leaving the School</label>
                    @*<textarea class="form-control"></textarea>*@
                    @*<label for="">@Html.LabelFor(r => Model.ReasonForTC)</label>*@
                    @Html.TextBoxFor(m => m.ReasonForTC, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ReasonForTC, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>

            <div class="clearfix"></div>

            
            <div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">23. Any other Remark</label>
                    @*<textarea class="form-control"></textarea>*@
                    <label for="">@Html.LabelFor(r => Model.Description)</label>
                    @Html.TextBoxFor(m => m.Description, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.Description, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>
            
            
            @*<div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">Examination Last Taken with Result</label>
                    <input type="text" placeholder="" id="" class="form-control">
                    <label for="">@Html.LabelFor(r => Model.LastExamResult)</label>
                    @Html.TextBoxFor(m => m.LastExamResult, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.LastExamResult, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>*@

            @*<div class="col-xs-12 col-sm-6 col-md-3">
                <div class="form-group">
                    <label for="">Extra Curricular Acheivement Level</label>
                    <textarea class="form-control"></textarea>
                    <label for="">@Html.LabelFor(r => Model.ExtraCurricularAcheivementLevel)</label>
                    @Html.TextBoxFor(m => m.ExtraCurricularAcheivementLevel, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(r => Model.ExtraCurricularAcheivementLevel, null, htmlAttributes: new { style = "color:red;" })
                </div>
            </div>*@


            @*<div class="col-md-12">
                <div class="btnSec">
                    <button class="btn btn-default" type="submit">Fee</button>
                    <button class="btn btn-default" type="submit">Library</button>
                    <button class="btn btn-default" type="submit">Others</button>
                </div>
            </div>*@

            <div class="col-xs-12">
                <hr class="space">
            </div>

        </div>
        <div class="btnSec">
            @*<button class="btn orangedarkBtn" type="submit">Save</button>*@
            <button class="btn orangedarkBtn" id="savebutton" type="submit" onclick="DoAjaxPostAndMore(this)">Save</button>
            <button class="btn btn-default" type="submit">Clear</button>
            <button class="btn btn-default" type="submit">Cancel</button>
            <button class="btn btn-default" type="submit">Print TC</button>
        </div>
    </div>
}
@*</form>*@

@section scripts{
    <script type="text/javascript">

        function DoAjaxPostAndMore(btnClicked) {
            var $form = $(btnClicked).parents('form');
            $.ajax({
                type: "POST",
                url: $form.attr('action'),
                data: $form.serialize(),
                error: function (xhr, status, error) {
                    alert('Error on updating');
                },
                success: function (response) {
                    if (response.status == '') {
                        alert(response.Msg);
                    } else {
                        AddErrorAttributeCSS(response.ErrorList);
                        AddValidAttributeCSS(response.ValidKeyList);
                        console.log(response.ErrorList);
                    }
                }
            });
            return false;
        }
        $(document).on('change', "#ClassId", function () {
            $.ajax({
                url: $('#ClassId').attr('dataChangeUrl'),
                data: { classId: $('#ClassId').val() },
                type: 'get'
            }).success(function (data) {
                var $ddlStudent = $('#Student');
                var $ddlSec = $('#SectionId');
                $ddlSec.empty();
                $ddlSec.append($("<option />").text("--- Select Section ---"));
                $ddlStudent.empty();
                $ddlStudent.append($("<option />").text("--- Select Student ---"));
                $.each(data, function () {
                    $ddlSec.append($("<option />").val(this.SecId).text(this.SecName));
                });
            }).fail(function (error) {
                alert('Error');
            });
        });
            
        $(document).on('change', "#SectionId", function () {
            var viewModel = @Html.Raw(Json.Encode(Model))
             //$form.serialize();
            $.ajax({
                url: $('#SectionId').attr('dataChangeUrl'),
                data: { sessionId: $('#ddlSessionList').val(), classId: $('#ClassId').val(), sectionId: $('#SectionId').val() },
                type: 'get'
            }).success(function (data) {
                var $ddlStudent = $('#Student');
                $ddlStudent.empty();
                $ddlStudent.append($("<option />").text("--- Select Student ---"));
                $.each(data, function () {
                    $ddlStudent.append($("<option />").val(this.StudentERPNo).text(this.StudentName));
                });
            }).fail(function (error) {
                alert('Error');
            });

            $(document).on('change', "#Student", function () {
                @*var stdlist= JSON.stringify(@Model.StudentList);
                var viewModel = @Html.Raw(Json.Encode(Model));*@
                //var $form =  $('#mySelect').parents('form');
                    //debugger;
                // we do some updates
                //$('txtERPNo').text = $('#mySelect').val();
                $.ajax({
                    //url: $('#ddlSectionList').attr('dataChangeUrl'),
                    url: '@Url.Action("GetddlStudentList1", "Student")',
                    //data: JSON.stringify(model.StudentList),
                    //data: { model: viewModel },
                    data: { sessionId: $('#ddlSessionList').val(), classId: $('#ClassId').val(), sectionId: $('#SectionId').val(), erpNo: $('#Student').val() },
                    type: 'get'
                }).success(function (data) {
                    
                    $('#txtERPNo').val($('#Student').val());
                    $('#txtAdmNo').val(data.StudentAdmNo);
                    $('#txtFather').val(data.FatherName);


                    //debugger;
                    //$.each(data, function (index, value) {

                    //    if (this.StudentERPNo == $('#mySelect').val()) {
                    //        $('#txtERPNo').val($('#mySelect').val());
                    //        $('#txtAdmNo').val(this.StudentAdmNo);
                    //        $('#txtFather').val(this.FatherName);

                    //    }
                    //});

                    //var $ddlStudent = $('#mySelect');
                    //$ddlStudent.empty();
                    //$ddlStudent.append($("<option />").text("--- Select Student ---"));
                    //$.each(data, function () {
                    //    $ddlStudent.append($("<option />").val(this.ERPNo).text(this.Student));
                    //});
                }).fail(function (error) {
                    alert('Error');
                });
            });
        });

     </script>    
}

