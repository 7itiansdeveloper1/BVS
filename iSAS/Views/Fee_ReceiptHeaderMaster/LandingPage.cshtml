@using ISas.Web.Models;
@model List<ISas.Entities.FeesEntities.Fee_ReceiptHeaderMasterModels>

<section class="content-header">
    <h1>Receipt Header</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Fee</li>
        <li>Receipt Header</li>
    </ol>
</section>

<section class="content">
    <div class="box box-primary">
        <div class="box-header with-border">
            <h5 class="box-title">Receipt Headers List</h5>
            @*<h5 class="box-title pull-right">
                    @Html.ActionLink("ADD NEW", "New", "Fee_ReceiptHeaderMaster", htmlAttributes: new { @class = "btn btn-primary btn-sm" })
                </h5>*@
        </div>
        <div class="box-body">
            <table id="example1" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>S. No</th>
                        <th>Header1</th>
                        <th>Prefix</th>
                        <th>Start Receipt No</th>
                        <th>Header For</th>
                        <th class="text-center">Is Enabled?</th>
                        <th>Action</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Count > 0)
                    {
                        int count = 1;
                        for (int i = 0; i < Model.Count(); i++)
                        {
                            <tr>
                                <td>@Html.DisplayFor(r => count)</td>
                                <td>@Html.DisplayFor(r => Model[i].Header1)</td>
                                <td>@Html.DisplayFor(r => Model[i].Prefix)</td>
                                <td>@Html.DisplayFor(r => Model[i].ReceiptStartNo)</td>
                                <td>@Html.DisplayFor(r => Model[i].HeaderFor)</td>
                                <td class="text-center">
                                    @if (Model[i].IsEnable)
                                    {
                                        <label class="switch">
                                            <input id="IsEnableStr" disabled name="IsEnableStr" type="checkbox" checked="checked">
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                    else
                                    {
                                        <label class="switch">
                                            <input id="IsEnableStr" disabled name="IsEnableStr" type="checkbox">
                                            <span class="slider round"></span>
                                        </label>
                                    }
                                </td>
                                <td class="text-center">
                                    @Html.EncodedActionLink(" ", "Updation", "Fee_ReceiptHeaderMaster", new { HeaderId = Model[i].HeaderId }, htmlAttributes: new { @class = "fa fa-edit btnDefaultColor", title = "Edit Header" })

                                    @if (Model[i].HeaderFor == "FEE")
                                    {
                                        @Html.ActionLink(" ", "New_WingHeaderSetup", "Fee_ReceiptHeaderMaster", htmlAttributes:new { @class = "fa fa-gear btnDefaultColor", title = "Wing wise header setup.!"})
                                    }
                                </td>
                            </tr>
                            count++;
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</section>
@*<script>
        $(function () {
            $('#example1').DataTable()
        });

        function DeleteStrectureConfirm(StructId) {
            AsyncConfirmYesNo("Confirmation", "Are you sure to delete this structure?", MyYesFunction, MyNoFunction, StructId);
        }

        function MyYesFunction(StructId) {
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    spinnerShow();
                },
                url: "../Fee_FeeStructureMaster/Fee_FeeStructureMaster_Delete",
                data: { StructId: StructId },
                error: function (xhr, status, error) {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                },
                success: function (result) {
                    OpenMessegeAutoHideDiv(result.Msg);
                    setTimeout(function () { window.location = "../Fee_FeeStructureMaster/New"; }, 3000);
                },
                complete: function () {
                    spinnerHide();
                }
            });
        }
        function MyNoFunction() {
            //alert('No Calling');
        }
    </script>*@