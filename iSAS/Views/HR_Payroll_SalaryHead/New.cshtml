@model ISas.Entities.HR_Payroll_Entities.HR_Payroll_SalaryHeadModels
@{
    List<SelectListItem> headTypes = new List<SelectListItem>();
    headTypes.Add(new SelectListItem { Text = "Earning", Value = "E" });
    headTypes.Add(new SelectListItem { Text = "Deduction", Value = "D" });
}
<section class="content-header">
    <h1>
        Payroll Head Master
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>HR & Payroll</li>
        <li class="active">Payroll Head Master </li>
    </ol>
</section>
<section class="content">
    <div class="row">
        <div class="col-md-4">
            @using (Html.BeginForm("HR_Payroll_SalaryHead_CRUD", "HR_Payroll_SalaryHead", FormMethod.Post, htmlAttributes: new { }))
            {
                @Html.HiddenFor(r => Model.HeadID)
                <div class="box box-success">
                    <div class="box-body">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="form-group">
                                    <label for="">@Html.LabelFor(r => Model.HeadName)<i class="mandateLbl">*</i></label>
                                    <div class="select">
                                        @Html.TextBoxFor(m => m.HeadName, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(r => Model.HeadName, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="form-group">
                                    <label for="">@Html.LabelFor(r => Model.Discrption)</label>
                                    <div class="select">
                                        @Html.TextAreaFor(m => m.Discrption, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(r => Model.Discrption, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-12 col-md-12">
                                <div class="form-group">
                                    <label for="">@Html.LabelFor(r => Model.HeadType)</label>
                                    <div class="select">
                                        @Html.DropDownListFor(m => m.HeadType, new SelectList(headTypes, "Value", "Text"), htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                                        @Html.ValidationMessageFor(r => Model.HeadType, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.ExpansetoComp, htmlAttributes: new { @class = "" })
                                            @Html.LabelFor(r => Model.ExpansetoComp)
                                        </label>
                                        @Html.ValidationMessageFor(r => Model.ExpansetoComp, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-6">
                                <div class="form-group">
                                    <div class="checkbox">
                                        <label>
                                            @Html.CheckBoxFor(m => m.Daywise, htmlAttributes: new { @class = "" })
                                            @Html.LabelFor(r => Model.Daywise)
                                        </label>
                                        @Html.ValidationMessageFor(r => Model.Daywise, null, htmlAttributes: new { style = "color:red;" })
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="box-footer">
                        <button class="btn btn-success" type="button" onclick="DoAjaxPostAndMore(this)">SAVE</button>
                        <button class="btn btn-default" type="button" onclick="window.location.reload()">RESET</button>
                    </div>
                </div>
            }
        </div>
        <div class="col-md-8">
            @{ Html.RenderAction("LandingPage", "HR_Payroll_SalaryHead"); }
        </div>
    </div>
</section>
<script>
    function DoAjaxPostAndMore(btnClicked) {
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    setTimeout(function () { window.location = "../HR_Payroll_SalaryHead/New"; }, $('#hddnReloadTime').val());
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>

