@model ISas.Entities.TimeTable_Entities.TimeTable_Adjustment_FormLoadModel
@{
    string reportName = "Wingwise Report for Adjustment";
}



<div style="display:none;">
    @{
        Html.RenderAction("_ReportHeader", "Common", new
        {
            Header1 = Model.ReportHeader.Header1,
            Header2 = Model.ReportHeader.Header2,
            Header3 = Model.ReportHeader.Header3,
            Header4 = Model.ReportHeader.Header4,
            LogoURL = Model.ReportHeader.LogoURL,
            ReportName = Model.ReportHeader.ReportName,
            tempReportName = Model.ReportHeader.reportDisplayName

        });
    }

</div>

<div class="box box-primary">
    <!-- /.box-header -->
    <div class="box-header with-border">
        <div class="box-title">
            <h5 class="box-title">Adjustment List</h5>
        </div>
    </div>
    <div class="box-body pad table-responsive">
        <div id="summaryDataDiv">
            <table id="example1" class="table table-responsive table-bordered table-condensed" style="width:100%">
                <thead>
                    <tr>
                        <th>S.No</th>
                        <th>Teacher</th>
                        @*<th>Day</th>*@
                        <th>Period</th>
                        <th>Subject</th>
                        <th>Class</th>
                        <th>Adjustment</th>
                        <th>Signature</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.DayAdjustmentList.Count > 0)
                    {
                        for (int i = 0; i < Model.DayAdjustmentList.Count(); i++)
                        {
                    <tr>
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].Sno)</td>
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].StaffName)</td>
                        @*<td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].PeriodDay)</td>*@
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].PeriodName)</td>
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].SubjectName)</td>
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].ClassName)</td>
                        <td>@Html.DisplayFor(r => Model.DayAdjustmentList[i].PossibleAdjustment)</td>
                 m8u85              <td></td>
                    </tr>
                        }
                    }
                </tbody>
            </table>
            



        </div>


    </div>
    <!-- /.box-body -->
</div>

<script>
    $("#example1 tr").click(function (evt) {
        if (evt.ctrlKey) {
            $(this).toggleClass("selected");
        } else {
            var selected = $(this).hasClass("selected");
            $("#example1 tr").removeClass("selected");
            if (!selected)
                $(this).addClass("selected");
        }
    });

    $(document).ready(function () {

       var wingname= $('#wingId :selected').text();


        $('#example1').DataTable({
            "pageLength": 50,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    titleAttr: 'Copy',
                    title: '@reportName' + ' (' + wingname + '); Date :'+'@DateTime.Now.Date.ToString("dd/MM/yyyy")',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    titleAttr: 'Excel',
                    title: '@reportName' + ' (' + wingname + '); Date :'+'@DateTime.Now.Date.ToString("dd/MM/yyyy")',
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function (xlsx) {
                        console.log(xlsx);

                    }
                },
                {
                    extend: 'print',
                    text: '<i class="fa fa-print"></i>',
                    titleAttr: 'Print',
                    title: '',
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function (win) {
                        $(win.document.body).prepend($('#reportHeaderDiv').html());
                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                       // $(win.document.body).append($('#summaryDataDiv').html());
                    }
                },
                //{
                //    text: '<i class="fa fa-file-pdf-o"></i>',
                //    titleAttr: 'Custom Report, PDF',
                //    action: function (e, dt, node, config) {
                //        $('#fee_ReportForm').submit();
                //        //getFeeDetailReport1();
                //    }
                //},
                'colvis'
            ],
            select: true
        });
    });
</script>
