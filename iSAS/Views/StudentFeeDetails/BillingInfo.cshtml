@model ISas.Entities.DashboardEntities.FeeBillingInfoModel
@{
    int totalPayableAmount = Model.FeeDetailList.Select(r => r.Due).DefaultIfEmpty(0).Sum();
}
<meta name="viewport" content="width=device-width, initial-scale=1.0">

<body>
    <section class="content-header">
        <h1>Fee Payment</h1>
        <ol class="breadcrumb">
            <li>
                <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
                <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
                <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
            </li>
            <li>Fee</li>
            <li class="active">Fee Payment</li>
        </ol>
    </section>

    <section class="invoice">
        <div class="row">
            <div class="col-md-8">
                <div class="row">
                    <div class="col-md-8">
                        <table class="table" style="width:100%;font-size:large;border:none;">
                            <tr>
                                <td style="text-align:left;color:red;"><strong>Student Details</strong> </td>
                                <td style="text-align:right;"></td>
                            </tr>
                            <tr>
                                <td style="text-align:left;">Adm No</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.AdmNo)</td>
                            </tr>
                            <tr>
                                <td style="text-align:left;">Student name</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.Student)</td>
                            </tr>
                            <tr>
                                <td style="text-align:left;">Class</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.Class)</td>
                            </tr>
                            <tr>
                                <td style="text-align:left;">Father name</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.Father)</td>
                            </tr>

                            <tr>
                                <td style="text-align:left;">SMS Number</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.SMSNo)</td>
                            </tr>

                            <tr>
                                <td style="text-align:left;">Fee Duration</td>
                                <td style="text-align:right;">@Html.DisplayFor(r => Model.Duration)</td>
                            </tr>
                        </table>
                    </div>
                </div>
            </div>
            <div class="well col-md-4">
                <div class="row">
                    <div class="col-md-12">
                        <div class="row" style="border-bottom:1px dotted black;">
                            <div class="col-xs-6 col-sm-6 col-md-6">
                                <address>
                                    <strong>@Html.DisplayFor(r => Model.ClientName)</strong>
                                    <br>
                                    @Html.DisplayFor(r => Model.Add1)
                                    <br>
                                    @Html.DisplayFor(r => Model.Add2)
                                    <br>
                                    <abbr title="Phone">P:</abbr> @Html.DisplayFor(r => Model.Ph)
                                </address>
                            </div>
                            <div class="col-xs-6 col-sm-6 col-md-6 text-right">
                                <p>
                                    <em>Date: @DateTime.Now.ToLongDateString()</em>
                                </p>
                                <p>
                                    <em>Invoice #: @Html.DisplayFor(r => Model.InvoiceNo)</em>
                                </p>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <div class="text-center">
                                    <h1>Invoice</h1>
                                </div>
                                <table class="table table-hover table-condensed" style="width:100%;" cellpadding="0" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th style="width:90%;">Head Name</th>
                                            <th style="width:10%;text-align:left;">Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < Model.FeeDetailList.Count; i++)
                                        {
                                            <tr>
                                                <td><em>@Html.DisplayFor(r => Model.FeeDetailList[i].HeadName)</em></td>
                                                <td class="text-right">@Html.DisplayFor(r => Model.FeeDetailList[i].Due)</td>
                                            </tr>
                                        }
                                        <tr>
                                            <td class="text-right">
                                                <p>
                                                    <h5><strong>Total </strong></h5>
                                                </p>
                                            </td>
                                            <td class="text-right">
                                                <p>
                                                    <h5> <strong>@Html.DisplayFor(r => @totalPayableAmount)</strong></h5>
                                                </p>
                                            </td>
                                        </tr>
                                        <tr>
                                            <td class="text-right"><h4><strong>Payable Amount </strong></h4></td>
                                            <td class="text-center text-danger"><h4><strong>@Html.DisplayFor(r => @totalPayableAmount)</strong></h4></td>
                                        </tr>
                                    </tbody>
                                </table>

                                @*@Html.ActionLink("Pay Now", "Makepayment", "StudentFeeDetails", null, new { @class = "btn btn-success pull-right" })*@

                                @*<button type="button" id="btnOnlinepayment" class="btn btn-success pull-right" onclick="MakeOnlinePayment()">
                                        Pay Now   <span class="glyphicon glyphicon-chevron-right"></span>
                                    </button>*@
                                <button type="button" id="btnOnlinepayment" class="btn btn-success pull-right" onclick="MakeOnlinePaymentByPaytmStandard()">
                                    Pay Now   <span class="glyphicon glyphicon-chevron-right"></span>
                                </button>







                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div id="paytm-checkoutjs"></div>
        <div id="blink-response"></div>
    </section>
</body>

@*<script>

function MakeOnlinePaymentByRazorPay() {
        $.ajax({
            url: '../StudentFeeDetails/MakePaymentByRazorPay',
            data: { paymentMode: "Online", erpno: '@Model.ERP',  amount: '@totalPayableAmount' },
            type: 'post',
            success: (function (response) {


                if (response.status == 'success') {
                    //DoAjaxPostAndMore(response.transactionNo, response.erpNumber);
                    //window.location.href = "/StudentFeeDetails/MakePayment1?tnxId=" + response.transactionNo + "&amount=" + '@totalPayableAmount';
                    //onScriptLoad(response.tokenNo,'@totalPayableAmount',response.orderId);
                    //onScriptLoad('16633b187b3a43d3a7037fc5108b54da1608733278322','@totalPayableAmount','35694f82-3c9a-436e-b73e-88943a11796520205123195117');
                    }
                else {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                }
            })
        });
    };

</script>*@

<script>

    function MakeOnlinePaymentByPaytmStandard() {
        $.ajax({
            url: '../StudentFeeDetails/MakeOnlinepayment',
            data: { paymentMode: "Online", erpno: '@Model.ERP',  amount: '@totalPayableAmount' },
            type: 'get',
            success: (function (response) {
                if (response.status == 'success') {
                    window.location.href = "/StudentFeeDetails/MakePayment?tnxId=" + response.transactionNo + "&amount=" + '@totalPayableAmount';
                    }
                else {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                }
            })
        });
    };



    @*function MakeOnlinePayment() {
        $.ajax({
            url: '../StudentFeeDetails/MakeOnlinepayment',
            data: { paymentMode: "Online", erpno: '@Model.ERP',  amount: '@totalPayableAmount' },
            type: 'get',
            success: (function (response) {


                if (response.status == 'success') {
                    //DoAjaxPostAndMore(response.transactionNo, response.erpNumber);
                    //window.location.href = "/StudentFeeDetails/MakePayment1?tnxId=" + response.transactionNo + "&amount=" + '@totalPayableAmount';

                    onScriptLoad(response.tokenNo,'@totalPayableAmount',response.orderId);
                    //onScriptLoad('16633b187b3a43d3a7037fc5108b54da1608733278322','@totalPayableAmount','35694f82-3c9a-436e-b73e-88943a11796520205123195117');
                    }
                else {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                }
            })
        });
    };*@

    @*function MakeOnlinePayment1() {
        onScriptLoad('bd28638b6c6a465a9d8cfb7103dea3861608739941641', '@totalPayableAmount','aba91ddd-fa27-440c-b7e0-a6b3bb1c89cd20204223214220');
    };*@


    function Response(responsedata) {
        $.ajax({
            url: '../StudentFeeDetails/Response_',
            data: { data: responsedata},
            type: 'post',
            success: (function (response) {
                if (response.status == 'success') {

                    }
                else {
                    OpenMessegeAutoHideDiv(responsedata.RESPMSG, "warning");
                }
            })
        });
    };

</script>
<script>
    function onScriptLoad(token, amt, order) {
        //alert(token);
        //alert(amt);
        //alert(order);
        spinnerShow();
        var config = {
            "root": "",
            "flow": "DEFAULT",
            "data": {
                "orderId": order,
                "token": token,
                "tokenType": "TXN_TOKEN",
                "amount": amt
            },
            merchant: {
                redirect: false
            },
            "handler": {
                notifyMerchant: function (eventName, data) {
                    console.log("notifyMerchant handler function called");
                    console.log("eventName => ", eventName);
                    console.log("data => ", data);
                    if (eventName == 'SESSION_EXPIRED') {
                        location.reload();
                    }
                },
                transactionStatus: function (data) {
                    console.log("payment status ", data);

                    window.Paytm.CheckoutJS.close();
                    Response(data);


                    //var result = "<h2>Response: </h2><table>";
                    //for (var key in data) {
                    //    if (data.hasOwnProperty(key)) {
                    //        result += "<tr><td>" + key + "</td><td>" + data[key] + "</td></tr>";
                    //    }
                    //}
                    //result += "</table>";
                    //document.getElementById("blink-response").innerHTML = result;



                }
            }
        };

        if (window.Paytm && window.Paytm.CheckoutJS) {
            window.Paytm.CheckoutJS.onLoad(function excecuteAfterCompleteLoad() {
                // initialze configuration using init method

                window.Paytm.CheckoutJS.init(config).then(function onSuccess() {

                    spinnerHide();
                    // after successfully updating configuration, invoke Blink Checkout
                    window.Paytm.CheckoutJS.invoke();


                }).catch(function onError(error) {
                    console.log("error => ", error);
                });
            });
        }
    }
</script>


<script src="https://checkout.razorpay.com/v1/checkout.js"></script>


<script>

    var options = {
        "key": "rzp_test_SV1XRAX4q9Qqwd", // Enter the Key ID generated from the Dashboard
        "amount": "50000", // Amount is in currency subunits. Default currency is INR. Hence, 50000 refers to 50000 paise
        "currency": "INR",
        "name": "7itians",
        "description": "Test Transaction",
        "image": "https://www.7itians.com/assets/img/logo.png",
        "order_id": "order_1251252", //This is a sample Order ID. Pass the `id` obtained in the response of Step 1

        "handler": function (response) {
            alert('MAHESH');
            alert(response.razorpay_payment_id);
            alert(response.razorpay_order_id);
            alert(response.razorpay_signature)
        },
        "prefill": {
            "name": "Gaurav Kumar",
            "email": "gaurav.kumar@example.com",
            "contact": "9999999999"
        },
        "notes": {
            "address": "Razorpay Corporate Office"
        },
        "theme": {
            "color": "#3399cc"
        }
    };
    var rzp1 = new Razorpay(options);

    rzp1.on('payment.failed', function (response) {
        alert(response.error.code);
        alert(response.error.description);
        alert(response.error.source);
        alert(response.error.step);
        alert(response.error.reason);
        alert(response.error.metadata.order_id);
        alert(response.error.metadata.payment_id);
    });

    document.getElementById('rzp-button1').onclick = function (e) {

        rzp1.open();
        e.preventDefault();
    }
</script>

@*<script type="application/javascript" crossorigin="anonymous" src="https://securegw-stage.paytm.in/merchantpgpui/checkoutjs/merchants/Eduver73645354801101.js" onload="onScriptLoad();"></script>*@
@*<script type="application/javascript" crossorigin="anonymous" src="https://securegw-stage.paytm.in/merchantpgpui/checkoutjs/merchants/Eduver73645354801101.js"></script>*@
<script type="application/javascript" crossorigin="anonymous" src="https://securegw-stage.paytm.in/merchantpgpui/checkoutjs/merchants/PyVhRr64273223302829.js"></script>

