@model ISas.Entities.FeesEntities.Fee_OnlineSettlementEntities
@{
    int rownumber = 1;
}
<section class="content-header">
    <h1>Online Settlement</h1>
    <ol class="breadcrumb">
        <li>
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Fee</li>
        <li>Online Settlement</li>
    </ol>
</section>

<section class="content">
    @using (Html.BeginForm("Fee_OnlineSettlement_CRUD", "Fee_OnlineSettlement", FormMethod.Post, htmlAttributes: new { }))
    {

    <div class="box box-success">
        <div class="box-body">
            
            <div class="row">
                <div class="col-md-12">
                    @*<div style="width:100%;overflow-y:auto;">
                        <div id="studentReportMainDiv"></div>
                    </div>*@

                    <table class="table table-condensed table-hover table-responsive table-bordered" id="tblOnlineSettlementList">
                        <thead>
                            <tr style="text-align:center">
                                <th>@Html.CheckBox("chkBoxSelectAll", false, htmlAttributes: new { onchange = "fun_chekcToSelectAllRecord()" })</th>
                                <th>Sno</th>
                                <th>Student</th>
                                <th>Father</th>
                                <th>Class</th>
                                <th>Receipt No</th>
                                <th>Receipt Date</th>
                                <th>Amount</th>
                                <th>Reference No</th>
                                <th>Settlement Date</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.onlineSettlementList != null && Model.onlineSettlementList.Count > 0)
                            {

                                for (int i = 0; i < Model.onlineSettlementList.Count; i++)
                                {
                                    rownumber = rownumber + i;
                            <tr style="text-align:center">

                                @Html.HiddenFor(r => Model.onlineSettlementList[i].AdmNo)
                                @Html.HiddenFor(r => Model.onlineSettlementList[i].ERPNo)
                                <td>@Html.CheckBoxFor(r => Model.onlineSettlementList[i].isSettled, htmlAttributes: new { @class = "minimal" })</td>
                                <td>@rownumber</td>

                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].Student)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].Student)
                                </td>

                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].Father)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].Father)
                                </td>

                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].Class)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].Class)
                                </td>
                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].TransRefNo)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].TransRefNo)
                                </td>
                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].Transdate)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].Transdate)
                                </td>
                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].recamount)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].recamount)
                                </td>

                                <td>
                                    @Html.HiddenFor(r => Model.onlineSettlementList[i].TransReferenceNo)
                                    @Html.DisplayFor(r => Model.onlineSettlementList[i].TransReferenceNo)
                                </td>

                                @*<td>@Html.TextBoxFor(r => Model.onlineSettlementList[i].settlementDate, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>*@
                                <td>@Html.TextBoxFor(r => Model.onlineSettlementList[i].settlementDate, htmlAttributes: new { @class = "form-control", tabindex = "-1" })</td>
                            </tr>
                                }
                            }
                        </tbody>
                    </table>

                </div>
            </div>

            <div class="row">
                <div class="col-md-2">
                    <input type="button" disabled="disabled" id="btnsave" onclick="DoAjaxPostAndMore(this);" value="SAVE" class="btn btn-success" />
                </div>
            </div>
        </div>
    </div>
        
    }
</section>

<script>
    

    function DoAjaxPostAndMore(btnClicked) {
        if ($('#ConcessionCategoryId').val() == '' || $('#ConcessionCategoryId').val() == null) {
            OpenMessegeAutoHideDiv('Please select concession reason first..!', 'Info');
            return false;
        }
        var $form = $(btnClicked).parents('form');
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: $form.attr('action'),
            data: $form.serialize(),
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    getCreditNoteOrConcessionList();
                }
                else {
                    OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }



</script>

<script>
    $(function () {
        $('#daterange-btn').daterangepicker(
            {
                ranges: {
                    'Today': [moment(), moment()],
                    'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                    'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                    'This Month': [moment().startOf('month'), moment().endOf('month')],
                    'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                },
                startDate: moment().subtract(29, 'days'),
                endDate: moment()
            },
            function (start, end) {
                $('#daterange-btn span').html(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'))
            }
        )


    });
</script>