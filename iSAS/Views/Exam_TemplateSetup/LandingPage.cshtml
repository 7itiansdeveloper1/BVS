@using ISas.Web.Models;
@model List<ISas.Entities.Exam_Entities.Exam_TemplateSetupModels>

<!-- /.box -->
<div class="box box-primary">
    <!-- /.box-header -->
    <div class="box-header with-border">
        <div class="box-title">
            <h5 class="box-title">Templete List</h5>
        </div>
    </div>
    <div class="box-body">
        <table id="example1" class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>S. No</th>
                    <th>Templete Name</th>
                    <th>Display Name</th>
                    <th>Print Order</th>
                    <th>Classes</th>
                    <th class="text-center">Action</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Count > 0)
                {
                    int count = 1;
                    for (int i = 0; i < Model.Count(); i++)
                    {
                        <tr>
                            <td>@Html.DisplayFor(r => count)</td>
                            <td>@Html.DisplayFor(r => Model[i].TemplateName)</td>
                            <td>@Html.DisplayFor(r => Model[i].Exam_TemplateDisplayName)</td>
                            <td>@Html.DisplayFor(r => Model[i].PrintOrder)</td>
                            <td>@Html.DisplayFor(r => Model[i].Classes)</td>
                            <td class="text-center">
                                @if (Model[i].IsDeleteable)
                                {
                                    <a href="#" onclick="DeleteConfirm('@Model[i].TemplateId')" title="Delete Templete" class="fa fa-trash btnDefaultColor"></a>
                                }
                                else
                                {
                                    <a href="#" title="Delete Templete" class="fa fa-trash btnDefaultColorFaded"></a>
                                }

                                @Html.EncodedActionLink(" ", "Updation", "Exam_TemplateSetup", new { TemplateId = Model[i].TemplateId }, htmlAttributes: new { @class = "fa fa-edit btnDefaultColor", title = "Edit Templete" })

                                @Html.EncodedActionLink(" ", "New", "Examination_SubjectMaster", new { TemplateId = Model[i].TemplateId, TempleteName = Model[i].TemplateName }, htmlAttributes: new { @class = "fa fa-gear  btnDefaultColor", title = "Subject Setup" })

                                <a href="#" onclick="OpenClassSetupDialog('@Model[i].TemplateId', '@Model[i].TemplateName')" title="Class Setup" class="fa fa-gear btnDefaultColor"></a>
                                <a href="#" onclick="OpenGradingSetupDialog('@Model[i].TemplateId', '@Model[i].TemplateName')" title="Grading Setup" class="fa fa-gear btnDefaultColor"></a>

                                @*@Html.ActionLink(" ", "", "", new { }, htmlAttributes: new { @class = "fa fa-gear  btnDefaultColor", title = "Class Setup, Pending" })
                                    @Html.ActionLink(" ", "", "", new { }, htmlAttributes: new { @class = "fa fa-gear  btnDefaultColor", title = "Grading Setup, Pending" })*@

                            </td>
                        </tr>
                        count++;
                    }
                }
            </tbody>
        </table>
    </div>
    <!-- /.box-body -->
</div>
<!-- /.box -->

<script>
    $(function () {
        $('#example1').DataTable()
    });

    function DeleteConfirm(Id) {
        AsyncConfirmYesNo("Confirmation", "Are you sure to delete templete Class?", MyYesFunction, MyNoFunction, Id);
    }

    function MyYesFunction(Id) {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Exam_TemplateSetup/Exam_TemplateSetup_Delete",
            data: { ClassId: classId },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenMessegeAutoHideDiv(result.Msg, result.Color);
                setTimeout(function () { window.location = "../Exam_TemplateSetup/New"; }, $('#hddnReloadTime').val());
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }


    function OpenClassSetupDialog(TempleteId, TempleteName) {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Exam_TemplateSetup/_ClassSetupDetails",
            data: { Exam_TemplateId: TempleteId},
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenModalWithSave(result, 'Class Setup For :- ' + TempleteName);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }


    function OpenGradingSetupDialog(TempleteId, TempleteName) {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Exam_TemplateSetup/_GradingSetupDetails",
            data: { Exam_TemplateId: TempleteId },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                OpenModalWithSave(result, 'Grading Setup For :- ' + TempleteName);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
</script>