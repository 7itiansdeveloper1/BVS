@model ISas.Entities.DashboardEntities.Dashboard_StudentModel
@{
    ViewBag.Title = "DashBoard";
    int currentMonth = DateTime.Now.Month;
    int currentYear = DateTime.Now.Year;
 
}

@helper DisplayFixLengthText(string input, int inputLength)
{
    if (input.Length <= inputLength)
    {
        @input
    }
    else
    {
        @input.Substring(0, inputLength)<text>...</text>
    }
}

<style>
    .direct-chat-text-custom {
        border-radius: 5px;
        /*position: relative;*/
        padding: 5px 10px;
        background: #d2d6de;
        border: 1px solid #d2d6de;
        margin: 5px 0 0 0px;
        color: #444;
    }

    #chartdiv_sample1 {
        width: 100%;
        height: 323px;
    }

    #chartdiv_sample {
        width: 100%;
        height: 268px;
    }
</style>

<!-- Content Header (Page header) -->
<section class="content-header">
    <h1>
        Dashboard
        <small>Student</small>
    </h1>
</section>
@Html.Hidden("hddnCalCallValue", 0)
<section class="content">
    <div class="box-body">
        <div class="row">
            <a class="btn btn-block btn-social btn-bitbucket">
                Food For thought :
                @*<i class="fa fa-bitbucket"></i>*@
                <i class="fa fa-dropbox"></i>
                @Model.foodForThought
            </a>
        </div>
    </div>


    <div class="row">
        <section class="col-lg-5 connectedSortable">
            <div class="box box-primary">
                <div class="box-header">
                    <i class="fa fa-rupee"></i>
                    <h3 class="box-title">Fee Details</h3>
                    <h6 class="box-title pull-right"><a class="label label-primary" style="font-size:12px;" href="@Url.Action("StudentFeeDetailsMainPage", "StudentFeeDetails")">Click here to pay..</a> </h6>
                </div>
                <div class="box-body">
                    @if (@Model.FeeSummary == null)
                    {
                        <h4 class="box-title" style="color:green"><strong>Next Due Date : - </strong> </h4>
                        <h4 class="box-title" style="color:green"><strong>Amount : 0</strong> </h4>
                    }
                    else if (@Model.FeeSummary != null && @Model.FeeSummary.Flag == "red")
                    {
                        <h4 class="box-title" style="color:red"><strong>Due Date : @Model.FeeSummary.DueDate</strong> </h4>
                        <h4 class="box-title" style="color:red"><strong>Amount : @Model.FeeSummary.PayableAmount</strong> </h4>
                    }
                    else
                    {
                        <h4 class="box-title" style="color:green"><strong>Next Due Date : @Model.FeeSummary.DueDate</strong> </h4>
                        <h4 class="box-title" style="color:green"><strong>Amount : @Model.FeeSummary.PayableAmount</strong> </h4>
                    }

                    @*<div class="chartdiv_style" id="chartdiv_sample1"></div>*@
                </div>
            </div>
        </section>

        <section class="col-lg-7 connectedSortable">
            <div class="nav-tabs-custom" style="cursor: move;">
                <ul class="nav nav-tabs ui-sortable-handle">

                    @*<li class="">
                        <a href="#assignmentDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp;   <i class="fa fa-bars"></i> &nbsp; Class Notes &nbsp;
                        </a>
                    </li>*@
                    <li class="active">
                        <a href="#homeworkDiv" data-toggle="tab" aria-expanded="false">
                            @*&nbsp;  <i class="fa fa-edit"></i> &nbsp; Result &nbsp;*@
                            &nbsp;  <i class="fa fa-edit"></i> &nbsp; Homework &nbsp;
                        </a>
                    </li>


                    @*<li class="">
                        <a href="#syllabusDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp; <i class="fa fa-database"></i> &nbsp; Syllabus &nbsp;
                        </a>
                    </li>*@
                </ul>
                <div class="tab-content no-padding">



                    <div class="tab-pane active" id="homeworkDiv">
                        <div class="box box-widget">
                            <div class="box-header">
                                @Html.ActionLink("View More..", "HomeWork_UserDisplayList", "Academic_HomeWorkMaster", new { Category = "HW" }, htmlAttributes: new { @class = "label label-primary pull-right" })
                            </div>
                            <div class="box-body chat slimScrollDiv_custom">


                                @*<div class="item">

                                    <img src="/Images/System/textIcon.png" alt="user image" class="">
                                    <p class="message">
                                        <a href="#" class="name">
                                            <small class="text-muted pull-right">
                                                <i class="fa fa-calendar"></i>
                                                20 Mar 2020
                                            </small>
                                            @Html.ActionLink("View Result", "GetResult", "Exam_DownloadResult", htmlAttributes: new { @class = "" })
                                        </a>
                                        <span class="minimize"> </span>
                                    </p>
                                    <div class="attachment">
                                        <h4>

                                            <a href="@Url.Action("GetResult", "Exam_DownloadResult")" class="">Click Here to View Result</a>
                                        </h4>


                                    </div>
                                </div>*@

                                @for (int i = 0; i < Model.HomeWorkList.Count; i++)
                                {
                                    <div class="item">
                                        <img src="~/Images/System/textIcon.png" alt="user image" class="">
                                        <p class="message">
                                            <a href="#" class="name">
                                                <small class="text-muted pull-right">
                                                    <i class="fa fa-calendar"></i>
                                                    @Html.DisplayFor(r => Model.HomeWorkList[i].UploadDate)

                                                </small>

                                                @Html.DisplayFor(r => Model.HomeWorkList[i].Title)
                                            </a>
                                        </p>

                                        @if (!string.IsNullOrEmpty(Model.HomeWorkList[i].AttachmentReference))
                                        {
                                            List<string> attachments = Model.HomeWorkList[i].AttachmentReference.Split(',').ToList();
                                            <div class="attachment">
                                                <h4>
                                                    Download Attachments:
                                                    <span class="filename">
                                                        @for (int j = 0; j < @attachments.Count; j++)
                                                        {
                                                            string commaStr = "";
                                                            if (j > 0)
                                                            {
                                                                commaStr = ", ";
                                                            }
                                                            @Html.DisplayFor(r => commaStr)
                                                            <a class="text-sm" href="~/@attachments[j]" download="@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)">@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)</a>
                                                        }
                                                    </span>

                                                </h4>

                                                @if (Model.HomeWorkList[i].SubmissionDate != "")
                                                {
                                                    <p class="text-sm">
                                                        Submission Date : &nbsp;
                                                        <small class="text-muted" style="padding-top:1%;"><i class="fa fa-calendar"></i>  @Html.DisplayFor(r => Model.HomeWorkList[i].SubmissionDate) </small>
                                                    </p>
                                                }


                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>


                    <div class="tab-pane" id="assignmentDiv">
                        <div class="box box-widget">
                            <div class="box-header">
                                @Html.ActionLink("View More..", "HomeWork_UserDisplayList", "Academic_HomeWorkMaster", new { Category = "CN" }, htmlAttributes: new { @class = "label label-primary pull-right" })
                            </div>
                            <div class="box-body chat slimScrollDiv_custom">
                                @for (int i = 0; i < Model.AssignmentList.Count; i++)
                                {
                                    <div class="item">
                                        <img src="~/Images/System/textIcon.png" alt="user image" class="">
                                        <p class="message">
                                            <a href="#" class="name">
                                                <small class="text-muted pull-right"><i class="fa fa-calendar"></i> @Html.DisplayFor(r => Model.AssignmentList[i].UploadDate) </small>
                                                @Html.DisplayFor(r => Model.AssignmentList[i].Title)
                                            </a>
                                        </p>

                                        @if (!string.IsNullOrEmpty(Model.AssignmentList[i].AttachmentReference))
                                        {
                                            List<string> attachments = Model.AssignmentList[i].AttachmentReference.Split(',').ToList();
                                            <div class="attachment">
                                                <h4>
                                                    Download Attachments:
                                                    <span class="pull-right text-sm">
                                                        Submission Date : &nbsp;
                                                        <small class="text-muted pull-right" style="padding-top:1%;"><i class="fa fa-calendar"></i>  @Html.DisplayFor(r => Model.AssignmentList[i].SubmissionDate) </small>
                                                    </span>
                                                </h4>
                                                <p class="filename">
                                                    @for (int j = 0; j < @attachments.Count; j++)
                                                    {
                                                        string commaStr = "";
                                                        if (j > 0)
                                                        {
                                                            commaStr = ", ";
                                                        }
                                                        @Html.DisplayFor(r => commaStr)
                                                        <a class="text-sm" href="~/@attachments[j]" download="@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)">@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)</a>
                                                    }
                                                </p>
                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>







                    @*<div class="tab-pane" id="syllabusDiv">
                        <div class="box box-widget">
                            <div class="box-header">
                                @Html.ActionLink("View More..", "Syllabus_UserDisplayList", "Academic_SyllabusMaster", new { ClassSectionId = "DONT_KNOW" }, htmlAttributes: new { @class = "label label-primary pull-right" })
                            </div>
                            <div class="box-body chat slimScrollDiv_custom">
                                @for (int i = 0; i < Model.SyllabusList.Count; i++)
                                {
                                    <div class="item">
                                        <img src="~/Images/System/textIcon.png" alt="user image" class="">
                                        <p class="message">
                                            <a href="#" class="name">
                                                <small class="text-muted pull-right"><i class="fa fa-calendar"></i> @Html.DisplayFor(r => Model.SyllabusList[i].UploadDate) </small>
                                                @Html.DisplayFor(r => Model.SyllabusList[i].Title)
                                            </a>
                                        </p>

                                        @if (!string.IsNullOrEmpty(Model.SyllabusList[i].AttachmentReference))
                                        {
                                            List<string> attachments = Model.SyllabusList[i].AttachmentReference.Split(',').ToList();
                                            <div class="attachment">
                                                <h4>Download Attachments:
                    <span class="filename">
                                                    @for (int j = 0; j < @attachments.Count; j++)
                                                    {
                                                        string commaStr = "";
                                                        if (j > 0)
                                                        {
                                                            commaStr = ", ";
                                                        }
                                                        @Html.DisplayFor(r => commaStr)
                                                        <a class="text-sm" href="~/@attachments[j]" download="@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)">@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)</a>
                                                    }
                                                </span>

                        </h4>

                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>*@
                </div>
            </div>
        </section>


    </div>




    

    <div class="row">
        <section class="col-lg-7 connectedSortable">
            <div class="nav-tabs-custom" style="cursor: move;">
                <ul class="nav nav-tabs ui-sortable-handle">
                    <li class="active">
                        <a href="#circularDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp;  <i class="fa fa-bullhorn"></i> &nbsp; Notice & Circular &nbsp;
                        </a>
                    </li>
                    @*<li class="">
                        <a href="#noticeDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp;   <i class="fa  fa-sticky-note"></i> &nbsp; Notice &nbsp;
                        </a>
                    </li>
                    <li class="">
                        <a href="#newsDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp; <i class="fa fa-book"></i> &nbsp; News &nbsp;
                        </a>
                    </li>
                    <li class="">
                        <a href="#eventDiv" data-toggle="tab" aria-expanded="true">
                            &nbsp;  <i class="fa fa-calendar"></i> &nbsp; Events &nbsp;
                        </a>
                    </li>*@
                </ul>
                <div class="tab-content no-padding">
                    <div class="tab-pane active" id="circularDiv">
                        <div class="box box-widget">
                            <div class="box-header">
                                <a href="@Url.Action("DisplayList", "Circular")" class="label label-primary pull-right">View More..</a>
                            </div>

                            <div class="box-body chat slimScrollDiv_custom">





                                @for (int i = 0; i < Model.CircularList.Count; i++)
                                {
                                    <div class="item">



                                        @if (Model.CircularList[i].IsNew)
                                        {
                                            <img src="~/Images/System/newimg.gif" />
                                        }
                                        else
                                        {
                                            <img src="~/Images/System/textIcon.png" alt="user image" class="">
                                        }
                                        <p class="message">
                                            <a href="#" class="name">
                                                <small class="text-muted pull-right">
                                                    <i class="fa fa-calendar"></i>
                                                    @Html.DisplayFor(r => Model.CircularList[i].UploadStartDate)
                                                </small>
                                                @Html.DisplayFor(r => Model.CircularList[i].UploadTitle)
                                            </a>
                                            <span class="minimize"> @Html.DisplayFor(r => Model.CircularList[i].UploadDescription)</span>
                                        </p>
                                        @if (Model.CircularList[i].HavingAttachment)
                                        {
                                            List<string> attachments = Model.CircularList[i].UploadAttachment.Split(',').ToList();
                                            <div class="attachment">
                                                <h4>
                                                    Download Attachments:
                                                    <span class="filename">
                                                        @for (int j = 0; j < @attachments.Count; j++)
                                                        {
                                                            string commaStr = "";
                                                            if (j > 0)
                                                            {
                                                                commaStr = ", ";
                                                            }
                                                            @Html.DisplayFor(r => commaStr)
                                                            <a class="text-sm" href="~/@attachments[j]" download="@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)">@attachments[j].Substring(@attachments[j].LastIndexOf('@') + 1)</a>
                                                        }
                                                        <span>
                                                </h4>





                                            </div>
                                        }
                                    </div>
                                }
                            </div>
                        </div>
                    </div>

                </div>


            </div>
        </section>

        <section class="col-lg-5">
            <div class="box box-primary">
                <div class="box-header with-border">
                    <h5 class="box-title">
                        <i class="fa fa-envelope"> &nbsp; SMS Details</i>
                    </h5>
                </div>
                <div class="box-footer box-comments slimScrollDiv_custom">
                    @for (int i = 0; i < Model.SMSDetails.Count; i++)
                    {
                        <div class="box-comment">
                            @*<img class="img-circle img-sm" src="~/Images/System/textIcon.png" alt="User Image">*@
                            <div class="comment-text" style="margin-left:0px;">
                                <span class="username">
                                    @Html.DisplayFor(r => Model.SMSDetails[i].SMSDate)
                                </span>
                                <span class="minimize">@Html.DisplayFor(r => Model.SMSDetails[i].SMSTExt)</span>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </section>


    </div>

    <div class="row">
        @*<section class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header">
                    <i class="glyphicon glyphicon-book"></i>
                    <h3 class="box-title">Library Issued Books</h3>
                </div>
            
                <div class="box-body" style="overflow-y:scroll;">
                    <table id="example1" class="table table-responsive table-bordered table-condensed display" style="width:100%;">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Accession No.</th>
                                <th>Title</th>
                                <th>Issue Date</th>
                                <th>Retrun Date</th>
                                <th>Fine</th>
                            </tr>
                        </thead>
                        <tbody>
                            @{ int count = 1;
                                for (int i = 0; i < Model.BookHistory.Count(); i++)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(r => count)</td>
                                        <td>@Html.DisplayFor(r => Model.BookHistory[i].AccessionNo)</td>
                                        <td>@Html.DisplayFor(r => Model.BookHistory[i].BookTitle)</td>
                                        <td>@Html.DisplayFor(r => Model.BookHistory[i].IssueDate)</td>
                                        <td>@Html.DisplayFor(r => Model.BookHistory[i].ReturnDate)</td>
                                        <td>@Html.DisplayFor(r => Model.BookHistory[i].Fine)</td>

                                    </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>

            </div>
        </section>*@

        <section class="col-lg-6">
            <div class="box box-primary">
                <div class="box-header">
                    <i class="glyphicon glyphicon-user"></i>
                    <h3 class="box-title">Teachers</h3>
                </div>
                <div class="box-body chat slimScrollDiv_custom">
                    @for (int i = 0; i < Model.SubjectTeacherList.Count; i++)
                    {
                        if (string.IsNullOrEmpty(@Model.SubjectTeacherList[i].ImageUrl))
                        {
                            Model.SubjectTeacherList[i].ImageUrl = "Images/System/defaultUserImg.png";
                        }

                        <div class="item">
                            <img src="~/@Model.SubjectTeacherList[i].ImageUrl" alt="teacher image" class="">
                            <p class="message">
                                <a href="#" class="name">
                                    @Html.DisplayFor(r => Model.SubjectTeacherList[i].TeacherName)
                                </a>
                                <span class="minimize" title="@Html.DisplayFor(r => Model.SubjectTeacherList[i].SubjectName)"> @Html.DisplayFor(r => Model.SubjectTeacherList[i].SubjectName)</span>
                            </p>
                        </div>
                    }
                </div>
            </div>
        </section>
    </div>

</section>



<div id="myModal" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color:transparent;align-items:center;text-align:center">
            <img src="~/Images/System/HappyBirthday.jpg" />
        </div>
    </div>
</div>
@*<div id="InvitationModal1" class="modal fade">
    <div class="modal-dialog">
        <div class="modal-content" style="background-color:transparent;align-items:center;text-align:center">
            <img src="~/Images/System/Invitation1.jpg" class="img-responsive" />
        </div>
    </div>
</div>
<div id="InvitationModal2" class="  modal fade">
    <div class="col-xs-12 col-sm-12 col-md-12 modal-dialog">
        <div class="modal-content" style="background-color:transparent;align-items:center;text-align:center">
            <img src="~/Images/System/Invitation2.jpg" class="img-responsive" />
        </div>
    </div>
</div>
<div id="FarewellModal" class="  modal fade">
    <div class="col-xs-12 col-sm-12 col-md-12 modal-dialog">
        <div class="modal-content" style="background-color:transparent;align-items:center;text-align:center">
            <img src="~/Images/System/Farewell_Card.jpg" class="img-responsive" />
        </div>
    </div>
</div>*@



<script src="~/bower_components/newchart.js/amcharts.js"></script>
<script src="~/bower_components/newchart.js/export.min.js"></script>
<script src="~/bower_components/newchart.js/light.js"></script>
<script src="~/bower_components/newchart.js/pie.js"></script>
<script src="~/bower_components/newchart.js/serial.js"></script>
<link href="~/bower_components/newchart.css/export.css" rel="stylesheet" />


<script type="text/javascript">
    $(document).ready(
        function () {
        //********* BirthDay Message Start *************************
        var dob = @Model.DOB.ToString();
        var d = new Date();
        var month = d.getMonth() + 1;
        var day = d.getDate();
        var output = (day < 10 ? '0' : '') + day +'.' +
            (month < 10 ? '0' : '') + month

        if (dob == output)
        {
            $("#myModal").modal('show');
        }
        //********* BirthDay Message Start End*************************

        //********* Sport Day Invitation Start *************************
            @*if ('@Model.InvitationType.ToString()'== 'Invitation1') {
        //  $("#InvitationModal1").modal('show');
        //}
        //else
        //{
        //   $("#InvitationModal2").modal('show');
        //}*@

        //********* Sport Day Invitation End *************************

        //********* Farewell Card Start*************************
        @*if ('@Model.InvitationType.ToString()' == 'Farewell')
        {
            $("#FarewellModal").modal('show');
        }*@
        //********* Farewell Card Start*************************



});

</script>

<script>
    var chart = AmCharts.makeChart("chartdiv_sample", {
        "theme": "light",
        "type": "serial",
        "startDuration": 2,
        "dataProvider": [{
            "country": "Open Day",
            "visits": '@Model.AttenDetails.OD',
            "color": "#FF6600"
        }, {
            "country": "Present",
            "visits": '@Model.AttenDetails.P',
             "color": "#GG9F45"
        }, {
            "country": "Half Day",
            "visits": '@Model.AttenDetails.HalfDay',
            "color": "#FF9E01"
        }, {
            "country": "Absent",
            "visits": '@Model.AttenDetails.A',
            "color": "#FF0F00"
        }, {
            "country": "Leave",
            "visits": '@Model.AttenDetails.L',
            "color": "#FF9E90"
        }],
        "valueAxes": [{
            "position": "left",
            "axisAlpha": 0,
            "gridAlpha": 0
        }],
        "graphs": [{
            "balloonText": "[[category]]: <b>[[value]]</b>",
            "colorField": "color",
            "fillAlphas": 0.85,
            "lineAlpha": 0.1,
            "type": "column",
            "topRadius": 1,
            "valueField": "visits"
        }],
        "depth3D": 40,
        "angle": 30,
        "chartCursor": {
            "categoryBalloonEnabled": false,
            "cursorAlpha": 0,
            "zoomable": false
        },
        "categoryField": "country",
        "categoryAxis": {
            "gridPosition": "start",
            "axisAlpha": 0,
            "gridAlpha": 0

        },
        "export": {
            "enabled": true
        }

    }, 0);
</script>
<script>
    @*var chart = AmCharts.makeChart("chartdiv_sample1", {
        "type": "pie",
        "theme": "light",
        "dataProvider": [{
            "title": "Due",
            "value": '@Model.FeeSummary.PayableAmount'
        }, {
            "title": "Paid",
            "value": '@Model.FeeSummary.Paid'
            }, {
                "title": "Balance",
                "value": '@Model.FeeSummary.Balance'
            },
        {
            "title": "Excess",
            "value": '@Model.FeeSummary.Excess'
        }],
        "titleField": "title",
        "valueField": "value",
        "labelRadius": 5,

        "radius": "42%",
        "innerRadius": "60%",
        "labelText": "[[title]]",
        "export": {
            "enabled": true
        }
    });*@
</script>
<script>
    $(function () {
        $(".slimScrollDiv_custom").slimScroll({
            height: "150",
            size: "7px",
            alwaysVisible: false
        });
    });
</script>

<script>
    $(function () {
        $.ajax({
            type: "GET",
            url: "../DashBoard_StudentStatatics/GetStudentAttendanceDetails",
            data: { erpNo : '@Model.ERPNo'},
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (result) {
                var chart = AmCharts.makeChart("chartdiv_Attn", {
                    "theme": "light",
                    "type": "serial",
                    "dataProvider": result.staffAtten,
                    "valueAxes": [{
                        "stackType": "3d",
                        "unit": "",
                        "position": "left",
                        "title": "No of Days",
                    }],
                    "startDuration": 1,
                    "graphs": [{
                        "balloonText": "(Leave): <b>[[value]]</b>",
                        "fillAlphas": 2,
                        "lineAlpha": 1,
                        "title": "Leave",
                        "type": "column",
                        "valueField": "Leave"
                    }, {
                        "balloonText": "(Absent): <b>[[value]]</b>",
                        "fillAlphas": 40,
                        "lineAlpha": 2,
                        "title": "Absent",
                        "type": "column",
                        "valueField": "Absent"
                    },
                    {
                        "balloonText": "(Present): <b>[[value]]</b>",
                        "fillAlphas": 1,
                        "lineAlpha": 2,
                        "title": "Present",
                        "type": "column",
                        "valueField": "Present"
                    }],
                    "plotAreaFillAlphas": 1,
                    "depth3D": 40,
                    "angle": 30,
                    "categoryField": "Class",
                    "categoryAxis": {
                        "gridPosition": "start"
                    },
                    "export": {
                        "enabled": true
                    }
                });
            },
        })
    });
</script>


<script>
    $(function () {
        //Date range as a button
        $('#daterange-btn').daterangepicker(
          {
              ranges: {
                  'Today': [moment(), moment()],
                  'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                  'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                  'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                  'This Month': [moment().startOf('month'), moment().endOf('month')],
                  'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
              },
              startDate: moment(), //.subtract(29, 'days'),
              endDate: moment()
          },
          function (start, end) {
              $('#daterange-btn span').html(start.format('DD/MM/YYYY') + ' - ' + end.format('DD/MM/YYYY'))
          }
        )


    })


    $(function () {
        $('#example1').DataTable();
        fun_loadAttendence('@currentMonth', '@currentYear', '@Model.ERPNo');
    })

    function DispalyDetails(forType, uploadId) {
        $.  ajax
            ({
                url: "../" + forType + "/_DispalyToUser",
                type: 'GET',
                traditional: true,
                contentType: 'application/json',
                data: { UploadId: uploadId },
                success: function (result) {
                    OpenMessegeModal(result, '', 'lg', 'Communications Details');
                    return false;
                },
            });

        return false;
    }

    //function DispalyDetails(forType, uploadId) {
    //    $.ajax({
    //        type: "GET",
    //        beforeSend: function () {
    //            spinnerShow();
    //        },
    //        url: "../" + forType + "/_DispalyToUser",
    //        data: { UploadId: uploadId },
    //        error: function (xhr, status, error) {
    //            OpenMessegeModal('Some error occured please try after some time..!');
    //        },
    //        success: function (response) {
    //            OpenMessegeModal(response, '', 'lg', 'Dispaly ' + forType + ' Info');
    //        },
    //        complete: function () {
    //            spinnerHide();
    //        }
    //    });
    //}
</script>


<script>
    jQuery(function () {
        var minimized_elements = $('span.minimize');
        minimized_elements.each(function () {
            var t = $(this).text();
            if (t.length < 100) return;

            $(this).html(
                t.slice(0, 100) + '<span>... </span><a href="#" class="more">More</a>' +
                '<span style="display:none;">' + t.slice(100, t.length) + ' <a href="#" class="less">Less</a></span>'
            );

        });

        $('a.more', minimized_elements).click(function (event) {
            event.preventDefault();
            $(this).hide().prev().hide();
            $(this).next().show();
        });

        $('a.less', minimized_elements).click(function (event) {
            event.preventDefault();
            $(this).parent().hide().prev().show().prev().show();
        });

    });
</script>
<style>
    div#InvitationModal2 .modal-content img {
        margin: 0 auto;
        left: 85%;
        position: absolute;
        margin-top: 60px;
    }

    @@media only screen and (max-width: 1024px) {
        div#InvitationModal2 .modal-content img {
            position: static;
        }
    }

    div#FarewellModal .modal-content img {
        margin: 0 auto;
        left: 85%;
        position: absolute;
        margin-top: 60px;
    }

    @@media only screen and (max-width: 1024px) {
        div#FarewellModal .modal-content img {
            position: static;
        }
    }
</style>