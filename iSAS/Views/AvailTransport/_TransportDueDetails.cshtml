@model ISas.Entities.TransportEntities.AvailTransportModel
@{
    int rowlength = 0;
}
<table class="table table-condensed table-bordered table-hover table-responsive">
    <thead>
        <tr>
            <th>Installment</th>
            <th>Due Amtount</th>
            <th>Paid Amount</th>
            <th>Balance Amount</th>
            <th>Excess Amount</th>
            <th>Action</th>
        </tr>
    </thead>
    <thead>
        @if (Model != null && Model.DueList != null && Model.DueList.Count > 0)
        {
            rowlength = Model.DueList.Count;
            for (int i = 0; i < Model.DueList.Count; i++)
            {
                <tr id="editable_@i" style="display:none;">
                    <td>
                        @Html.HiddenFor(r => Model.DueList[i].TransRefNo)
                        @Html.HiddenFor(r => Model.DueList[i].HeadID)
                        @Html.HiddenFor(r => Model.DueList[i].DueDate)
                        @Html.HiddenFor(r => Model.DueList[i].AvailTransport)
                        @Html.HiddenFor(r => Model.DueList[i].WithDrawlTransport)
                        @Html.HiddenFor(r => Model.DueList[i].IsEditable)


                        @Html.DisplayFor(r => Model.DueList[i].HeadName)
                    </td>
                    <td>@Html.TextBoxFor(r => Model.DueList[i].Due, htmlAttributes: new { @class = "form-control", onchange = "CalculateRow(" + @i + ")" })</td>
                    <td>@Html.TextBoxFor(r => Model.DueList[i].Paid, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                    <td>@Html.TextBoxFor(r => Model.DueList[i].Balance, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                    <td>@Html.TextBoxFor(r => Model.DueList[i].Excess, htmlAttributes: new { @class = "form-control", @readonly = true, tabindex = "-1" })</td>
                    <td style="width:10%;" id="@i">
                        @if (Model.DueList[i].IsEditable)
                        {
                            <a href="#" onclick="$('#CRUDFor').val('SAVE'); $('#IsSingleSave').val(true); DoAjaxPostAndMore(this);" title="Save Transport Due" class="fa fa-check btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Save Transport Due" class="fa fa-check btnDefaultColorFaded"></span>
                        }

                        @if (Model.DueList[i].WithDrawlTransport)
                        {
                            <a href="#" onclick="ConfirmWithDrawTransport_Single(this)" title="Remove Transport" class="fa fa-remove btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Remove Transport" class="fa fa-remove btnDefaultColorFaded"></span>
                        }


                        @if (Model.DueList[i].AvailTransport)
                        {
                            <a href="#" onclick="ConfirmAvailTransport_Single(this)" title="Appy Transport" class="fa fa-plus btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Apply Transport" class="fa fa-plus btnDefaultColorFaded"></span>
                        }
                    </td>
                </tr>

                <tr id="displayOnly_@i" style="display:normal;">
                    <td>
                        @Html.DisplayFor(r => Model.DueList[i].HeadName)
                    </td>
                    <td>@Html.DisplayFor(r => Model.DueList[i].Due)</td>
                    <td>@Html.DisplayFor(r => Model.DueList[i].Paid)</td>
                    <td>@Html.DisplayFor(r => Model.DueList[i].Balance)</td>
                    <td>@Html.DisplayFor(r => Model.DueList[i].Excess)</td>
                    <td style="width:10%;" id="@i">
                        @if (Model.DueList[i].IsEditable)
                        {
                            <a href="#" onclick="EnableEditableRow('@i')" title="Edit Transport" class="fa fa-edit btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Edit Transport" class="fa fa-edit btnDefaultColorFaded"></span>
                        }

                        @if (Model.DueList[i].WithDrawlTransport)
                        {
                            <a href="#" onclick="ConfirmWithDrawTransport_Single(this)" title="Remove Transport" class="fa fa-remove btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Remove Transport" class="fa fa-remove btnDefaultColorFaded"></span>
                        }


                        @if (Model.DueList[i].AvailTransport)
                        {
                            <a href="#" onclick="ConfirmAvailTransport_Single(this)" title="Appy Transport" class="fa fa-plus btnDefaultColor"></a>
                        }
                        else
                        {
                            <span disabled="disabled" title="Apply Transport" class="fa fa-plus btnDefaultColorFaded"></span>
                        }
                    </td>
                </tr>
            }
        }
    </thead>
</table>

<script>
    $(document).ready(function () {
        $('#hddnRowLenght').val('@rowlength');
    });
</script>


