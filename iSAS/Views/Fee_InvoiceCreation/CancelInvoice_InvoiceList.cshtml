@model List<ISas.Entities.FeesEntities.CancelInvoice_InvoiceDetailsModel>

@using (Html.BeginForm("Fee_InvoiceCreation_CRUD", "Fee_InvoiceCreation", FormMethod.Post, htmlAttributes: new { }))
{
    <div class="box box-widget">
        <div class="box-body">
            <div class="row">
                <div class="col-md-2">
                    <label for="">@Html.Label("Reason")</label>
                </div>
                <div class="col-xs-12 col-sm-6 col-md-3">
                    <div class="form-group">
                        <div class="select">
                            @Html.DropDownList("ConcessionCategoryId", new SelectList(@ViewBag.feeConcList, "Value", "Text"), "--Select Reason--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;" })
                            @Html.ValidationMessage("ConcessionCategoryId", null, htmlAttributes: new { style = "color:red;" })
                        </div>
                    </div>
                </div>

                <div class="col-xs-12 col-sm-6 col-md-1">
                    <div class="input-group">
                        <input type="button" class="btn btn-primary btn-sm" value="Cancel Selected Receipt" onclick="CancelInvoice_Confirm(@ViewBag.ERPNo)"  />
                        
                    </div>
                </div>


            </div>
            <div class="row">
                <div class="col-md-12">
                    <table class="table table-hover table-responsive table-condensed" id="tblStudentList">
                        <thead>
                            <tr>
                                <th>#</th>
                                <th>Select</th>
                                <th>Invoice No</th>
                                <th>Duration</th>
                                <th>Amount</th>
                                <th>Paid</th>
                                <th>Invoice Status</th>
                                @*<th>Action</th>*@
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model != null && Model.Count > 0)
                            {
                                int count = 1;

                                for (int i = 0; i < Model.Count; i++)
                                {
                            <tr id="StudentList">
                                <td>
                                    @Html.DisplayFor(r => count)
                                </td>

                                @if (Model[i].IsCancelable)
                                {
                                    <td>@Html.CheckBoxFor(r => Model[i].IsSelected, htmlAttributes: new { id = "isSelect_" + @i })</td>

                                }
                                else
                                {
                                    <td>@Html.CheckBoxFor(r => Model[i].IsSelected, htmlAttributes: new { id = "isSelect_" + @i, disabled = "disabled" })</td>
                                }


                                <td>


                                    @Html.HiddenFor(r => Model[i].TransRefNo, htmlAttributes: new { id = "transRefNo_" + @i })
                                    @Html.DisplayFor(r => Model[i].TransRefNo)

                                </td>
                                <td>@Html.DisplayFor(r => Model[i].Duration)</td>
                                <td>@Html.DisplayFor(r => Model[i].Amount)</td>
                                <td>@Html.DisplayFor(r => Model[i].PaidAmount)</td>
                                <td>@Html.DisplayFor(r => Model[i].InvoiceStatus)</td>
                                @*<td>
            @if (Model[i].IsCancelable)
            {
                <a href="#" onclick="CancelInvoice_Confirm('@Model[i].ERPNo', '@Model[i].TransRefNo','YES');" title="Cancel Invoice" class="fa fa-remove btnDefaultColor"></a>
            }
            else
            {
                <span href="#" title="Cancel Invoice" class="fa fa-remove btnDefaultColorFaded"></span>
            }
        </td>*@
                            </tr>
                                    count++;
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
<script>
    function CancelInvoice_Confirm(erpNo) {
        var invoiceList = "";
        $('#tblStudentList > tbody > tr').each(function (i) {
            if ($('#isSelect_' + i).is(':checked')) {
                invoiceList += $('#transRefNo_' + i).val()+',';
            }
            });

        if ($('#ConcessionCategoryId').val() == null || $('#ConcessionCategoryId').val() == '') {
            OpenMessegeAutoHideDiv('Please select reason first..!', 'Info');
            return false;
        }
        var params = [erpNo, invoiceList];
        AsyncConfirmYesNo("Confirmation", "Are you sure to cancel invoice?", MyYesFunction, MyNoFunction, params);
    }


    function abc(ERPNo, studentName) {
        $.ajax({
            type: "GET",
            beforeSend: function () {
                spinnerShow();
            },
            url: "../Fee_InvoiceCreation/CancelInvoice_InvoiceList",
            data: { ERPNo: ERPNo },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                OpenModalWithSave(response, 'Edit Invoice For : ' + studentName)
                //$('#feeStrectureDetailsMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyYesFunction(params) {

        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../Fee_InvoiceCreation/CancelInvoice_CRUD',
            data: { ERPNo: params[0], TransRefNo: params[1], Conc_Category: $('#ConcessionCategoryId').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, response.Color);
                    setTimeout(function () { $('#mainModalWithSave').modal('toggle'); }, 1500);
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
    }

    function DoAjaxPostAndMore(btnClicked) {
        {
            if (parseInt($('#FeeStrectureCount').val()) > 0) {

                var $form = $(btnClicked).parents('form');
                $.ajax({
                    type: "POST",
                    beforeSend: function () {
                        spinnerShow();
                    },
                    url: $form.attr('action'),
                    data: $form.serialize(),
                    error: function (xhr, status, error) {
                        OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
                    },
                    success: function (response) {
                        if (response.status == 'success') {
                            OpenMessegeAutoHideDiv(response.Msg, response.Color);
                            getInvoiceDetailsList();
                        }
                        else {
                            AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                            AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                        }
                    },
                    complete: function () {
                        spinnerHide();
                    }
                });
            }
            else {

                OpenMessegeAutoHideDiv('No dues are available for this structure ..!', 'Info');
            }
        }


        return false;
    }
</script>

