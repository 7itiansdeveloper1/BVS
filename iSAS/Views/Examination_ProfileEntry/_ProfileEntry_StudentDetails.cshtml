@model ISas.Entities.Examination_Entities.Examination_ProfileEntryModels
@{
    int count = 1;
    string reportName = "Profile Entry";
}

<div style="display:none;">
    @{ Html.RenderAction("_ReportHeader", "Common", new { tempReportName = @reportName });}
</div>

<table id="example1" class="table table-responsive table-bordered table-condensed display nowrap" style="width:100%;">
    <thead>
        <tr>
            <th>#</th>
            <th>Adm No.</th>
            <th>Student</th>
            <th>Heigth</th>
            <th>Weigth</th>
            <th>Attendance</th>
            <th>PTM Attendance</th>
        </tr>
    </thead>
    <tbody>
        @for (int i = 0; i < Model.StudentDetails.Count; i++)
        {

            <tr>
                <td>
                    @Html.HiddenFor(r => Model.StudentDetails[i].ERPNo)
                    @Html.DisplayFor(r => count)
                </td>
                <td>@Html.DisplayFor(r => Model.StudentDetails[i].AdmNo)</td>
                <td>@Html.DisplayFor(r => Model.StudentDetails[i].Student)</td>
                <td><span class="hidden">@Html.DisplayFor(r => Model.StudentDetails[i].Hgt)</span> @Html.TextBoxFor(r => Model.StudentDetails[i].Hgt, htmlAttributes: new { @class = "form-control" })</td>
                <td><span class="hidden">@Html.DisplayFor(r => Model.StudentDetails[i].Wgt)</span> @Html.TextBoxFor(r => Model.StudentDetails[i].Wgt, htmlAttributes: new { @class = "form-control" })</td>
                <td>
                    <span class="hidden">@Html.DisplayFor(r => Model.StudentDetails[i].Attendance)</span>
                    @Html.TextBoxFor(r => Model.StudentDetails[i].Attendance, htmlAttributes: new { @class = "form-control", maxlength = "3", style = "width:35%;", placeholder = "ATTN.", onkeypress = "return NumericOnly(event)" })
                    @Html.TextBoxFor(r => Model.StudentDetails[i].Attendance1, htmlAttributes: new { @class = "form-control maxAttn", maxlength = "3", style = "width:35%;", placeholder = "MAX.", onkeypress = "return NumericOnly(event)" })
                </td>
                <td>
                    <span class="hidden">@Html.DisplayFor(r => Model.StudentDetails[i].PTMAttendance)</span>
                    @Html.TextBoxFor(r => Model.StudentDetails[i].PTMAttendance, htmlAttributes: new { @class = "form-control", maxlength = "2", style = "width:35%;", placeholder = "ATTN.", onkeypress = "return NumericOnly(event)" })
                    @Html.TextBoxFor(r => Model.StudentDetails[i].PTMAttendance1, htmlAttributes: new { @class = "form-control maxPTMAttn", maxlength = "2", style = "width:35%;", placeholder = "MAX.", onkeypress = "return NumericOnly(event)" })
                </td>
            </tr>
            count++;
        }
    </tbody>
</table>
<script>



    $("#example1 tr").click(function (evt) {
        if (evt.ctrlKey) {
            $(this).toggleClass("selected");
        } else {
            var selected = $(this).hasClass("selected");
            $("#example1 tr").removeClass("selected");
            if (!selected)
                $(this).addClass("selected");
        }
    });




     $(document).ready(function () {
        $('#example1').DataTable({
            "pageLength": 50,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'copyHtml5',
                    text: '<i class="fa fa-files-o"></i>',
                    titleAttr: 'Copy',
                    title: '@reportName',
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                {
                    extend: 'excelHtml5',
                    text: '<i class="fa fa-file-excel-o"></i>',
                    titleAttr: 'Excel',
                    title: '@reportName',
                    fnCellRender : function (sValue, iColumn, nTr, iDataIndex) {
                        console.log(sValue);
                        // Append the text 'TableTools' to column 5
                        //if (iColumn === 5) {
                        //    return sValue + " TableTools";
                        //}
                        return sValue;
                    },
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function (xlsx) {
                     //console.log(xlsx);
                    }
                },
                {
                    extend: 'print',
                    text: '<i class="fa fa-print"></i>',
                    titleAttr: 'Print',
                    title: "",
                    fnCellRender: function (sValue, iColumn, nTr, iDataIndex) {
                        console.log(sValue);
                        // Append the text 'TableTools' to column 5
                        //if (iColumn === 5) {
                        //    return sValue + " TableTools";
                        //}
                        return sValue;
                    },
                    exportOptions: {
                        columns: ':visible'
                    },
                    customize: function (win) {
                        $(win.document.body)
                            //.css('font-size', '10pt')
                            .prepend($('#reportHeaderDiv').html()); //'<img src="http://localhost:60254/Images/System/balVikasLog.jpg" style="" />'
                        $(win.document.body).find('table')
                            .addClass('compact')
                            .css('font-size', 'inherit');
                    }
                },
                'colvis'
            ],
            select: true
        });
    });




</script>

<script>
    $(function () {
        $('.select2').select2()
    })
</script>