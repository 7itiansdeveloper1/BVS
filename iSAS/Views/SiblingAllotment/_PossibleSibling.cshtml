@model ISas.Entities.Student_Entities.SiblingAllotmentModels

<div class="box-body">
    <div class="row">
        <div class="col-md-12">

            <div class="row">
                <div class="col-md-10">
                    <div class="form-group">
                        <table id="exampleSibling" class="table table-bordered table-striped">
                            <thead>
                                <tr>

                                    <th>Student Name</th>
                                    <th>Class</th>
                                    <th>Is Sibling?</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model != null && Model.possibleSiblingList.Count > 0)
                                {
                                    int count = 1;
                                    for (int i = 0; i < Model.possibleSiblingList.Count; i++)
                                    {
                                <tr class="editable" id="editable_@i">

                                    <td>
                                        <span>
                                            @Model.possibleSiblingList[i].SiblingName
                                        </span>

                                    </td>
                                    <td>
                                        <span>
                                            @Model.possibleSiblingList[i].SiblingClass
                                        </span>
                                    </td>
                                    <td>
                                        @Html.HiddenFor(r => Model.possibleSiblingList[i].SiblingERP)
                                        @Html.CheckBoxFor(r => Model.possibleSiblingList[i].isSelected, htmlAttributes: new { })
                                    </td>
                                </tr>
                                        count++;
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>

            </div>

            <div class="row">
                <div class="col-md-2">
                    <input type="button" value="SAVE" class="btn btn-success" onclick="DoAjaxPostAndMore(this)" />
                </div>
            </div>
        </div>
    </div>

</div>



<script>

    
    function DoAjaxPostAndMore(btnClicked) {

        var siblingerpno="";
                $('#exampleSibling tbody tr').each(function (index,value){
                if($(this).find(":checkbox").is(':checked'))
                     {
                      if(siblingerpno==""){ siblingerpno=$(this).find('td input[type=hidden]'). val();}
                      else{siblingerpno=siblingerpno+',' +$(this).find('td input[type=hidden]'). val();}
                     }
         })

            //console.log(siblingerpno);
            
    
    $.ajax({
               type: "POST",
               beforeSend: function () {
                   spinnerShow();
               },
               url: '../SiblingAllotment/SiblingAllotment_CRUD',
               data: {selecteERPNo :'@Model.ERPNo',siblingERPNo:siblingerpno },
               error: function (xhr, status, error) {
                   OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
               },
            
               success: function (response) {
                debugger
                   if (response.status == 'success') {
                        OpenMessegeAutoHideDiv(response.Msg, response.Color);
                        $('#mainModalWithSave').modal('toggle');
                        $(window).bind("../SiblingAllotment/_SiblingAllotment", GetStudentList());
                   } 
                    else {
                       OpenMessegeAutoHideDiv($('#ErrorMsgOnModelStateNotValid').val());
                       AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                       AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                   }
               },
               complete: function () {
                   spinnerHide();
               }
           });
    }



</script>