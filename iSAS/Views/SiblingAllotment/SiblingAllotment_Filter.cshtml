@model ISas.Entities.Student_Entities.SiblingAllotmentModels
@{
    ViewBag.Title = "New";
}

<section class="content-header">
    <h1>
        Sibling Allotment
    </h1>
    <ol class="breadcrumb">
        <li>
            <a href="#" onclick="window.location.reload()" title="Refresh"><i class="fa fa-refresh"></i></a> |
            <a href="javascript: history.go(-1)" title="Back"><i class="fa fa-arrow-left"></i> </a> |
            <a href="@Url.Action("Dashboard", "Dashboard")" title="Dashboard"><i class="fa fa-dashboard"></i></a>
        </li>
        <li>Student</li>
        <li>Sibling Allotment</li>
    </ol>
</section>
<section class="content">
    @using (Html.BeginForm("SiblingAllotment_CRUD", "SiblingAllotment", FormMethod.Post, htmlAttributes: new { @class = "form" }))
    {
        @Html.HiddenFor(r => Model.ERPNo)
        @Html.HiddenFor(r => Model.SiblingIds)

        <div class="box box-primary">
            <div class="box-body">
                <div class="row">
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.ClassId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.ClassId, new SelectList(Model.ClassList, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "getSectionListByClass('ClassId', 'SectionId')" })
                                @Html.ValidationMessageFor(r => Model.ClassId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12 col-sm-6 col-md-2">
                        <div class="form-group">
                            <label for="">@Html.LabelFor(r => Model.SectionId)</label>
                            <div class="select">
                                @Html.DropDownListFor(m => m.SectionId, new SelectList(string.Empty, "Value", "Text"), "--Select--", htmlAttributes: new { @class = "form-control select2", style = "width:100%;", onchange = "GetStudentList()" })
                                @Html.ValidationMessageFor(r => Model.SectionId, null, htmlAttributes: new { style = "color:red;" })
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div id="studentDetailMainDiv">

                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</section>
<script>
    function GetStudentList() {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SiblingAllotment/_SiblingAllotment',
            data: { ClassId: $('#ClassId').val(), SectionId: $('#SectionId').val()},
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#studentDetailMainDiv').html(response);
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function getSiblingFilter(selectedRow, selectedERP,selectedStudentName) {
        $('#ERPNo').val('')
        $('#SiblingIds').val('');
        $('.clsBtnSiblingAllotment').prop('disabled', true);

        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SiblingAllotment/_StudentSearchByProperty',
            data: { selectedRow: selectedRow },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                $('#ERPNo').val(selectedERP);
                OpenMessegeModal(response, 'Primary', 'lg', 'Search Sibling')
            },
            complete: function () {
                spinnerHide();
            }
        });
    }

    function getSiblingFilter_V1(selectedERP, selectedStudentName) {

        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SiblingAllotment/_PossibleSibling',
            data: {
                studentERP: selectedERP,studentName: selectedStudentName            },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                OpenModalWithSave(response,  'Sibling Allotment for '+selectedStudentName)
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function addSiblingConfirm() {
        AsyncConfirmYesNo("Confirmation", "This process can't rollback, are you sure to add..?", MyYesFunction, MyNoFunction, "");
    }

    function MyYesFunction() {
        $.ajax({
            type: "POST",
            beforeSend: function () {
                spinnerShow();
            },
            url: '../SiblingAllotment/SiblingAllotment_CRUD',
            data: { ERPNo: $('#ERPNo').val(), SiblingIds: $('#SiblingIds').val() },
            error: function (xhr, status, error) {
                OpenMessegeAutoHideDiv($('#ErrorMsgOnJasonFailed').val(), 'Danger');
            },
            success: function (response) {
                if (response.status == 'success') {
                    OpenMessegeAutoHideDiv(response.Msg, 'Success');
                    GetStudentList();
                }
                else {
                    AddErrorAttributeCSS(response.ErrorList); //Available in CustomCommon.js
                    AddValidAttributeCSS(response.ValidKeyList); //Available in CustomCommon.js
                }
            },
            complete: function () {
                spinnerHide();
            }
        });
    }
    function MyNoFunction() {
        //alert('No Calling');
    }

    function addSiblingTemp(siblingERPNo, siblingName, selectedRow) {
        var lblSiblingName = $('#lblSiblingName_' + selectedRow).html(); var siblingIds = $('#SiblingIds').val();
        if (siblingIds == null || siblingIds == "") {
            $('#SiblingIds').val(siblingERPNo);
        } else {
            siblingIds += "," + siblingERPNo;
            $('#SiblingIds').val(siblingIds);
        }

        if (lblSiblingName == null || lblSiblingName == "") {
            $('#lblSiblingName_' + selectedRow).html(siblingName);
        } else {
            lblSiblingName += ", " + siblingName;
            $('#lblSiblingName_' + selectedRow).html(lblSiblingName);
        }

        $('.clsBtnSiblingAllotment').prop('disabled', true);
        $('#btnSiblingAttotment_' + selectedRow).prop('disabled', false);

        $('#addedSibling').html('');
        $('#addedSibling').html($('#lblSiblingName_' + selectedRow).html());
    }
    
</script>

