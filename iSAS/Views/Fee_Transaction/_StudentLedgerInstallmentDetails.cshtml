@model ISas.Entities.FeesEntities.Fee_StudentLedgerModel

@{
    string reportName = "Student Ledger";
}
<div style="display:none;">
    @{
        Html.RenderAction("_ReportHeader", "Common", new { tempReportName = reportName });
    }
</div>
<div class="box-body table-responsive no-padding">
    <table id="example2" class="table table-responsive table-bordered table-condensed nowrap" style="width:100%;overflow-y:auto;">
        <thead>
            <tr>
                <th>#</th>
                <th>Head Name</th>
                <th>Payable</th>
                <th>Paid</th>
                <th>Balance</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.InstallmentDetailsList)
            {
                <tr>
                    <td>@item.Sno</td>
                    <td>@item.HeadName</td>
                    <td>@item.Payable</td>
                    <td>@item.ActualPaid</td>
                    <td>@item.Balance</td>
                </tr>
            }

        </tbody>

    </table>
</div>

<script>
    $("#example1 tr").click(function (evt) {
        if (evt.ctrlKey) {
            $(this).toggleClass("selected");
        } else {
            var selected = $(this).hasClass("selected");
            $("#example1 tr").removeClass("selected");
            if (!selected)
                $(this).addClass("selected");
        }
    });

    $(document).ready(function () {
        $('#example2').DataTable({
            "pageLength": 10,
            "ordering": false,
            dom: 'Bfrtip',
            buttons: [
                {
                    extend: 'pdfHtml5',
                    text: '<i class="fa fa-file-pdf-o"></i>',
                    titleAttr: 'Download Ledger',
                    extension: ".pdf",
                    //filename: "name",
                    pageSize:"A4",
                    title: "",
                    orientation: 'landscape', //'portrait',
                    customize: function (doc) {
                        doc.styles.tableHeader = {
                            color: 'black',
                            background: 'grey',
                            alignment: 'center'
                        }


                        var logo = '@ViewBag.ImageData';
                        doc.pageMargins = [20, 60, 20, 30];
                        doc['header'] = (function () {
                            return {
                                columns: [
                                    {
                                        image: logo,
                                        width: 60,
                                        height: 60,
                                        alignment: 'center',
                                    },
                                    {
                                        alignment: 'center',
                                        italics: true,
                                        text: '@ViewBag.HeaderInfo.Header1',
                                        fontSize: 24,
                                        margin: [10, 0]
                                    }
                                ],
                                margin: 20
                            }
                        });


                        doc.styles = {
                            subheader: {
                                fontSize: 10,
                                bold: true,
                                color: 'black'
                            },
                            tableHeader: {
                                bold: true,
                                fontSize: 10.5,
                                color: 'black'
                            },
                            lastLine: {
                                bold: true,
                                fontSize: 11,
                                color: 'blue'
                            },
                            defaultStyle: {
                                fontSize: 10,
                                color: 'black'
                            },

                        }

                        var objLayout = {};
                        objLayout['hLineWidth'] = function (i) { return .8; };
                        objLayout['vLineWidth'] = function (i) { return .5; };
                        objLayout['hLineColor'] = function (i) { return '#aaa'; };
                        objLayout['vLineColor'] = function (i) { return '#aaa'; };
                        objLayout['paddingLeft'] = function (i) { return 8; };
                        objLayout['paddingRight'] = function (i) { return 8; };
                        doc.content[0].layout = objLayout;

                       



                        doc.content.splice(0, 0, {
                            text: [
                                { text: '@reportName - @Model.Student ' + '(' + '@Model.ClassName' + ')', italics: true, fontSize: 14 }
                            ],
                            margin: [0, 0, 0, 2],
                            alignment: 'center'
                        });

                        doc.content.splice(1, 0, {
                            table: {
                                widths: ["*", "*", "*", "*", "*"],
                                body: [
                                    [
                                        { text: 'Adm No : @Model.AdmNo', bold: true, fontSize: 10 },
                                        { text: 'Student : @Model.Student ', bold: true, fontSize: 10 },
                                        { text: 'Father : @Model.Father', bold: true, fontSize: 10 },
                                    ]
                                ]
                            },

                            margin: [0, 30, 0, 12],
                            alignment: 'left'
                        });

                        doc.content.splice(3, 3, {
                            table: {
                                widths: ["*", "*", "*", "*", "*", "*"],
                                body: [
                                    [
                                        { text: 'Opening : @Model.Due', bold: true, fontSize: 10 },
                                        { text: 'Discount : @Model.discount', bold: true, fontSize: 10 },
                                        { text: 'Fee Paid : @Model.ActualPaid ', bold: true, fontSize: 10 },
                                        { text: 'Credit Note : @Model.Concession', bold: true, fontSize: 10 },
                                        { text: 'Closing : @Model.Balance', bold: true, fontSize: 10 },
                                    ]
                                ]
                            },

                            margin: [0, 5, 0, 12],
                            alignment: 'left'
                        });

                        //doc.content[2].table.widths = [15, "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*", "*"];

                        doc.content[2].table.widths = [15, 45, 45, 30, 30, 35, 30, 42, 40, 40, 45, 40, 30, 35, 50];

                        //doc.content[2].table.widths = '*'
                        //    Array(doc.content[2].table.body[0].length + 1).join('*').split('');
                    },
                    exportOptions: {
                        columns: ':visible'
                    }
                },
                //'colvis'
            ],
            select: true
        });
    });
</script>